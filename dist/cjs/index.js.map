{
  "version": 3,
  "sources": ["../../src/index.ts", "../../src/components/Alert/Alert.tsx", "../../src/components/Avatar/Avatar.tsx", "../../src/utils/tailwindClasses.tsx", "../../src/components/Badge/Badge.tsx", "../../src/components/Banner/Banner.tsx", "../../src/components/Banner/Banner.Animated.tsx", "../../src/components/Banner/Animation/Animation.js", "../../src/components/Button/Button.tsx", "../../src/components/HeroIcon/HeroIcon.tsx", "../../src/components/Link/Link.tsx", "../../src/components/Calendar/Calendar.tsx", "../../src/components/Loaders/CardLoader/CardLoader.tsx", "../../src/components/DropDown/DropDown.tsx", "../../src/components/ListingItems/DetailsItem/DetailsItem.tsx", "../../src/components/Loaders/EventLoader/EventLoader.tsx", "../../src/components/ListingItems/EventItem/EventItem.tsx", "../../src/components/Cards/EventCard/EventCard.tsx", "../../src/components/EventLocation/EventLocation.tsx", "../../src/components/Filter/Filter.tsx", "../../src/components/Footer/FooterBasic/FooterBasic.tsx", "../../src/components/Footer/FooterWave/FooterWave.tsx", "../../src/components/Footer/FooterStandard/FooterStandard.tsx", "../../src/components/Footer/FooterStandard/FooterStandardData.tsx", "../../src/components/ListingItems/FeedItem/FeedItem.tsx", "../../src/components/ListingItems/FileItem/FileItem.tsx", "../../src/components/ListingItems/JobItem/JobItem.tsx", "../../src/components/ListingItems/LinkItem/LinkItem.tsx", "../../src/components/LocationPicker/LocationPicker.tsx", "../../src/components/Modal/Modal.tsx", "../../src/components/Meta/Meta.tsx", "../../src/components/ListingItems/MarketplaceItem/MarketplaceItem.tsx", "../../src/components/Cards/NewsCard/NewsCard.tsx", "../../src/components/Cards/NumberCard/NumberCard.tsx", "../../src/components/ListingItems/NewsItem/NewsItem.tsx", "../../src/components/Pagination/Pagination.tsx", "../../src/hooks/usePagination.ts", "../../src/components/SocialShare/SocialShare.tsx", "../../src/components/SearchForm/SearchForm.tsx", "../../src/components/Toast/Toast.tsx", "../../src/components/TopNav/TopNav.tsx", "../../src/components/Search/Search.tsx", "../../src/components/Table/Table.tsx", "../../src/components/Table/TableHeader.tsx", "../../src/components/Table/TableRows.tsx", "../../src/hooks/useSortableTable.tsx", "../../src/components/Cards/VideoCard/VideoCard.tsx", "../../src/layouts/Article/Article.tsx", "../../src/layouts/Aside/Aside.tsx", "../../src/layouts/Column/Column.tsx", "../../src/layouts/Container/Container.tsx", "../../src/layouts/Main/Main.tsx", "../../src/layouts/Panel/Panel.tsx", "../../src/layouts/StackedList/StackedList.tsx"],
  "sourcesContent": ["export * from './components'\nexport * from './layouts'\n", "import React, { Fragment, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    InformationCircleIcon,\n    ShieldExclamationIcon,\n} from '@heroicons/react/24/outline'\nimport { XMarkIcon } from '@heroicons/react/20/solid'\n\nexport interface AlerterProps {\n    children?: any\n}\n\nexport interface AlertBaseProps {\n    children?: any\n    type: 'success' | 'error' | 'warning' | 'info'\n}\n\nexport interface AlertTitleProps {\n    children?: any\n}\n\nexport interface AlertContentProps {\n    children?: any\n}\n\nconst Alerter = ({ children }: AlerterProps) => {\n    return (\n        <div aria-live='assertive' className='not-prose top-20'>\n            <div className='items-center w-full space-y-4 sm:items-end'>{children}</div>\n        </div>\n    )\n}\n\nconst Title = ({ children }: AlertTitleProps) => {\n    return <h3 className='text-sm font-medium'>{children}</h3>\n}\n\nconst Content = ({ children }: AlertContentProps) => {\n    return <div className='mt-2 text-sm'>{children}</div>\n}\n\nconst AlertBase = ({ children, type }: AlertBaseProps) => {\n    const [showAlert, setShowAlert] = useState(true)\n\n    const AlertTypes = {\n        success: {\n            icon: CheckCircleIcon,\n            text: 'text-green-600',\n            bg: 'bg-green-50',\n        },\n        warning: {\n            icon: ShieldExclamationIcon,\n            text: 'text-yellow-600',\n            bg: 'bg-yellow-50',\n        },\n        error: {\n            icon: ExclamationCircleIcon,\n            text: 'text-cu-red-600',\n            bg: 'bg-cu-red-50',\n        },\n        info: {\n            icon: InformationCircleIcon,\n            text: 'text-blue-600',\n            bg: 'bg-blue-50',\n        },\n    }\n\n    return (\n        <Transition\n            show={showAlert}\n            as={Fragment}\n            enter='transform ease-out duration-300 transition'\n            enterFrom='translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2'\n            enterTo='translate-y-0 opacity-100 sm:translate-x-0'\n            leave='transition ease-in duration-100'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n        >\n            <div className={`rounded-md ${AlertTypes[type].bg} p-4`}>\n                <div className='flex'>\n                    <div className='flex-shrink-0'>\n                        {React.createElement(AlertTypes[type].icon, {\n                            className: `h-5 w-5 ${AlertTypes[type].text}`,\n                            'aria-hidden': 'true',\n                        })}\n                    </div>\n                    <div className={`ml-3 ${AlertTypes[type].text}`}>{children}</div>\n                    <div className='pl-3 ml-auto'>\n                        <div className='-mx-1.5 -my-1.5'>\n                            <button\n                                type='button'\n                                className={`inline-flex rounded-md ${AlertTypes[type].bg} p-1.5 ${AlertTypes[type].text} hover:${AlertTypes[type].bg} focus:outline-none focus:ring-2 focus:ring-offset-2`}\n                                onClick={() => {\n                                    setShowAlert(false)\n                                }}\n                            >\n                                <span className='sr-only'>Dismiss</span>\n                                <XMarkIcon className='w-5 h-5' aria-hidden='true' />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Transition>\n    )\n}\n\nAlertBase.displayName = 'Alert'\nTitle.displayName = 'Alert.Title'\nContent.displayName = 'Alert.Content'\n\nexport const Alert = Object.assign(AlertBase, {\n    Alerter,\n    Title,\n    Content,\n})\n", "import React from 'react'\nimport { UserInfoType } from '../../types/UserInfo'\nimport { rdsRounded, rdsBorderWidth, rdsBorderColor } from '../../utils/tailwindClasses'\n\nexport interface AvatarProps {\n    size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '4xl'\n    rounded?: 'lg' | 'full'\n    borderWidth?: '1' | '2' | '4' | '8'\n    borderColor?: 'black' | 'white' | 'red' | 'grey' | 'dark-grey'\n    hasShadow?: boolean\n    user: UserInfoType\n    onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void\n}\n\nconst styles = {\n    core: `not-prose inline-block bg-white text-cu-black-800 overflow-hidden focus:ring-2 focus:ring-cu-black-100 focus:ring-offset-2`,\n    'no-image': `bg-cu-black-100 flex items-center justify-center font-semibold`,\n    shadow: `shadow-lg`,\n}\n\nconst avatarSizes = {\n    xs: `text-xs h-8 w-8`,\n    sm: `text-base h-16 w-16`,\n    md: `text-lg h-24 w-24`,\n    lg: `text-2xl h-32 w-32`,\n    xl: `text-4xl h-40 w-40`,\n    '2xl': `text-6xl h-48 w-48`,\n    '4xl': 'text-7xl h-56 w-56',\n}\n\nexport const Avatar = ({\n    size = 'xl',\n    rounded,\n    borderWidth,\n    borderColor,\n    hasShadow,\n    user,\n    onClick,\n}: AvatarProps) => {\n    const { firstName, lastName, image } = user\n    const initials = `${firstName.split('')[0]}${lastName.split('')[0]}`\n    const shadowStyle = hasShadow ? styles.shadow : ''\n    const roundedStyle = rounded ? rdsRounded[rounded] : ''\n    const borderWidthStyle = borderWidth ? rdsBorderWidth[borderWidth] : ''\n    const borderColorStyle = borderColor ? rdsBorderColor[borderColor] : ''\n    const hasOnClick = onClick ? 'cursor-pointer' : ''\n\n    return (\n        <>\n            {image && (\n                <img\n                    className={`${styles.core} ${avatarSizes[size]} ${roundedStyle} ${borderWidthStyle} ${borderColorStyle} ${borderColorStyle} ${shadowStyle} ${hasOnClick}`}\n                    src={image.src}\n                    alt={image.alt || `Avatar of ${firstName} ${lastName}`}\n                    aria-hidden='true'\n                />\n            )}\n\n            {!image && (\n                <div\n                    className={`${styles.core} ${styles['no-image']} ${avatarSizes[size]} ${roundedStyle} ${borderWidthStyle} ${borderColorStyle} ${borderColorStyle} ${shadowStyle} ${hasOnClick}`}\n                >\n                    {initials}\n                </div>\n            )}\n        </>\n    )\n}\n", "export const rdsMaxWidth = {\n    none: 'max-w-none',\n    full: 'max-w-full',\n    '5xl': 'max-w-5xl',\n    '7xl': 'max-w-7xl',\n}\n\nexport const rdsMaxWidthChildren = {\n    none: '[&>*]:max-w-none',\n    full: '[&>*]:max-w-full',\n    '5xl': '[&>*]:max-w-5xl',\n    '7xl': '[&>*]:max-w-7xl',\n}\n\nexport const rdsOverlay = 'bg-cu-black/30'\n\nexport const rdsGridColumns = {\n    '1': '',\n    '2': 'md:grid-cols-2',\n    '3': 'md:grid-cols-3',\n    '4': 'md:grid-cols-2 lg:grid-cols-4',\n    '1/3': 'lg:grid-cols-3 lg:[&>*:last-child]:col-span-2',\n    '2/3': 'lg:grid-cols-3 lg:[&>*:first-child]:col-span-2',\n}\n\nexport const rdsGridSpacing = {\n    '0': 'gap-0', // none\n    '5': 'gap-5', // 20px\n    '10': 'gap-10', // 40px\n}\n\nexport const rdsBgColor = {\n    none: 'bg-transparent',\n    black: 'bg-cu-black-800',\n    white: 'bg-white',\n    red: 'bg-cu-red',\n    grey: 'bg-cu-black-50',\n    'dark-grey': 'bg-cu-black-600',\n}\n\nexport const rdsTextColor = {\n    black: 'text-cu-black-800',\n    white: 'text-white',\n    red: 'text-cu-red',\n    grey: 'text-cu-black-50',\n    'dark-grey': 'text-cu-black-600',\n    green: 'text-green-400',\n    yellow: 'text-yellow-400',\n}\n\nexport const rdsFontSizes = {\n    base: 'md:text-base',\n    lg: 'md:text-lg',\n    xl: 'md:text-xl',\n    '4xl': 'md:text-4xl',\n    '5xl': 'md:text-5xl',\n    '6xl': 'md:text-6xl',\n}\n\nexport const rdsWidth = {\n    4: 'w-4',\n    5: 'w-5',\n    6: 'w-6',\n    7: 'w-7',\n    8: 'w-8',\n    12: 'w-12',\n    16: 'w-16',\n    20: 'w-20',\n    24: 'w-24',\n}\n\nexport const rdsHeight = {\n    4: 'h-4',\n    5: 'h-5',\n    6: 'h-6',\n    7: 'h-7',\n    8: 'h-8',\n    12: 'h-12',\n    16: 'h-16',\n    20: 'h-20',\n    24: 'h-24',\n}\n\nexport const rdsRounded = {\n    base: 'rounded',\n    md: 'rounded-md',\n    lg: 'rounded-lg',\n    xl: 'rounded-xl',\n    full: 'rounded-full',\n}\n\nexport const rdsBorderWidth = {\n    1: 'border',\n    2: 'border-2',\n    4: 'border-4',\n    8: 'border-8',\n}\n\nexport const rdsBorderColor = {\n    black: 'border-cu-black-800',\n    white: 'border-white',\n    red: 'border-cu-red',\n    grey: 'border-cu-black-50',\n    'dark-grey': 'border-cu-black-600',\n}\n\nexport const rdsTopSpacing = {\n    '8': 'top-8',\n    '12': 'top-12',\n    '16': 'top-16',\n    '20': 'top-20',\n    '24': 'top-24',\n}\n", "import React from 'react'\n\nexport interface BadgeProps {\n    children?: React.ReactNode\n}\n\nconst styles = {\n    badge: `not-prose inline-flex px-2 mr-2 text-xs font-semibold rounded-xl bg-cu-black-50 text-cu-black-900 last:mr-0`,\n}\n\nconst BadgeBase = ({ children }: BadgeProps) => {\n    return <p className={`${styles.badge}`}>{children}</p>\n}\n\nBadgeBase.displayName = 'LinkItem'\n\nexport const Badge = Object.assign(BadgeBase, {})\n", "import React from 'react'\nimport { rdsFontSizes, rdsMaxWidth } from '../../utils/tailwindClasses'\nimport { BannerAnimated } from './Banner.Animated'\n\nexport interface BannerProps {\n    children?: React.ReactNode\n    title?: string\n    paragraph?: string\n    fontSize?: '5xl' | '6xl'\n    maxWidth?: 'none' | 'full' | '5xl' | '7xl'\n    isType?: 'light-grey' | 'light-fade' | 'dark-wave' | 'red-wave' | 'image' | 'animated'\n    align?: 'center' | 'left'\n    hasOverlap?: boolean\n    image?: string\n    imageAlt?: string\n}\n\nexport interface BannerImgProps {\n    image?: string\n    imageAlt?: string\n}\n\nconst styles = {\n    core: `not-prose relative py-16 md:py-32 md:flex md:items-center md:px-8 md:min-h-[240px]`,\n    buttonWrapper: `flex gap-6 flex-wrap md:flex-1`,\n    overlap: `md:pb-32 md:pt-20`,\n}\n\nconst typeStyles = {\n    'light-grey': `bg-cu-black-50 text-cu-black-800`,\n    'light-fade': `bg-gradient-to-b from-white to-cu-black-50 text-cu-black-800`,\n    'dark-wave': `bg-cu-black-800 text-white`,\n    'red-wave': `bg-gradient-to-b from-cu-red to-cu-red-900 text-white`,\n    animated: `bg-white text-cu-black-800`,\n    image: `bg-cu-black-800 text-white md:py-48`,\n}\n\nconst contentStyles = {\n    title: `font-semibold text-3xl`,\n    paragraph: `text-base lg:text-xl max-w-5xl`,\n}\n\nconst BannerBase = ({\n    children,\n    title,\n    paragraph,\n    maxWidth = '5xl',\n    isType = 'light-grey',\n    fontSize = '5xl',\n    align = 'center',\n    hasOverlap,\n    image,\n    imageAlt = 'Decorative background image',\n}: BannerProps & BannerImgProps) => {\n    const bannerSpacing = isType === 'image' ? 'md:py-48' : 'md:py-32'\n\n    const flexAlign =\n        align === 'center'\n            ? 'flex-col last:[&>*]:justify-center'\n            : 'flex-col md:flex-row last:[&>*]:justify-center last:md:[&>*]:justify-end'\n\n    const hasParaAndButtons = paragraph && children ? ' md:max-w-3xl md:w-8/12' : ''\n\n    const contentAlign =\n        align === 'center' ? 'text-center' : 'text-center md:text-left' + hasParaAndButtons\n\n    let overlapStyles = hasOverlap ? styles.overlap : ''\n\n    if (hasOverlap && isType === 'image') {\n        overlapStyles = 'md:pb-48 md:pt-40'\n    }\n\n    //   const overlapStyles2 =\n    //     hasOverlap && isType !== image ? styles.overlap : 'md:pb-48';\n\n    //   alert(overlapStyles);\n\n    return (\n        <>\n            <header\n                className={`${styles.core} ${typeStyles[isType]} ${bannerSpacing} ${overlapStyles}`}\n                id='banner'\n            >\n                <div\n                    className={`z-10 flex flex-1 ${flexAlign} items-center justify-center gap-8 m-auto ${rdsMaxWidth[maxWidth]} [&>*]:z-10`}\n                >\n                    <div className={`flex flex-auto flex-col gap-6 ${contentAlign}`}>\n                        <h1 className={`${contentStyles.title} ${rdsFontSizes[fontSize]}`}>\n                            {title}\n                        </h1>\n                        {paragraph && <p className={contentStyles.paragraph}>{paragraph}</p>}\n                    </div>\n                    {children}\n                </div>\n\n                {isType === 'image' && <BannerImg image={image} imageAlt={imageAlt} />}\n                {isType === 'dark-wave' && <BannerWave />}\n                {isType === 'red-wave' && <BannerWave />}\n                {isType === 'animated' && <BannerAnimated />}\n            </header>\n        </>\n    )\n}\n\nconst BannerImg = ({ image, imageAlt }: BannerImgProps) => {\n    return (\n        <div className='absolute inset-0'>\n            <img className='object-cover w-full h-full' src={image} alt={imageAlt} />\n            <div\n                className='absolute inset-0 bg-cu-black-800 mix-blend-multiply'\n                aria-hidden='true'\n            />\n        </div>\n    )\n}\n\nconst BannerWave = () => {\n    return (\n        <div className='absolute inset-0 bg-bottom bg-no-repeat bg-contain bg-cu-waves-white-10 md:bg-cover'></div>\n    )\n}\n\nconst ButtonGroup = ({ children }: BannerProps) => {\n    return <div className={`buttons ${styles.buttonWrapper}`}>{children}</div>\n}\n\nexport const Banner = Object.assign(BannerBase, {\n    ButtonGroup,\n})\n\nBannerBase.displayName = 'Banner'\nButtonGroup.displayName = 'Banner.ButtonGroup'\n", "import React, { useEffect, useRef } from 'react'\nimport { Animation } from './Animation/Animation.js'\n\nexport const BannerAnimated = () => {\n    const gradient = new Animation()\n    const canvasRef = useRef<HTMLCanvasElement>(null)\n\n    const divStyle = {\n        '--gradient-color-1': '#c3e4ff',\n        '--gradient-color-2': '#6ec3f4',\n        '--gradient-color-3': '#eae2ff',\n        '--gradient-color-4': '#b9beff',\n    }\n\n    useEffect(() => {\n        if (canvasRef.current) {\n            gradient.initGradient(canvasRef.current)\n        }\n    }, [canvasRef, gradient])\n\n    return (\n        <canvas\n            ref={canvasRef}\n            style={{\n                width: '100%',\n                height: '100%',\n                position: 'absolute',\n                top: 'auto',\n                left: '0',\n                bottom: '0',\n                overflow: 'hidden',\n                opacity: 0.5,\n                ...divStyle,\n            }}\n            data-transition-in\n        />\n    )\n}\n", "/* eslint no-unused-expressions:0 no-sequences:0 */\n\n/*\n *   Stripe WebGl Gradient Animation by Stripe.com\n *   ScrollObserver functionality to disable animation when not scrolled into view has been disabled and\n *   commented out for now.\n */\n\n//Converting colors to proper format\nfunction normalizeColor(hexCode) {\n    return [((hexCode >> 16) & 255) / 255, ((hexCode >> 8) & 255) / 255, (255 & hexCode) / 255]\n}\n;['SCREEN', 'LINEAR_LIGHT'].reduce(\n    (hexCode, t, n) =>\n        Object.assign(hexCode, {\n            [t]: n,\n        }),\n    {}\n)\n\n//Essential functionality of WebGl\n//t = width\n//n = height\nclass MiniGl {\n    constructor(canvas, width, height, debug = false) {\n        const _miniGl = this,\n            debug_output = -1 !== document.location.search.toLowerCase().indexOf('debug=webgl')\n        ;(_miniGl.canvas = canvas),\n            (_miniGl.gl = _miniGl.canvas.getContext('webgl', {\n                antialias: true,\n            })),\n            (_miniGl.meshes = [])\n        const context = _miniGl.gl\n        width && height && this.setSize(width, height),\n            _miniGl.lastDebugMsg,\n            (_miniGl.debug =\n                debug && debug_output\n                    ? function (e) {\n                          const t = new Date()\n                          t - _miniGl.lastDebugMsg > 1e3 && console.log('---'),\n                              console.log(\n                                  t.toLocaleTimeString() +\n                                      Array(Math.max(0, 32 - e.length)).join(' ') +\n                                      e +\n                                      ': ',\n                                  ...Array.from(arguments).slice(1)\n                              ),\n                              (_miniGl.lastDebugMsg = t)\n                      }\n                    : () => {}),\n            Object.defineProperties(_miniGl, {\n                Material: {\n                    enumerable: false,\n                    value: class {\n                        constructor(vertexShaders, fragments, uniforms = {}) {\n                            const material = this\n                            function getShaderByType(type, source) {\n                                const shader = context.createShader(type)\n                                return (\n                                    context.shaderSource(shader, source),\n                                    context.compileShader(shader),\n                                    context.getShaderParameter(shader, context.COMPILE_STATUS) ||\n                                        console.error(context.getShaderInfoLog(shader)),\n                                    _miniGl.debug('Material.compileShaderSource', {\n                                        source: source,\n                                    }),\n                                    shader\n                                )\n                            }\n                            function getUniformVariableDeclarations(uniforms, type) {\n                                return Object.entries(uniforms)\n                                    .map(([uniform, value]) => value.getDeclaration(uniform, type))\n                                    .join('\\n')\n                            }\n                            ;(material.uniforms = uniforms), (material.uniformInstances = [])\n\n                            const prefix = '\\n              precision highp float;\\n            '\n                            ;(material.vertexSource = `\\n              ${prefix}\\n              attribute vec4 position;\\n              attribute vec2 uv;\\n              attribute vec2 uvNorm;\\n              ${getUniformVariableDeclarations(\n                                _miniGl.commonUniforms,\n                                'vertex'\n                            )}\\n              ${getUniformVariableDeclarations(\n                                uniforms,\n                                'vertex'\n                            )}\\n              ${vertexShaders}\\n            `),\n                                (material.Source = `\\n              ${prefix}\\n              ${getUniformVariableDeclarations(\n                                    _miniGl.commonUniforms,\n                                    'fragment'\n                                )}\\n              ${getUniformVariableDeclarations(\n                                    uniforms,\n                                    'fragment'\n                                )}\\n              ${fragments}\\n            `),\n                                (material.vertexShader = getShaderByType(\n                                    context.VERTEX_SHADER,\n                                    material.vertexSource\n                                )),\n                                (material.fragmentShader = getShaderByType(\n                                    context.FRAGMENT_SHADER,\n                                    material.Source\n                                )),\n                                (material.program = context.createProgram()),\n                                context.attachShader(material.program, material.vertexShader),\n                                context.attachShader(material.program, material.fragmentShader),\n                                context.linkProgram(material.program),\n                                context.getProgramParameter(\n                                    material.program,\n                                    context.LINK_STATUS\n                                ) || console.error(context.getProgramInfoLog(material.program)),\n                                context.useProgram(material.program),\n                                material.attachUniforms(void 0, _miniGl.commonUniforms),\n                                material.attachUniforms(void 0, material.uniforms)\n                        }\n                        //t = uniform\n                        attachUniforms(name, uniforms) {\n                            //n  = material\n                            const material = this\n                            void 0 === name\n                                ? Object.entries(uniforms).forEach(([name, uniform]) => {\n                                      material.attachUniforms(name, uniform)\n                                  })\n                                : 'array' === uniforms.type\n                                ? uniforms.value.forEach((uniform, i) =>\n                                      material.attachUniforms(`${name}[${i}]`, uniform)\n                                  )\n                                : 'struct' === uniforms.type\n                                ? Object.entries(uniforms.value).forEach(([uniform, i]) =>\n                                      material.attachUniforms(`${name}.${uniform}`, i)\n                                  )\n                                : (_miniGl.debug('Material.attachUniforms', {\n                                      name: name,\n                                      uniform: uniforms,\n                                  }),\n                                  material.uniformInstances.push({\n                                      uniform: uniforms,\n                                      location: context.getUniformLocation(material.program, name),\n                                  }))\n                        }\n                    },\n                },\n                Uniform: {\n                    enumerable: !1,\n                    value: class {\n                        constructor(e) {\n                            ;(this.type = 'float'), Object.assign(this, e)\n                            ;(this.typeFn =\n                                {\n                                    float: '1f',\n                                    int: '1i',\n                                    vec2: '2fv',\n                                    vec3: '3fv',\n                                    vec4: '4fv',\n                                    mat4: 'Matrix4fv',\n                                }[this.type] || '1f'),\n                                this.update()\n                        }\n                        update(value) {\n                            void 0 !== this.value &&\n                                context[`uniform${this.typeFn}`](\n                                    value,\n                                    0 === this.typeFn.indexOf('Matrix')\n                                        ? this.transpose\n                                        : this.value,\n                                    0 === this.typeFn.indexOf('Matrix') ? this.value : null\n                                )\n                        }\n                        //e - name\n                        //t - type\n                        //n - length\n                        getDeclaration(name, type, length) {\n                            const uniform = this\n                            if (uniform.excludeFrom !== type) {\n                                if ('array' === uniform.type)\n                                    return (\n                                        uniform.value[0].getDeclaration(\n                                            name,\n                                            type,\n                                            uniform.value.length\n                                        ) + `\\nconst int ${name}_length = ${uniform.value.length};`\n                                    )\n                                if ('struct' === uniform.type) {\n                                    let name_no_prefix = name.replace('u_', '')\n                                    return (\n                                        (name_no_prefix =\n                                            name_no_prefix.charAt(0).toUpperCase() +\n                                            name_no_prefix.slice(1)),\n                                        `uniform struct ${name_no_prefix} \n                                {\\n` +\n                                            Object.entries(uniform.value)\n                                                .map(([name, uniform]) =>\n                                                    uniform\n                                                        .getDeclaration(name, type)\n                                                        .replace(/^uniform/, '')\n                                                )\n                                                .join('') +\n                                            `\\n} ${name}${length > 0 ? `[${length}]` : ''};`\n                                    )\n                                }\n                                return `uniform ${uniform.type} ${name}${\n                                    length > 0 ? `[${length}]` : ''\n                                };`\n                            }\n                        }\n                    },\n                },\n                PlaneGeometry: {\n                    enumerable: !1,\n                    value: class {\n                        constructor(width, height, n, i, orientation) {\n                            context.createBuffer(),\n                                (this.attributes = {\n                                    position: new _miniGl.Attribute({\n                                        target: context.ARRAY_BUFFER,\n                                        size: 3,\n                                    }),\n                                    uv: new _miniGl.Attribute({\n                                        target: context.ARRAY_BUFFER,\n                                        size: 2,\n                                    }),\n                                    uvNorm: new _miniGl.Attribute({\n                                        target: context.ARRAY_BUFFER,\n                                        size: 2,\n                                    }),\n                                    index: new _miniGl.Attribute({\n                                        target: context.ELEMENT_ARRAY_BUFFER,\n                                        size: 3,\n                                        type: context.UNSIGNED_SHORT,\n                                    }),\n                                }),\n                                this.setTopology(n, i),\n                                this.setSize(width, height, orientation)\n                        }\n                        setTopology(e = 1, t = 1) {\n                            const n = this\n                            ;(n.xSegCount = e),\n                                (n.ySegCount = t),\n                                (n.vertexCount = (n.xSegCount + 1) * (n.ySegCount + 1)),\n                                (n.quadCount = n.xSegCount * n.ySegCount * 2),\n                                (n.attributes.uv.values = new Float32Array(2 * n.vertexCount)),\n                                (n.attributes.uvNorm.values = new Float32Array(2 * n.vertexCount)),\n                                (n.attributes.index.values = new Uint16Array(3 * n.quadCount))\n                            for (let e = 0; e <= n.ySegCount; e++)\n                                for (let t = 0; t <= n.xSegCount; t++) {\n                                    const i = e * (n.xSegCount + 1) + t\n                                    if (\n                                        ((n.attributes.uv.values[2 * i] = t / n.xSegCount),\n                                        (n.attributes.uv.values[2 * i + 1] = 1 - e / n.ySegCount),\n                                        (n.attributes.uvNorm.values[2 * i] =\n                                            (t / n.xSegCount) * 2 - 1),\n                                        (n.attributes.uvNorm.values[2 * i + 1] =\n                                            1 - (e / n.ySegCount) * 2),\n                                        t < n.xSegCount && e < n.ySegCount)\n                                    ) {\n                                        const s = e * n.xSegCount + t\n                                        ;(n.attributes.index.values[6 * s] = i),\n                                            (n.attributes.index.values[6 * s + 1] =\n                                                i + 1 + n.xSegCount),\n                                            (n.attributes.index.values[6 * s + 2] = i + 1),\n                                            (n.attributes.index.values[6 * s + 3] = i + 1),\n                                            (n.attributes.index.values[6 * s + 4] =\n                                                i + 1 + n.xSegCount),\n                                            (n.attributes.index.values[6 * s + 5] =\n                                                i + 2 + n.xSegCount)\n                                    }\n                                }\n                            n.attributes.uv.update(),\n                                n.attributes.uvNorm.update(),\n                                n.attributes.index.update(),\n                                _miniGl.debug('Geometry.setTopology', {\n                                    uv: n.attributes.uv,\n                                    uvNorm: n.attributes.uvNorm,\n                                    index: n.attributes.index,\n                                })\n                        }\n                        setSize(width = 1, height = 1, orientation = 'xz') {\n                            const geometry = this\n                            ;(geometry.width = width),\n                                (geometry.height = height),\n                                (geometry.orientation = orientation),\n                                (geometry.attributes.position.values &&\n                                    geometry.attributes.position.values.length ===\n                                        3 * geometry.vertexCount) ||\n                                    (geometry.attributes.position.values = new Float32Array(\n                                        3 * geometry.vertexCount\n                                    ))\n                            const o = width / -2,\n                                r = height / -2,\n                                segment_width = width / geometry.xSegCount,\n                                segment_height = height / geometry.ySegCount\n                            for (let yIndex = 0; yIndex <= geometry.ySegCount; yIndex++) {\n                                const t = r + yIndex * segment_height\n                                for (let xIndex = 0; xIndex <= geometry.xSegCount; xIndex++) {\n                                    const r = o + xIndex * segment_width,\n                                        l = yIndex * (geometry.xSegCount + 1) + xIndex\n                                    ;(geometry.attributes.position.values[\n                                        3 * l + 'xyz'.indexOf(orientation[0])\n                                    ] = r),\n                                        (geometry.attributes.position.values[\n                                            3 * l + 'xyz'.indexOf(orientation[1])\n                                        ] = -t)\n                                }\n                            }\n                            geometry.attributes.position.update(),\n                                _miniGl.debug('Geometry.setSize', {\n                                    position: geometry.attributes.position,\n                                })\n                        }\n                    },\n                },\n                Mesh: {\n                    enumerable: !1,\n                    value: class {\n                        constructor(geometry, material) {\n                            const mesh = this\n                            ;(mesh.geometry = geometry),\n                                (mesh.material = material),\n                                (mesh.wireframe = !1),\n                                (mesh.attributeInstances = []),\n                                Object.entries(mesh.geometry.attributes).forEach(\n                                    ([e, attribute]) => {\n                                        mesh.attributeInstances.push({\n                                            attribute: attribute,\n                                            location: attribute.attach(e, mesh.material.program),\n                                        })\n                                    }\n                                ),\n                                _miniGl.meshes.push(mesh),\n                                _miniGl.debug('Mesh.constructor', {\n                                    mesh: mesh,\n                                })\n                        }\n                        draw() {\n                            context.useProgram(this.material.program),\n                                this.material.uniformInstances.forEach(\n                                    ({ uniform: e, location: t }) => e.update(t)\n                                ),\n                                this.attributeInstances.forEach(({ attribute: e, location: t }) =>\n                                    e.use(t)\n                                ),\n                                context.drawElements(\n                                    this.wireframe ? context.LINES : context.TRIANGLES,\n                                    this.geometry.attributes.index.values.length,\n                                    context.UNSIGNED_SHORT,\n                                    0\n                                )\n                        }\n                        remove() {\n                            _miniGl.meshes = _miniGl.meshes.filter((e) => e !== this)\n                        }\n                    },\n                },\n                Attribute: {\n                    enumerable: !1,\n                    value: class {\n                        constructor(e) {\n                            ;(this.type = context.FLOAT),\n                                (this.normalized = !1),\n                                (this.buffer = context.createBuffer()),\n                                Object.assign(this, e),\n                                this.update()\n                        }\n                        update() {\n                            void 0 !== this.values &&\n                                (context.bindBuffer(this.target, this.buffer),\n                                context.bufferData(this.target, this.values, context.STATIC_DRAW))\n                        }\n                        attach(e, t) {\n                            const n = context.getAttribLocation(t, e)\n                            return (\n                                this.target === context.ARRAY_BUFFER &&\n                                    (context.enableVertexAttribArray(n),\n                                    context.vertexAttribPointer(\n                                        n,\n                                        this.size,\n                                        this.type,\n                                        this.normalized,\n                                        0,\n                                        0\n                                    )),\n                                n\n                            )\n                        }\n                        use(e) {\n                            context.bindBuffer(this.target, this.buffer),\n                                this.target === context.ARRAY_BUFFER &&\n                                    (context.enableVertexAttribArray(e),\n                                    context.vertexAttribPointer(\n                                        e,\n                                        this.size,\n                                        this.type,\n                                        this.normalized,\n                                        0,\n                                        0\n                                    ))\n                        }\n                    },\n                },\n            })\n        const a = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\n        _miniGl.commonUniforms = {\n            projectionMatrix: new _miniGl.Uniform({\n                type: 'mat4',\n                value: a,\n            }),\n            modelViewMatrix: new _miniGl.Uniform({\n                type: 'mat4',\n                value: a,\n            }),\n            resolution: new _miniGl.Uniform({\n                type: 'vec2',\n                value: [1, 1],\n            }),\n            aspectRatio: new _miniGl.Uniform({\n                type: 'float',\n                value: 1,\n            }),\n        }\n    }\n    setSize(e = 640, t = 480) {\n        ;(this.width = e),\n            (this.height = t),\n            (this.canvas.width = e),\n            (this.canvas.height = t),\n            this.gl.viewport(0, 0, e, t),\n            (this.commonUniforms.resolution.value = [e, t]),\n            (this.commonUniforms.aspectRatio.value = e / t),\n            this.debug('MiniGL.setSize', {\n                width: e,\n                height: t,\n            })\n    }\n    //left, right, top, bottom, near, far\n    setOrthographicCamera(e = 0, t = 0, n = 0, i = -2e3, s = 2e3) {\n        ;(this.commonUniforms.projectionMatrix.value = [\n            2 / this.width,\n            0,\n            0,\n            0,\n            0,\n            2 / this.height,\n            0,\n            0,\n            0,\n            0,\n            2 / (i - s),\n            0,\n            e,\n            t,\n            n,\n            1,\n        ]),\n            this.debug('setOrthographicCamera', this.commonUniforms.projectionMatrix.value)\n    }\n    render() {\n        this.gl.clearColor(0, 0, 0, 0), this.gl.clearDepth(1), this.meshes.forEach((e) => e.draw())\n    }\n}\n\n//Sets initial properties\nfunction e(object, propertyName, val) {\n    return (\n        propertyName in object\n            ? Object.defineProperty(object, propertyName, {\n                  value: val,\n                  enumerable: !0,\n                  configurable: !0,\n                  writable: !0,\n              })\n            : (object[propertyName] = val),\n        object\n    )\n}\n\n//Gradient object\nexport class Animation {\n    initGradient(current) {\n        throw new Error('Method not implemented.')\n    }\n    constructor(...t) {\n        e(this, 'el', void 0),\n            e(this, 'cssVarRetries', 0),\n            e(this, 'maxCssVarRetries', 200),\n            e(this, 'angle', 0),\n            e(this, 'isLoadedClass', !1),\n            e(this, 'isScrolling', !1),\n            /*e(this, \"isStatic\", o.disableAmbientAnimations()),*/ e(\n                this,\n                'scrollingTimeout',\n                void 0\n            ),\n            e(this, 'scrollingRefreshDelay', 200),\n            e(this, 'isIntersecting', !1),\n            e(this, 'shaderFiles', void 0),\n            e(this, 'vertexShader', void 0),\n            e(this, 'sectionColors', void 0),\n            e(this, 'computedCanvasStyle', void 0),\n            e(this, 'conf', void 0),\n            e(this, 'uniforms', void 0),\n            e(this, 't', 1253106),\n            e(this, 'last', 0),\n            e(this, 'width', void 0),\n            e(this, 'minWidth', 1111),\n            e(this, 'height', 600),\n            e(this, 'xSegCount', void 0),\n            e(this, 'ySegCount', void 0),\n            e(this, 'mesh', void 0),\n            e(this, 'material', void 0),\n            e(this, 'geometry', void 0),\n            e(this, 'minigl', void 0),\n            e(this, 'scrollObserver', void 0),\n            e(this, 'amp', 320),\n            e(this, 'seed', 5),\n            e(this, 'freqX', 14e-5),\n            e(this, 'freqY', 29e-5),\n            e(this, 'freqDelta', 1e-5),\n            e(this, 'activeColors', [1, 1, 1, 1]),\n            e(this, 'isMetaKey', !1),\n            e(this, 'isGradientLegendVisible', !1),\n            e(this, 'isMouseDown', !1),\n            e(this, 'handleScroll', () => {\n                clearTimeout(this.scrollingTimeout),\n                    (this.scrollingTimeout = setTimeout(\n                        this.handleScrollEnd,\n                        this.scrollingRefreshDelay\n                    )),\n                    this.isGradientLegendVisible && this.hideGradientLegend(),\n                    this.conf.playing && ((this.isScrolling = !0), this.pause())\n            }),\n            e(this, 'handleScrollEnd', () => {\n                ;(this.isScrolling = !1), this.isIntersecting && this.play()\n            }),\n            e(this, 'resize', () => {\n                ;(this.width = window.innerWidth),\n                    this.minigl.setSize(this.width, this.height),\n                    this.minigl.setOrthographicCamera(),\n                    (this.xSegCount = Math.ceil(this.width * this.conf.density[0])),\n                    (this.ySegCount = Math.ceil(this.height * this.conf.density[1])),\n                    this.mesh.geometry.setTopology(this.xSegCount, this.ySegCount),\n                    this.mesh.geometry.setSize(this.width, this.height),\n                    (this.mesh.material.uniforms.u_shadow_power.value = this.width < 600 ? 5 : 6)\n            }),\n            e(this, 'handleMouseDown', (e) => {\n                this.isGradientLegendVisible &&\n                    ((this.isMetaKey = e.metaKey),\n                    (this.isMouseDown = !0),\n                    !1 === this.conf.playing && requestAnimationFrame(this.animate))\n            }),\n            e(this, 'handleMouseUp', () => {\n                this.isMouseDown = !1\n            }),\n            e(this, 'animate', (e) => {\n                if (!this.shouldSkipFrame(e) || this.isMouseDown) {\n                    if (\n                        ((this.t += Math.min(e - this.last, 1e3 / 15)),\n                        (this.last = e),\n                        this.isMouseDown)\n                    ) {\n                        let e = 160\n                        this.isMetaKey && (e = -160), (this.t += e)\n                    }\n                    ;(this.mesh.material.uniforms.u_time.value = this.t), this.minigl.render()\n                }\n                if (0 !== this.last && this.isStatic)\n                    return (\n                        this.minigl.render(), void this.disconnect()\n                        /*this.isIntersecting && */\n                    )\n                ;(this.conf.playing || this.isMouseDown) && requestAnimationFrame(this.animate)\n            }),\n            e(this, 'addIsLoadedClass', () => {\n                /*this.isIntersecting && */ !this.isLoadedClass &&\n                    ((this.isLoadedClass = !0),\n                    this.el.classList.add('isLoaded'),\n                    setTimeout(() => {\n                        this.el.parentElement.classList.add('isLoaded')\n                    }, 3e3))\n            }),\n            e(this, 'pause', () => {\n                this.conf.playing = false\n            }),\n            e(this, 'play', () => {\n                requestAnimationFrame(this.animate), (this.conf.playing = true)\n            }),\n            e(this, 'initGradient', (selector) => {\n                this.el = selector\n                this.connect()\n                return this\n            })\n    }\n    async connect() {\n        ;(this.shaderFiles = {\n            vertex: 'varying vec3 v_color;\\n\\nvoid main() {\\n  float time = u_time * u_global.noiseSpeed;\\n\\n  vec2 noiseCoord = resolution * uvNorm * u_global.noiseFreq;\\n\\n  vec2 st = 1. - uvNorm.xy;\\n\\n  //\\n  // Tilting the plane\\n  //\\n\\n  // Front-to-back tilt\\n  float tilt = resolution.y / 2.0 * uvNorm.y;\\n\\n  // Left-to-right angle\\n  float incline = resolution.x * uvNorm.x / 2.0 * u_vertDeform.incline;\\n\\n  // Up-down shift to offset incline\\n  float offset = resolution.x / 2.0 * u_vertDeform.incline * mix(u_vertDeform.offsetBottom, u_vertDeform.offsetTop, uv.y);\\n\\n  //\\n  // Vertex noise\\n  //\\n\\n  float noise = snoise(vec3(\\n    noiseCoord.x * u_vertDeform.noiseFreq.x + time * u_vertDeform.noiseFlow,\\n    noiseCoord.y * u_vertDeform.noiseFreq.y,\\n    time * u_vertDeform.noiseSpeed + u_vertDeform.noiseSeed\\n  )) * u_vertDeform.noiseAmp;\\n\\n  // Fade noise to zero at edges\\n  noise *= 1.0 - pow(abs(uvNorm.y), 2.0);\\n\\n  // Clamp to 0\\n  noise = max(0.0, noise);\\n\\n  vec3 pos = vec3(\\n    position.x,\\n    position.y + tilt + incline + noise - offset,\\n    position.z\\n  );\\n\\n  //\\n  // Vertex color, to be passed to fragment shader\\n  //\\n\\n  if (u_active_colors[0] == 1.) {\\n    v_color = u_baseColor;\\n  }\\n\\n  for (int i = 0; i < u_waveLayers_length; i++) {\\n    if (u_active_colors[i + 1] == 1.) {\\n      WaveLayers layer = u_waveLayers[i];\\n\\n      float noise = smoothstep(\\n        layer.noiseFloor,\\n        layer.noiseCeil,\\n        snoise(vec3(\\n          noiseCoord.x * layer.noiseFreq.x + time * layer.noiseFlow,\\n          noiseCoord.y * layer.noiseFreq.y,\\n          time * layer.noiseSpeed + layer.noiseSeed\\n        )) / 2.0 + 0.5\\n      );\\n\\n      v_color = blendNormal(v_color, layer.color, pow(noise, 4.));\\n    }\\n  }\\n\\n  //\\n  // Finish\\n  //\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n}',\n            noise: '//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n    return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n{\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n            i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n          + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n          + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n}',\n            blend: '//\\n// https://github.com/jamieowen/glsl-blend\\n//\\n\\n// Normal\\n\\nvec3 blendNormal(vec3 base, vec3 blend) {\\n\\treturn blend;\\n}\\n\\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Screen\\n\\nfloat blendScreen(float base, float blend) {\\n\\treturn 1.0-((1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend) {\\n\\treturn vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Multiply\\n\\nvec3 blendMultiply(vec3 base, vec3 blend) {\\n\\treturn base*blend;\\n}\\n\\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Overlay\\n\\nfloat blendOverlay(float base, float blend) {\\n\\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend) {\\n\\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Hard light\\n\\nvec3 blendHardLight(vec3 base, vec3 blend) {\\n\\treturn blendOverlay(blend,base);\\n}\\n\\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Soft light\\n\\nfloat blendSoftLight(float base, float blend) {\\n\\treturn (blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color dodge\\n\\nfloat blendColorDodge(float base, float blend) {\\n\\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color burn\\n\\nfloat blendColorBurn(float base, float blend) {\\n\\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Vivid Light\\n\\nfloat blendVividLight(float base, float blend) {\\n\\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Lighten\\n\\nfloat blendLighten(float base, float blend) {\\n\\treturn max(blend,base);\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLighten(base.r,blend.r),blendLighten(base.g,blend.g),blendLighten(base.b,blend.b));\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear burn\\n\\nfloat blendLinearBurn(float base, float blend) {\\n\\t// Note : Same implementation as BlendSubtractf\\n\\treturn max(base+blend-1.0,0.0);\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendSubtract\\n\\treturn max(base+blend-vec3(1.0),vec3(0.0));\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear dodge\\n\\nfloat blendLinearDodge(float base, float blend) {\\n\\t// Note : Same implementation as BlendAddf\\n\\treturn min(base+blend,1.0);\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendAdd\\n\\treturn min(base+blend,vec3(1.0));\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear light\\n\\nfloat blendLinearLight(float base, float blend) {\\n\\treturn blend<0.5?blendLinearBurn(base,(2.0*blend)):blendLinearDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLinearLight(base.r,blend.r),blendLinearLight(base.g,blend.g),blendLinearLight(base.b,blend.b));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\\n}',\n            fragment:\n                'varying vec3 v_color;\\n\\nvoid main() {\\n  vec3 color = v_color;\\n  if (u_darken_top == 1.0) {\\n    vec2 st = gl_FragCoord.xy/resolution.xy;\\n    color.g -= pow(st.y + sin(-12.0) * st.x, u_shadow_power) * 0.4;\\n  }\\n  gl_FragColor = vec4(color, 1.0);\\n}',\n        }),\n            (this.conf = {\n                presetName: '',\n                wireframe: false,\n                density: [0.06, 0.16],\n                zoom: 1,\n                rotation: 0,\n                playing: true,\n            }),\n            document.querySelectorAll('canvas').length < 1\n                ? console.log('DID NOT LOAD HERO STRIPE CANVAS')\n                : ((this.minigl = new MiniGl(this.el, null, null, !0)),\n                  requestAnimationFrame(() => {\n                      this.el &&\n                          ((this.computedCanvasStyle = getComputedStyle(this.el)),\n                          this.waitForCssVars())\n                  }))\n        /*\n        this.scrollObserver = await s.create(.1, !1),\n        this.scrollObserver.observe(this.el),\n        this.scrollObserver.onSeparate(() => {\n            window.removeEventListener(\"scroll\", this.handleScroll), window.removeEventListener(\"mousedown\", this.handleMouseDown), window.removeEventListener(\"mouseup\", this.handleMouseUp), window.removeEventListener(\"keydown\", this.handleKeyDown), this.isIntersecting = !1, this.conf.playing && this.pause()\n        }), \n        this.scrollObserver.onIntersect(() => {\n            window.addEventListener(\"scroll\", this.handleScroll), window.addEventListener(\"mousedown\", this.handleMouseDown), window.addEventListener(\"mouseup\", this.handleMouseUp), window.addEventListener(\"keydown\", this.handleKeyDown), this.isIntersecting = !0, this.addIsLoadedClass(), this.play()\n        })*/\n    }\n    disconnect() {\n        this.scrollObserver &&\n            (window.removeEventListener('scroll', this.handleScroll),\n            window.removeEventListener('mousedown', this.handleMouseDown),\n            window.removeEventListener('mouseup', this.handleMouseUp),\n            window.removeEventListener('keydown', this.handleKeyDown),\n            this.scrollObserver.disconnect()),\n            window.removeEventListener('resize', this.resize)\n    }\n    initMaterial() {\n        this.uniforms = {\n            u_time: new this.minigl.Uniform({\n                value: 0,\n            }),\n            u_shadow_power: new this.minigl.Uniform({\n                value: 10,\n            }),\n            u_darken_top: new this.minigl.Uniform({\n                value: '' === this.el.dataset.jsDarkenTop ? 1 : 0,\n            }),\n            u_active_colors: new this.minigl.Uniform({\n                value: this.activeColors,\n                type: 'vec4',\n            }),\n            u_global: new this.minigl.Uniform({\n                value: {\n                    noiseFreq: new this.minigl.Uniform({\n                        value: [this.freqX, this.freqY],\n                        type: 'vec2',\n                    }),\n                    noiseSpeed: new this.minigl.Uniform({\n                        value: 5e-6,\n                    }),\n                },\n                type: 'struct',\n            }),\n            u_vertDeform: new this.minigl.Uniform({\n                value: {\n                    incline: new this.minigl.Uniform({\n                        value: Math.sin(this.angle) / Math.cos(this.angle),\n                    }),\n                    offsetTop: new this.minigl.Uniform({\n                        value: -0.5,\n                    }),\n                    offsetBottom: new this.minigl.Uniform({\n                        value: -0.5,\n                    }),\n                    noiseFreq: new this.minigl.Uniform({\n                        value: [3, 4],\n                        type: 'vec2',\n                    }),\n                    noiseAmp: new this.minigl.Uniform({\n                        value: this.amp,\n                    }),\n                    noiseSpeed: new this.minigl.Uniform({\n                        value: 10,\n                    }),\n                    noiseFlow: new this.minigl.Uniform({\n                        value: 3,\n                    }),\n                    noiseSeed: new this.minigl.Uniform({\n                        value: this.seed,\n                    }),\n                },\n                type: 'struct',\n                excludeFrom: 'fragment',\n            }),\n            u_baseColor: new this.minigl.Uniform({\n                value: this.sectionColors[0],\n                type: 'vec3',\n                excludeFrom: 'fragment',\n            }),\n            u_waveLayers: new this.minigl.Uniform({\n                value: [],\n                excludeFrom: 'fragment',\n                type: 'array',\n            }),\n        }\n        for (let e = 1; e < this.sectionColors.length; e += 1)\n            this.uniforms.u_waveLayers.value.push(\n                new this.minigl.Uniform({\n                    value: {\n                        color: new this.minigl.Uniform({\n                            value: this.sectionColors[e],\n                            type: 'vec3',\n                        }),\n                        noiseFreq: new this.minigl.Uniform({\n                            value: [\n                                2 + e / this.sectionColors.length,\n                                3 + e / this.sectionColors.length,\n                            ],\n                            type: 'vec2',\n                        }),\n                        noiseSpeed: new this.minigl.Uniform({\n                            value: 11 + 0.3 * e,\n                        }),\n                        noiseFlow: new this.minigl.Uniform({\n                            value: 6.5 + 0.3 * e,\n                        }),\n                        noiseSeed: new this.minigl.Uniform({\n                            value: this.seed + 10 * e,\n                        }),\n                        noiseFloor: new this.minigl.Uniform({\n                            value: 0.1,\n                        }),\n                        noiseCeil: new this.minigl.Uniform({\n                            value: 0.63 + 0.07 * e,\n                        }),\n                    },\n                    type: 'struct',\n                })\n            )\n        return (\n            (this.vertexShader = [\n                this.shaderFiles.noise,\n                this.shaderFiles.blend,\n                this.shaderFiles.vertex,\n            ].join('\\n\\n')),\n            new this.minigl.Material(this.vertexShader, this.shaderFiles.fragment, this.uniforms)\n        )\n    }\n    initMesh() {\n        ;(this.material = this.initMaterial()),\n            (this.geometry = new this.minigl.PlaneGeometry()),\n            (this.mesh = new this.minigl.Mesh(this.geometry, this.material))\n    }\n    shouldSkipFrame(e) {\n        return !!window.document.hidden || !this.conf.playing || parseInt(e, 10) % 2 === 0 || void 0\n    }\n    updateFrequency(e) {\n        ;(this.freqX += e), (this.freqY += e)\n    }\n    toggleColor(index) {\n        this.activeColors[index] = 0 === this.activeColors[index] ? 1 : 0\n    }\n    showGradientLegend() {\n        this.width > this.minWidth &&\n            ((this.isGradientLegendVisible = !0),\n            document.body.classList.add('isGradientLegendVisible'))\n    }\n    hideGradientLegend() {\n        ;(this.isGradientLegendVisible = !1),\n            document.body.classList.remove('isGradientLegendVisible')\n    }\n    init() {\n        this.initGradientColors(),\n            this.initMesh(),\n            this.resize(),\n            requestAnimationFrame(this.animate),\n            window.addEventListener('resize', this.resize)\n    }\n    /*\n     * Waiting for the css variables to become available, usually on page load before we can continue.\n     * Using default colors assigned below if no variables have been found after maxCssVarRetries\n     */\n    waitForCssVars() {\n        if (\n            this.computedCanvasStyle &&\n            -1 !== this.computedCanvasStyle.getPropertyValue('--gradient-color-1').indexOf('#')\n        )\n            this.init(), this.addIsLoadedClass()\n        else {\n            if (((this.cssVarRetries += 1), this.cssVarRetries > this.maxCssVarRetries)) {\n                return (\n                    (this.sectionColors = [16711680, 16711680, 16711935, 65280, 255]),\n                    void this.init()\n                )\n            }\n            requestAnimationFrame(() => this.waitForCssVars())\n        }\n    }\n    /*\n     * Initializes the four section colors by retrieving them from css variables.\n     */\n    initGradientColors() {\n        this.sectionColors = [\n            '--gradient-color-1',\n            '--gradient-color-2',\n            '--gradient-color-3',\n            '--gradient-color-4',\n        ]\n            .map((cssPropertyName) => {\n                let hex = this.computedCanvasStyle.getPropertyValue(cssPropertyName).trim()\n                //Check if shorthand hex value was used and double the length so the conversion in normalizeColor will work.\n                if (4 === hex.length) {\n                    const hexTemp = hex\n                        .substr(1)\n                        .split('')\n                        .map((hexTemp) => hexTemp + hexTemp)\n                        .join('')\n                    hex = `#${hexTemp}`\n                }\n                return hex && `0x${hex.substr(1)}`\n            })\n            .filter(Boolean)\n            .map(normalizeColor)\n    }\n}\n\n/*\n *Finally initializing the Gradient class, assigning a canvas to it and calling Gradient.connect() which initializes everything,\n * Use Gradient.pause() and Gradient.play() for controls.\n *\n * Here are some default property values you can change anytime:\n * Amplitude:    Gradient.amp = 0\n * Colors:       Gradient.sectionColors (if you change colors, use normalizeColor(#hexValue)) before you assign it.\n *\n *\n * Useful functions\n * Gradient.toggleColor(index)\n * Gradient.updateFrequency(freq)\n */\n", "import React from 'react'\nimport { HeroIcon, IconName } from '../HeroIcon'\nimport ChevronDownIcon from '@heroicons/react/20/solid/ChevronDownIcon'\nimport { Link } from '../Link/Link'\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    title?: string\n    icon?: IconName\n    isType?: 'default' | 'ghost' | 'grey' | 'dark-grey' | 'white' | 'disabled'\n    size?: 'sm' | 'base'\n    hasShadow?: boolean\n    isFull?: boolean\n    isCenter?: boolean\n    isDisabled?: boolean\n    hasDropDown?: boolean\n    url?: string | undefined\n}\n\nconst buttonSizes = {\n    sm: `px-3 py-2 text-sm`,\n    base: `px-4 py-3 text-base`,\n    lg: `px-6 py-4 text-xl`,\n}\n\nconst styles = {\n    core: `not-prose inline-flex gap-1 items-center justify-center font-medium rounded-md focus:outline-none`,\n    default: `bg-cu-red text-white hover:bg-cu-black-600`,\n    ghost: `border border-1 border-cu-red text-cu-red bg-white hover:bg-cu-red hover:text-white`,\n    grey: `text-cu-black-800 bg-cu-black-50 hover:bg-cu-black-600 hover:text-white`,\n    'dark-grey': `text-white bg-cu-black-600 hover:bg-cu-red hover:text-white`,\n    white: `text-cu-black bg-white hover:bg-cu-black hover:text-white`,\n    shadow: `shadow-md`,\n    disabled:\n        'disabled:border-slate-300 disabled:border-1 disabled:bg-slate-300 disabled:cursor-default disabled:text-cu-black-600',\n}\n\nexport const Button = ({\n    isType = 'default',\n    size = 'base',\n    title,\n    icon,\n    hasShadow,\n    isFull,\n    isCenter,\n    url,\n    isDisabled = false,\n    hasDropDown,\n    ...rest\n}: ButtonProps) => {\n    const shadowStyles = hasShadow ? styles.shadow : ''\n    const fullStyles = isFull ? 'w-full' : ''\n    const centerStyles = isCenter ? 'relative left-1/2 -translate-x-1/2 ' : ''\n    const iconSize = size === 'base' ? '6' : '4'\n\n    return (\n        <>\n            {!url && (\n                <button\n                    type='button'\n                    aria-label={title ? title : 'Icon button'}\n                    className={`${styles.core}  ${styles[isType]}  ${buttonSizes[size]} ${shadowStyles} ${fullStyles} ${centerStyles}  `}\n                    disabled={isType === 'disabled' ? true : false}\n                    {...rest}\n                >\n                    {icon && (\n                        <span className={icon && title ? 'mr-0.5' : ''}>\n                            <HeroIcon icon={icon} size={iconSize} />\n                        </span>\n                    )}\n\n                    {title}\n\n                    {hasDropDown && (\n                        <ChevronDownIcon className='w-4 h-4 mt-1 ml-1 -mr-1' aria-hidden='true' />\n                    )}\n                </button>\n            )}\n            {url && (\n                <Link\n                    href={url}\n                    className={`${styles.core}  ${styles[isType]}  ${buttonSizes[size]} ${shadowStyles} ${fullStyles} ${centerStyles}  `}\n                >\n                    {icon && (\n                        <span className={icon && title ? 'mr-0.5' : ''}>\n                            <HeroIcon icon={icon} size={iconSize} />\n                        </span>\n                    )}\n\n                    {title}\n                    {hasDropDown && (\n                        <ChevronDownIcon className='w-4 h-4 mt-1 ml-1 -mr-1' aria-hidden='true' />\n                    )}\n                </Link>\n            )}\n        </>\n    )\n}\n", "import React from 'react'\nimport * as SolidIcons from '@heroicons/react/24/solid'\nimport * as OutlineIcons from '@heroicons/react/24/outline'\nimport { rdsWidth, rdsHeight, rdsTextColor } from '../../utils/tailwindClasses'\n\nexport type IconName = keyof typeof SolidIcons | keyof typeof OutlineIcons\n\nexport interface HeroIconProps {\n    icon: IconName\n    isOutline?: boolean\n    color?: 'black' | 'white' | 'red' | 'grey' | 'dark-grey' | 'green' | 'yellow'\n    size?: '4' | '5' | '6' | '7' | '8' | '12' | '16' | '20'\n}\n\nexport const HeroIcon = ({ icon, isOutline = false, color, size = '8' }: HeroIconProps) => {\n    const Icon = isOutline ? OutlineIcons[icon] : SolidIcons[icon]\n    const hasColor = color ? rdsTextColor[color] : ''\n\n    return (\n        <Icon className={`${hasColor} ${rdsWidth[size]} ${rdsHeight[size]} `} aria-hidden={true} />\n    )\n}\n", "import React, { forwardRef } from 'react'\n\nexport interface LinkProps {\n    ref?: any\n    href?: string | undefined\n    as?: string | undefined\n    replace?: boolean\n    scroll?: boolean\n    shallow?: boolean\n    passHref?: boolean\n    prefetch?: boolean\n    locale?: string | false\n    legacyBehavior?: boolean\n    children?: any\n    className?: string\n    onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n    onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n    onClick?: React.MouseEventHandler<HTMLAnchorElement>\n}\n\nexport const Link = forwardRef(\n    ({\n        ref,\n        href,\n        as,\n        children,\n        prefetch,\n        passHref,\n        replace,\n        shallow,\n        scroll,\n        locale,\n        className,\n        onClick,\n        onMouseEnter,\n        onTouchStart,\n    }: LinkProps) => {\n        const LinkParams = {\n            ref,\n            href,\n            as,\n            prefetch,\n            passHref,\n            replace,\n            shallow,\n            scroll,\n            locale,\n            className,\n            onClick,\n            onMouseEnter,\n            onTouchStart,\n        }\n\n        try {\n            const Link = require('next/link')\n            return <Link {...LinkParams}>{children}</Link>\n        } catch (e) {\n            return <a {...LinkParams}>{children}</a>\n        }\n    }\n)\n", "import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/solid'\nimport { Button } from '../Button'\n\nimport {\n    add,\n    eachDayOfInterval,\n    endOfMonth,\n    format,\n    getDay,\n    isBefore,\n    isEqual,\n    isSameDay,\n    isSameMonth,\n    isToday,\n    parse,\n    parseISO,\n    startOfToday,\n} from 'date-fns'\n\nexport interface CalendarProps {\n    events?: {\n        id: number\n        name: string\n        imageUrl: string\n        startDatetime: string\n        endDatetime: string\n    }[]\n    callback: any\n}\n\nconst classNames = (...classes: (string | boolean)[]) => {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport const Calendar = ({ events, callback }: CalendarProps) => {\n    const today = startOfToday()\n    const [selectedDay, setSelectedDay] = useState(new Date(0))\n    const [currentMonth, setCurrentMonth] = useState(format(today, 'MMM-yyyy'))\n    const [showClear, setShowClear] = useState(false)\n    const firstDayCurrentMonth = parse(currentMonth, 'MMM-yyyy', new Date())\n    const colStartClasses = [\n        '',\n        'col-start-2',\n        'col-start-3',\n        'col-start-4',\n        'col-start-5',\n        'col-start-6',\n        'col-start-7',\n    ]\n    const days = eachDayOfInterval({\n        start: firstDayCurrentMonth,\n        end: endOfMonth(firstDayCurrentMonth),\n    })\n\n    const previousMonth = () => {\n        const firstDayNextMonth = add(firstDayCurrentMonth, { months: -1 })\n        setCurrentMonth(format(firstDayNextMonth, 'MMM-yyyy'))\n    }\n\n    const nextMonth = () => {\n        const firstDayNextMonth = add(firstDayCurrentMonth, { months: 1 })\n        setCurrentMonth(format(firstDayNextMonth, 'MMM-yyyy'))\n    }\n\n    const styles = {\n        prevNextArrows: `flex items-center justify-center flex-none p-2 text-cu-black-300 hover:text-cu-red`,\n        calendarGrid: `grid grid-cols-7 gap-px mt-4 text-center`,\n    }\n\n    useEffect(() => {\n        callback(selectedDay)\n    }, [selectedDay, callback])\n\n    return (\n        <div className='not-prose'>\n            <div className='flex items-center py-2 mb-6 bg-white border rounded-lg not-prose border-cu-black-100'>\n                <button\n                    type='button'\n                    onClick={previousMonth}\n                    className={`${styles.prevNextArrows}`}\n                >\n                    <span className='sr-only'>Previous month</span>\n                    <ChevronLeftIcon className='w-5 h-5' aria-hidden='true' />\n                </button>\n                <h2 className='flex-auto text-base font-semibold text-center text-cu-black-900'>\n                    {format(firstDayCurrentMonth, 'MMMM yyyy')}\n                </h2>\n                <button onClick={nextMonth} type='button' className={`${styles.prevNextArrows}`}>\n                    <span className='sr-only'>Next month</span>\n                    <ChevronRightIcon className='w-5 h-5' aria-hidden='true' />\n                </button>\n            </div>\n\n            <div className={`${styles.calendarGrid} text-xs text-cu-black-600`}>\n                <div>S</div>\n                <div>M</div>\n                <div>T</div>\n                <div>W</div>\n                <div>T</div>\n                <div>F</div>\n                <div>S</div>\n            </div>\n\n            <div\n                className={`${styles.calendarGrid} text-sm rounded-lg bg-cu-black-100 isolate border border-cu-black-100 overflow-hidden`}\n            >\n                {days.map((day, dayIdx) => (\n                    <div\n                        key={day.toString()}\n                        className={classNames(\n                            dayIdx === 0 && colStartClasses[getDay(day)],\n                            'py-2 bg-white'\n                        )}\n                    >\n                        <button\n                            type='button'\n                            disabled={isBefore(day, today)}\n                            onClick={() => {\n                                setSelectedDay(day)\n                                setShowClear(true)\n                            }}\n                            className={classNames(\n                                isEqual(day, selectedDay) && 'text-white',\n                                !isEqual(day, selectedDay) && isToday(day) && 'text-cu-red',\n                                !isEqual(day, selectedDay) &&\n                                    !isToday(day) &&\n                                    isSameMonth(day, firstDayCurrentMonth) &&\n                                    'text-cu-black-900',\n                                !isEqual(day, selectedDay) &&\n                                    !isToday(day) &&\n                                    !isSameMonth(day, firstDayCurrentMonth) &&\n                                    'text-cu-black-400',\n                                isEqual(day, selectedDay) && isToday(day) && 'bg-cu-red',\n                                isEqual(day, selectedDay) && !isToday(day) && 'bg-cu-red',\n                                !isEqual(day, selectedDay) && 'hover:bg-cu-red hover:text-white',\n                                (isEqual(day, selectedDay) || isToday(day)) && 'font-semibold',\n                                'mx-auto flex h-8 w-8 items-center justify-center rounded-full disabled:bg-cu-black-50'\n                            )}\n                        >\n                            <time dateTime={format(day, 'yyyy-MM-dd')}>{format(day, 'd')}</time>\n                        </button>\n\n                        <div className='w-1 h-1 mx-auto mt-1'>\n                            {events?.some((event) =>\n                                isSameDay(parseISO(event.startDatetime), day)\n                            ) && <div className='w-1 h-1 rounded-full bg-sky-500'></div>}\n                        </div>\n                    </div>\n                ))}\n            </div>\n            {showClear && (\n                <div className='mt-2'>\n                    <Button\n                        title='Clear Calendar'\n                        isCenter\n                        size='sm'\n                        onClick={() => {\n                            setSelectedDay(new Date(0))\n                            setShowClear(false)\n                        }}\n                    />\n                </div>\n            )}\n        </div>\n    )\n}\n", "import React from 'react'\n\nexport const CardLoader = () => {\n    return (\n        <div className='max-w-xl overflow-hidden bg-white rounded-lg shadow-lg not-prose'>\n            <div className='bg-white animate-pulse'>\n                <span className='block w-full h-44 bg-cu-black-100'></span>\n                <div className='p-6 space-y-3'>\n                    <span className='block w-11/12 h-4 bg-cu-black-100'></span>\n                    <span className='block w-6/12 h-4 bg-cu-black-100'></span>\n                    <span className='block w-full h-16 bg-cu-black-100'></span>\n                    <span className='block w-4/12 h-4 -mt-3 bg-cu-black-100'></span>\n                </div>\n            </div>\n            <span className='sr-only'>Loading...</span>\n        </div>\n    )\n}\n", "import { Popover, Transition } from '@headlessui/react'\nimport React, { Fragment } from 'react'\nimport ChevronDownIcon from '@heroicons/react/20/solid/ChevronDownIcon'\nimport { HeroIcon, IconName } from '../HeroIcon/HeroIcon'\nimport { Link } from '../Link/Link'\n\nexport interface DropDownItemProps {\n    title: string | React.ReactNode\n    icon?: IconName\n    href?: string\n    onClick?: (event: React.MouseEvent<MouseEvent | HTMLAnchorElement>) => void\n}\n\nexport interface DropDownProps {\n    children?: React.ReactNode\n    buttonText?: string\n    renderAs?: 'button' | 'div'\n    menuAlign?: 'left' | 'right'\n    listItems: DropDownItemProps[]\n}\n\nconst styles = {\n    core: `absolute z-10 w-48 py-1 mt-2 origin-top-left bg-white border rounded-md shadow-lg border-cu-black-100 focus:outline-none`,\n}\n\nexport const DropDown = ({\n    children,\n    buttonText,\n    renderAs = 'div',\n    listItems,\n    menuAlign = 'left',\n}: DropDownProps) => {\n    return (\n        <Popover as='div' className='relative flex-shrink-0 inline-block not-prose'>\n            <div>\n                <Popover.Button as={renderAs} className='cursor-pointer'>\n                    <span className='sr-only'>Open menu</span>\n                    {children && !buttonText ? (\n                        children\n                    ) : (\n                        <p className='flex'>\n                            {buttonText}\n                            <ChevronDownIcon className='w-4 h-4 mt-1 ml-1' aria-hidden='true' />\n                        </p>\n                    )}\n                </Popover.Button>\n            </div>\n\n            <Transition\n                as={Fragment}\n                enter='transition ease-out duration-100'\n                enterFrom='transform opacity-0 scale-95'\n                enterTo='transform opacity-100 scale-100'\n                leave='transition ease-in duration-75'\n                leaveFrom='transform opacity-100 scale-100'\n                leaveTo='transform opacity-0 scale-95'\n            >\n                <Popover.Panel\n                    static\n                    className={`${styles.core} ${menuAlign === 'left' ? 'left-0' : 'right-0'}`}\n                >\n                    {({ close }) => (\n                        <>\n                            {listItems.map((item, index) => (\n                                <div key={index}>\n                                    <Link\n                                        href={item.href ? item.href : ''}\n                                        className='flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 group'\n                                        onClick={(e) => {\n                                            item.onClick && e.preventDefault()\n                                            item.onClick && item.onClick(e)\n                                            close()\n                                        }}\n                                    >\n                                        {item.icon && (\n                                            <HeroIcon\n                                                icon={item.icon}\n                                                aria-hidden='true'\n                                                size='4'\n                                            />\n                                        )}\n                                        <span className={item.icon ? 'ml-3' : ''}>\n                                            {item.title}\n                                        </span>\n                                    </Link>\n                                </div>\n                            ))}\n                        </>\n                    )}\n                </Popover.Panel>\n            </Transition>\n        </Popover>\n    )\n}\n", "import React from 'react'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { HeroIcon, IconName } from '../../HeroIcon'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface DetailsItemProps {\n    children?: React.ReactNode\n    fontSize?: 'base' | 'lg' | 'xl'\n    title?: string\n    description?: string\n    icon?: IconName\n}\n\nexport interface ItemBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n    as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n    as?: TitleTypeProps\n}\n\nconst DetailsItemBase = ({ as: Component = 'div', children }: ItemBaseProps & DetailsItemProps) => {\n    return (\n        <Component>\n            <div className='relative flex items-center gap-2 p-6 not-prose focus:outline-none '>\n                <div className='flex items-start gap-4'>{children}</div>\n            </div>\n        </Component>\n    )\n}\n\nconst Content = ({ children }: DetailsItemProps) => {\n    return <div className='flex flex-col flex-auto gap-2'>{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & DetailsItemProps) => {\n    return React.createElement(\n        as,\n        {\n            className: `text-base font-semibold text-cu-black ${rdsFontSizes[fontSize]} `,\n        },\n        title\n    )\n}\n\nconst Icon = ({ icon }: DetailsItemProps) => {\n    return (\n        <div className='flex-none w-auto'>\n            {icon && <HeroIcon icon={icon} size='6' color='dark-grey' isOutline />}\n        </div>\n    )\n}\n\nconst Description = ({ description }: DetailsItemProps) => {\n    return <p className='text-base text-cu-black-900'>{description}</p>\n}\n\n// Set default for base component as props\nDetailsItemBase.defaultProps = {\n    as: 'li',\n}\n\nDetailsItemBase.displayName = 'DetailsItem'\nContent.displayName = 'DetailsItem.Content'\nTitle.displayName = 'DetailsItem.Title'\nIcon.displayName = 'DetailsItem.Icon'\nDescription.displayName = 'DetailsItem.Description'\n\nexport const DetailsItem = Object.assign(DetailsItemBase, {\n    Content,\n    Title,\n    Icon,\n    Description,\n})\n", "import React from 'react'\n\nexport const EventLoader = () => {\n    return (\n        <div role='status' className='not-prose animate-pulse'>\n            <div className='p-20 mx-auto border-y-2'>\n                <div className='h-3 bg-gray-300 rounded-full dark:bg-gray-700 max-w-[640px] mb-2.5 mx-auto'></div>\n                <div className='h-3 mx-auto bg-gray-300 rounded-full dark:bg-gray-700 max-w-[540px]'></div>\n                <div className='flex items-center justify-center mt-4'>\n                    <div className='w-20 h-3 mr-3 bg-gray-200 rounded-full dark:bg-gray-700'></div>\n                    <div className='w-24 h-2 bg-gray-200 rounded-full dark:bg-gray-700'></div>\n                </div>\n            </div>\n            <span className='sr-only'>Loading...</span>\n        </div>\n    )\n}\n", "import React from 'react'\nimport { Link } from '../../Link/Link'\nimport {\n    CalendarDaysIcon,\n    MapPinIcon,\n    ChevronRightIcon,\n    ClockIcon,\n} from '@heroicons/react/24/outline'\nimport { isSameDay, parseISO, getMonth, getDate } from 'date-fns'\nimport { Badge } from '../../Badge'\n\n// import { rdsFontSizes } from '../../../utils/tailwindClasses';\n// import { Badge } from '../../Badge';\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\ninterface Tags {\n    category: { id: number; name: string; slug: string }[]\n    audience: { id: number; name: string; slug: string }[]\n}\nexport interface EventItemProps {\n    children?: React.ReactNode\n    fontSize?: 'base' | 'lg' | 'xl'\n    title?: string\n    link?: string\n    startDateTime?: string\n    endDateTime?: string\n    featuredImage?: string\n    description?: string\n    on_campus?: boolean\n    on_campus_building?: string | null\n    on_campus_room_number?: string | null\n    event_address?: string\n    tags?: Tags\n}\n\nexport interface ItemBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n    as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n    as?: TitleTypeProps\n}\n\nexport const EventItem = ({\n    as: Component = 'div',\n    link,\n    title,\n    startDateTime,\n    endDateTime,\n    featuredImage,\n    on_campus,\n    on_campus_building,\n    on_campus_room_number,\n    event_address,\n    tags,\n}: ItemBaseProps & EventItemProps) => {\n    const defaultImage =\n        'https://images.unsplash.com/photo-1496128858413-b36217c2ce36?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1200&amp;q=80'\n\n    const getMonthName = (month: any, short: boolean = false) => {\n        const d = new Date()\n        d.setMonth(month)\n        const monthName = d.toLocaleString('default', {\n            month: short ? 'short' : 'long',\n        })\n        return monthName\n    }\n\n    const startDate = startDateTime && parseISO(startDateTime)\n    const endDate = endDateTime && parseISO(endDateTime)\n    const isEventSameDay = startDate && endDate && isSameDay(startDate, endDate)\n    const eventStartMonth = startDate && getMonth(startDate)\n    const eventStartDate = startDate && getDate(startDate)\n    const eventEndDate = endDate && getDate(endDate)\n\n    const formatTime = (date: any) => {\n        var hours = date.getHours()\n        var minutes = date.getMinutes()\n        var ampm = hours >= 12 ? 'pm' : 'am'\n        hours = hours % 12\n        hours = hours ? hours : 12\n        minutes = minutes < 10 ? '0' + minutes : minutes\n        var strTime = hours + ':' + minutes + ' ' + ampm\n        return strTime\n    }\n\n    const multiDayDisplay = () => {\n        if (!isEventSameDay) {\n            return (\n                <CalendarDaysIcon\n                    className='flex-shrink-0 w-6 h-6 mr-2 text-cu-red-300'\n                    aria-hidden='true'\n                />\n            )\n        } else {\n            return (\n                <ClockIcon\n                    className='flex-shrink-0 w-6 h-6 mr-2 text-cu-red-300'\n                    aria-hidden='true'\n                />\n            )\n        }\n    }\n\n    return (\n        <Component className='not-prose group relative @container'>\n            <Link\n                href={link}\n                className='group relative flex cursor-pointer flex-col gap-6 bg-white p-6 hover:bg-slate-50 focus:outline-none @xl:md:flex-row @2xl:lg:gap-8'\n            >\n                <div className='hidden md:block relative max-w-[40%]'>\n                    <img\n                        className='hidden w-full rounded-md object-cover @4xl:lg:block'\n                        src={featuredImage ? featuredImage : defaultImage}\n                        alt=''\n                    />\n                    <div className='hidden md:flex h-20 w-20 flex-col items-center justify-center rounded-md bg-white shadow-md group-hover:bg-cu-red @4xl:lg:hidden'>\n                        <p className='text-xs font-bold uppercase text-cu-red group-hover:text-white'>\n                            {getMonthName(eventStartMonth, true)}\n                        </p>\n                        <p className='text-2xl font-bold uppercase text-cu-black-800 group-hover:text-white'>\n                            {eventStartDate}\n                        </p>\n                    </div>\n                </div>\n\n                <div className='flex flex-1 flex-col gap-1.5 pr-6 md:gap-3.5 @lg:md:pt-1.5'>\n                    <h3 className='text-lg font-semibold text-cu-black group-hover:text-cu-red @lg:md:text-xl @4xl:lg:text-2xl'>\n                        {title}\n                    </h3>\n\n                    <ul className='flex flex-col flex-wrap gap-2 md:flex-row @lg:md:flex-col'>\n                        <li className='flex items-center text-sm text-cu-black-700 @2xl:lg:text-base'>\n                            {multiDayDisplay()}\n                            {isEventSameDay\n                                ? formatTime(startDate) + '-' + formatTime(endDate)\n                                : getMonthName(eventStartMonth) +\n                                  ' ' +\n                                  eventStartDate +\n                                  ' - ' +\n                                  eventEndDate}\n                        </li>\n                        <li className='flex items-start text-sm text-cu-black-700 @2xl:lg:text-base'>\n                            <MapPinIcon className='flex-shrink-0 w-6 h-6 mr-2 text-cu-red-300' />\n                            {on_campus\n                                ? on_campus_room_number + ', ' + on_campus_building\n                                : event_address}\n                        </li>\n                    </ul>\n\n                    <div className='mt-auto'>\n                        {tags?.category?.map((tag) => (\n                            <Badge key={tag.id}>{tag.name}</Badge>\n                        ))}\n                    </div>\n                </div>\n\n                <div className='absolute -mt-3 top-1/2 right-4'>\n                    <ChevronRightIcon\n                        className='flex-none w-6 h-6 ml-auto text-cu-black-300 group-hover:text-cu-red'\n                        aria-hidden='true'\n                    />\n                </div>\n            </Link>\n        </Component>\n    )\n}\n", "import { CalendarDaysIcon, ClockIcon, MapPinIcon } from '@heroicons/react/24/outline'\nimport { getDate, getMonth, isSameDay, parseISO } from 'date-fns'\nimport React from 'react'\nimport { Badge } from '../../Badge/index'\nimport { Link } from '../../Link/Link'\n\ninterface Tags {\n    category: { id: number; name: string; slug: string }[]\n    audience: { id: number; name: string; slug: string }[]\n}\n\nexport interface EventCardProps {\n    title?: string\n    heading?: 'h2' | 'h3'\n    link: string\n    startDateTime: string\n    endDateTime: string\n    featuredImage?: string\n    description?: string\n    onCampus: boolean\n    onCampusBuilding?: string | null\n    onCampusRoomNumber?: string | null\n    eventAddress?: string\n    tags?: Tags\n}\n\nexport const EventCard = ({\n    title,\n    heading: HeadLevel = 'h3',\n    link,\n    startDateTime,\n    endDateTime,\n    featuredImage,\n    onCampus,\n    onCampusBuilding,\n    onCampusRoomNumber,\n    eventAddress,\n    tags,\n}: EventCardProps) => {\n    const defaultImage =\n        'https://images.unsplash.com/photo-1496128858413-b36217c2ce36?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1200&amp;q=80'\n\n    const getMonthName = (month: any, short: boolean = false) => {\n        const d = new Date()\n        d.setMonth(month)\n        const monthName = d.toLocaleString('default', {\n            month: short ? 'short' : 'long',\n        })\n        return monthName\n    }\n\n    const formatTime = (date: any) => {\n        var hours = date.getHours()\n        var minutes = date.getMinutes()\n        var ampm = hours >= 12 ? 'PM' : 'AM'\n        hours = hours % 12\n        hours = hours ? hours : 12\n        minutes = minutes < 10 ? '0' + minutes : minutes\n        var strTime = hours + ':' + minutes + ' ' + ampm\n        return strTime\n    }\n\n    const startDate = parseISO(startDateTime)\n    const endDate = parseISO(endDateTime)\n\n    const eventStartDate = getDate(startDate)\n    const eventStartMonth = getMonth(startDate)\n    const eventEndDate = getDate(endDate)\n    const isEventSameDay = isSameDay(startDate, endDate)\n\n    const multiDayDisplay = () => {\n        if (!isEventSameDay) {\n            return (\n                <CalendarDaysIcon\n                    className='flex-shrink-0 w-6 h-6 mr-2 text-cu-red-300'\n                    aria-hidden='true'\n                />\n            )\n        } else {\n            return (\n                <ClockIcon\n                    className='flex-shrink-0 w-6 h-6 mr-2 text-cu-red-300'\n                    aria-hidden='true'\n                />\n            )\n        }\n    }\n\n    return (\n        <div className='not-prose group relative overflow-hidden rounded-lg bg-white shadow-lg duration-300 ease-in @container hover:scale-105 md:max-w-lg'>\n            <Link href={link} className='relative flex flex-col h-full cursor-pointer'>\n                <div className='relative'>\n                    <div className='aspect-w-16 aspect-h-9 @sm:md:aspect-h-6'>\n                        <img\n                            className='object-cover w-full'\n                            src={featuredImage ? featuredImage : defaultImage}\n                            alt=''\n                        />\n                    </div>\n                    <div className='absolute z-10 flex flex-col items-center justify-center w-20 h-20 bg-white rounded-md shadow-md left-6 -bottom-10 group-hover:bg-cu-red'>\n                        <p className='text-xs font-bold uppercase text-cu-red group-hover:text-white'>\n                            {getMonthName(eventStartMonth, true)}\n                        </p>\n                        <p className='text-2xl font-bold uppercase text-cu-black-800 group-hover:text-white'>\n                            {eventStartDate}\n                        </p>\n                    </div>\n                </div>\n\n                <div className='flex flex-col gap-px pt-16 pb-8 px-7'>\n                    <HeadLevel className='text-lg font-semibold text-cu-black group-hover:text-cu-red @sm:md:text-xl'>\n                        {title}\n                    </HeadLevel>\n                    <ul className='flex flex-col gap-2 mt-4'>\n                        <li className='flex text-sm text-cu-black-600 @sm:md:text-base'>\n                            {multiDayDisplay()}\n                            {isEventSameDay\n                                ? formatTime(startDate) + ' \u2014 ' + formatTime(endDate)\n                                : getMonthName(eventStartMonth) +\n                                  ' ' +\n                                  eventStartDate +\n                                  ' \u2014 ' +\n                                  eventEndDate}\n                        </li>\n                        <li className='flex text-sm text-cu-black-600 @sm:md:text-base'>\n                            <MapPinIcon\n                                className='flex-shrink-0 w-6 h-6 mr-2 text-cu-red-300'\n                                aria-hidden='true'\n                            />\n                            {onCampus ? onCampusBuilding + ', ' + onCampusRoomNumber : eventAddress}\n                        </li>\n                    </ul>\n                </div>\n\n                <div className='pb-5 mt-auto px-7'>\n                    {tags?.category?.map((tag) => (\n                        <Badge key={tag.id}>{tag.name}</Badge>\n                    ))}\n                </div>\n            </Link>\n        </div>\n    )\n}\n", "import React from 'react'\nimport { GoogleMap, MarkerF, InfoWindowF } from '@react-google-maps/api'\n\nexport interface EventLocationProps {\n    lat?: string\n    lng?: string\n    location?: string\n    zoom?: number\n}\nexport const EventLocation = ({ lat, lng, location, zoom = 15 }: EventLocationProps) => {\n    const [showInfo, setShowInfo] = React.useState(false)\n    const mapRef = React.useRef()\n    const onMapLoad = React.useCallback((map: any) => {\n        mapRef.current = map\n    }, [])\n\n    const options = {\n        disableDefaultUI: true,\n        zoomControl: true,\n        fullscreenControl: true,\n        panControl: true,\n        streetViewControl: true,\n    }\n\n    return (\n        <div className='not-prose'>\n            <GoogleMap\n                mapContainerClassName='w-full h-96'\n                center={{ lat: Number(lat), lng: Number(lng) }}\n                zoom={zoom}\n                options={options}\n                onLoad={onMapLoad}\n            >\n                <MarkerF\n                    title={location}\n                    onClick={() => setShowInfo(true)}\n                    position={{ lat: Number(lat), lng: Number(lng) }}\n                />\n\n                {showInfo && (\n                    <InfoWindowF\n                        position={{\n                            lat: Number(lat) + 0.0009,\n                            lng: Number(lng),\n                        }}\n                        onCloseClick={() => setShowInfo(false)}\n                    >\n                        <div>\n                            <p className='text-base text-center font-regular'>{location}</p>\n                            <a\n                                href={`https://www.google.com/maps/search/?api=1&query=${location}&z=15`}\n                                target='_blank'\n                                rel='noreferrer'\n                            >\n                                <p className='font-medium text-center text-blue-600'>\n                                    View on Google Maps\n                                </p>\n                            </a>\n                        </div>\n                    </InfoWindowF>\n                )}\n            </GoogleMap>\n        </div>\n    )\n}\n", "import React, { Fragment, useState, useEffect } from 'react'\nimport { Dialog, Disclosure, Menu, Popover, Transition } from '@headlessui/react'\nimport { XMarkIcon } from '@heroicons/react/24/outline'\nimport { ChevronDownIcon } from '@heroicons/react/20/solid'\nimport { Link } from '../Link/Link'\n\nconst styles = {\n    dropDownTitles: `inline-flex justify-center text-sm font-medium text-cu-black-800 group hover:text-cu-red`,\n    chevron: `flex-shrink-0 w-5 h-5 ml-1 text-cu-black-300 group-hover:text-cu-black-600`,\n}\n\nexport interface FilterProps {\n    sortOptions?: {\n        name: string\n        href: string\n        current: boolean\n    }[]\n    filters: {\n        id: string\n        name: string\n        options: {\n            value: string\n            label: string\n            checked: boolean\n        }[]\n    }[]\n    callback: any\n}\n\nfunction classNames(...classes: string[]) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport const Filter = ({ sortOptions, filters, callback }: FilterProps) => {\n    const [open, setOpen] = useState(false)\n    const [sortItem, setSortItem] = useState('')\n    const [selectedItems, setSelectedItems] = useState<string[]>([])\n\n    const isSelected = (name: string) => selectedItems.includes(name)\n    const [activeFilters, setActiveFilters] = useState<string[]>([])\n    const handleSelect = (name: string) => {\n        const selected: string = name\n        if (!selectedItems.includes(selected)) {\n            return setSelectedItems([...selectedItems, selected])\n        }\n        return setSelectedItems([...selectedItems].filter((item) => item !== selected))\n    }\n\n    const handleRemove = (name: string) => {\n        const selected: string = name\n        return setSelectedItems([...selectedItems].filter((item) => item !== selected))\n    }\n\n    useEffect(() => {\n        setSortItem(sortItem)\n        setActiveFilters(selectedItems)\n    }, [sortItem, selectedItems])\n\n    useEffect(() => {\n        callback(selectedItems)\n    }, [selectedItems, callback])\n\n    return (\n        <div className='not-prose'>\n            {/* Mobile filter dialog */}\n            <Transition.Root show={open} as={Fragment}>\n                <Dialog as='div' className='relative z-40 sm:hidden' onClose={setOpen}>\n                    <Transition.Child\n                        as={Fragment}\n                        enter='transition-opacity ease-linear duration-300'\n                        enterFrom='opacity-0'\n                        enterTo='opacity-100'\n                        leave='transition-opacity ease-linear duration-300'\n                        leaveFrom='opacity-100'\n                        leaveTo='opacity-0'\n                    >\n                        <div className='fixed inset-0 bg-black bg-opacity-25' />\n                    </Transition.Child>\n\n                    <div className='fixed inset-0 z-40 flex'>\n                        <Transition.Child\n                            as={Fragment}\n                            enter='transition ease-in-out duration-300 transform'\n                            enterFrom='translate-x-full'\n                            enterTo='translate-x-0'\n                            leave='transition ease-in-out duration-300 transform'\n                            leaveFrom='translate-x-0'\n                            leaveTo='translate-x-full'\n                        >\n                            <Dialog.Panel className='relative flex flex-col w-full h-full max-w-xs ml-auto overflow-y-auto bg-white shadow-xl'>\n                                <div className='flex items-center justify-between px-4 py-3 bg-cu-black-50'>\n                                    <h2 className='text-base font-medium text-cu-black-800'>\n                                        Filters\n                                    </h2>\n                                    <button\n                                        type='button'\n                                        className='flex items-center justify-center w-8 h-8 p-2 -mr-1 bg-white rounded-md text-cu-black-600'\n                                        onClick={() => setOpen(false)}\n                                    >\n                                        <span className='sr-only'>Close menu</span>\n                                        <XMarkIcon className='w-6 h-6' aria-hidden='true' />\n                                    </button>\n                                </div>\n\n                                {/* Filters */}\n                                <form>\n                                    {filters.map((section) => (\n                                        <Disclosure\n                                            as='div'\n                                            key={section.name}\n                                            className='px-4 py-6 border-t border-cu-black-100'\n                                        >\n                                            {({ open }) => (\n                                                <>\n                                                    <h3 className='flow-root -mx-2 -my-3 group'>\n                                                        <Disclosure.Button className='flex items-center justify-between w-full px-2 py-3 text-sm bg-white text-cu-black-300 group-hover:text-cu-black-600'>\n                                                            <span className='font-medium text-cu-black-600'>\n                                                                {section.name}\n                                                            </span>\n                                                            <span className='flex items-center ml-6'>\n                                                                <ChevronDownIcon\n                                                                    className={classNames(\n                                                                        open\n                                                                            ? '-rotate-180'\n                                                                            : 'rotate-0',\n                                                                        'h-5 w-5 transform'\n                                                                    )}\n                                                                    aria-hidden='true'\n                                                                />\n                                                            </span>\n                                                        </Disclosure.Button>\n                                                    </h3>\n                                                    <Disclosure.Panel className='pt-6'>\n                                                        <div className='space-y-6'>\n                                                            {section.options.map(\n                                                                (option, optionIdx) => (\n                                                                    <div\n                                                                        key={optionIdx}\n                                                                        className='flex items-center'\n                                                                    >\n                                                                        <input\n                                                                            id={`filter-mobile-${section.id}-${optionIdx}`}\n                                                                            name={`${section.id}[]`}\n                                                                            defaultValue={\n                                                                                option.label\n                                                                            }\n                                                                            type='checkbox'\n                                                                            onChange={() =>\n                                                                                handleSelect(\n                                                                                    option.label\n                                                                                )\n                                                                            }\n                                                                            defaultChecked={isSelected(\n                                                                                option.label\n                                                                            )}\n                                                                            className='w-4 h-4 rounded border-cu-black-200 text-cu-red focus:ring-cu-red-100'\n                                                                        />\n                                                                        <label\n                                                                            htmlFor={`filter-mobile-${section.id}-${optionIdx}`}\n                                                                            className='ml-3 text-sm text-cu-black-600'\n                                                                        >\n                                                                            {option.label}\n                                                                        </label>\n                                                                    </div>\n                                                                )\n                                                            )}\n                                                        </div>\n                                                    </Disclosure.Panel>\n                                                </>\n                                            )}\n                                        </Disclosure>\n                                    ))}\n                                </form>\n                            </Dialog.Panel>\n                        </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition.Root>\n\n            <section aria-labelledby='filter-heading'>\n                <h2 id='filter-heading' className='sr-only'>\n                    Filters\n                </h2>\n\n                {/* Filter selectors */}\n                <div className='py-4 border rounded-tl-lg rounded-tr-lg border-cu-black-100 bg-gray-50'>\n                    <div className='flex justify-between px-4 sm:px-6'>\n                        <Menu as='div' className='relative'>\n                            {sortOptions && sortOptions?.length > 0 && (\n                                <div>\n                                    <Menu.Button className={styles.dropDownTitles}>\n                                        Sort\n                                        <ChevronDownIcon\n                                            className={styles.chevron}\n                                            aria-hidden='true'\n                                        />\n                                    </Menu.Button>\n                                </div>\n                            )}\n\n                            <Transition\n                                as={Fragment}\n                                enter='transition ease-out duration-100'\n                                enterFrom='transform opacity-0 scale-95'\n                                enterTo='transform opacity-100 scale-100'\n                                leave='transition ease-in duration-75'\n                                leaveFrom='transform opacity-100 scale-100'\n                                leaveTo='transform opacity-0 scale-95'\n                            >\n                                {/* Sort drop down menu */}\n                                <Menu.Items className='absolute z-10 w-40 mt-2 bg-white rounded-md shadow-lg -left-4 ring-1 ring-black ring-opacity-5 focus:outline-none'>\n                                    {sortOptions && sortOptions?.length > 0 && (\n                                        <div className='py-1'>\n                                            {sortOptions.map((option) => (\n                                                <Menu.Item key={option.name}>\n                                                    {({ active }) => (\n                                                        <Link\n                                                            href={option.href}\n                                                            className={classNames(\n                                                                option.name === sortItem\n                                                                    ? 'font-medium text-cu-black-800'\n                                                                    : 'text-cu-black-600',\n                                                                active ? 'bg-gray-100' : '',\n                                                                'block px-4 py-2 text-sm'\n                                                            )}\n                                                        >\n                                                            <span\n                                                                onClick={() =>\n                                                                    setSortItem(option.name)\n                                                                }\n                                                            >\n                                                                {option.name}\n                                                            </span>\n                                                        </Link>\n                                                    )}\n                                                </Menu.Item>\n                                            ))}\n                                        </div>\n                                    )}\n                                </Menu.Items>\n                            </Transition>\n                        </Menu>\n\n                        <button\n                            type='button'\n                            className='inline-block text-sm font-medium text-cu-black-800 hover:text-cu-red sm:hidden'\n                            onClick={() => setOpen(true)}\n                        >\n                            Filters\n                        </button>\n\n                        <div className='hidden sm:block'>\n                            <div className='flow-root'>\n                                <Popover.Group className='flex items-center -mx-4 divide-x divide-gray-200'>\n                                    {filters.map((section, sectionIdx) => (\n                                        <Popover\n                                            key={sectionIdx}\n                                            className='relative inline-block px-4 text-left'\n                                        >\n                                            <Popover.Button className={styles.dropDownTitles}>\n                                                <span>{section.name}</span>\n                                                <ChevronDownIcon\n                                                    className={styles.chevron}\n                                                    aria-hidden='true'\n                                                />\n                                            </Popover.Button>\n\n                                            <Transition\n                                                as={Fragment}\n                                                enter='transition ease-out duration-100'\n                                                enterFrom='transform opacity-0 scale-95'\n                                                enterTo='transform opacity-100 scale-100'\n                                                leave='transition ease-in duration-75'\n                                                leaveFrom='transform opacity-100 scale-100'\n                                                leaveTo='transform opacity-0 scale-95'\n                                            >\n                                                <Popover.Panel className='absolute right-0 z-10 p-4 mt-2 bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none'>\n                                                    <form className='space-y-4'>\n                                                        {section.options.map(\n                                                            (option, optionIdx) => (\n                                                                <div\n                                                                    key={optionIdx}\n                                                                    className='flex items-center'\n                                                                >\n                                                                    <input\n                                                                        id={`filter-${section.id}-${optionIdx}`}\n                                                                        name={`${section.id}[]`}\n                                                                        defaultValue={option.label}\n                                                                        type='checkbox'\n                                                                        onChange={() =>\n                                                                            handleSelect(\n                                                                                option.label\n                                                                            )\n                                                                        }\n                                                                        defaultChecked={isSelected(\n                                                                            option.label\n                                                                        )}\n                                                                        className='w-4 h-4 rounded border-cu-black-200 text-cu-red focus:ring-cu-red-100'\n                                                                    />\n                                                                    <label\n                                                                        htmlFor={`filter-${section.id}-${optionIdx}`}\n                                                                        className='pr-6 ml-3 text-sm text-cu-black-600 whitespace-nowrap'\n                                                                    >\n                                                                        {option.label}\n                                                                    </label>\n                                                                </div>\n                                                            )\n                                                        )}\n                                                    </form>\n                                                </Popover.Panel>\n                                            </Transition>\n                                        </Popover>\n                                    ))}\n                                </Popover.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Active filters */}\n                <div className='bg-white border border-t-0 rounded-bl-lg rounded-br-lg border-cu-black-100'>\n                    <div className='px-4 py-3 sm:flex sm:items-center sm:px-6'>\n                        <h3 className='py-1 text-sm text-cu-black-600'>\n                            Filters\n                            <span className='sr-only'>, active</span>\n                        </h3>\n\n                        <div\n                            aria-hidden='true'\n                            className='hidden w-px h-5 bg-gray-300 sm:ml-4 sm:block'\n                        />\n\n                        <div className='mt-4 sm:mt-0 sm:ml-4'>\n                            <div className='flex flex-wrap items-center gap-3 -m-1'>\n                                {activeFilters.map((activeFilter, index) => (\n                                    <span\n                                        key={index}\n                                        className='inline-flex items-center py-1 pl-3 pr-2 text-sm bg-white border rounded-lg border-cu-black-100 text-cu-black-600'\n                                    >\n                                        <span>{activeFilter}</span>\n                                        <button\n                                            type='button'\n                                            onClick={() => handleRemove(activeFilter)}\n                                            className='inline-flex flex-shrink-0 w-4 h-4 p-1 ml-1 rounded-full text-cu-black-400 hover:bg-cu-red hover:text-white'\n                                        >\n                                            <span className='sr-only'>\n                                                Remove filter for {activeFilter}\n                                            </span>\n                                            <svg\n                                                className='w-2 h-2'\n                                                stroke='currentColor'\n                                                fill='none'\n                                                viewBox='0 0 8 8'\n                                            >\n                                                <path\n                                                    strokeLinecap='round'\n                                                    strokeWidth='1.5'\n                                                    d='M1 1l6 6m0-6L1 7'\n                                                />\n                                            </svg>\n                                        </button>\n                                    </span>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n", "import React from 'react'\nimport { FooterWave } from '../FooterWave'\n\nexport const FooterBasic = () => {\n    return (\n        <footer\n            className='pt-8 not-prose bg-cu-black-900 sm:pt-12'\n            aria-labelledby='footer-heading'\n        >\n            <h2 id='footer-heading' className='sr-only'>\n                Footer\n            </h2>\n            <FooterWave />\n        </footer>\n    )\n}\n", "import React from 'react'\n// import CarletonLogo from '../../../assets/cu-logo-stacked-white-outline.svg'\nimport { Link } from '../../Link/Link'\n\nexport const FooterWave = () => {\n    return (\n        <div className='not-prose grid justify-center bg-cu-waves-red bg-[length:100%] bg-bottom bg-no-repeat pb-24 sm:pb-36 lg:pb-44'>\n            {/* <img\n                className='w-auto h-32 mx-auto mb-6 sm:h-44'\n                src={CarletonLogo}\n                alt='Carleton University logo'\n            /> */}\n            <ul className='flex justify-center space-x-4 text-xs text-gray-400 bg-cu-black-900 sm:space-x-6 sm:text-sm'>\n                <li key='privacy'>\n                    <Link\n                        href='https://carleton.ca/privacy/privacy-notices/general-notice-of-collection-use-and-disclosure/'\n                        className='hover:text-white'\n                    >\n                        Privacy Policy\n                    </Link>\n                </li>\n                <li key='accessibility'>\n                    <Link href='https://carleton.ca/accessibility/' className='hover:text-white'>\n                        Accessibility\n                    </Link>\n                </li>\n                <li key='copyright'>\n                    <Link\n                        href='https://library.carleton.ca/copyright-carleton'\n                        className='hover:text-white'\n                    >\n                        &copy; Copyright {new Date().getFullYear()}\n                    </Link>\n                </li>\n            </ul>\n        </div>\n    )\n}\n", "import React from 'react'\nimport { FooterWave } from '../FooterWave'\n// import RavensLogo from '../../../assets/ravens-logo.svg'\nimport { FooterStandardLinks as linkData } from './FooterStandardData'\nimport { Link } from '../../Link/Link'\n\nconst Social = [\n    {\n        name: 'Facebook',\n        href: 'https://carleton.ca',\n        icon: (props: any) => (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                viewBox='0 0 512 512'\n                fill='currentColor'\n                {...props}\n            >\n                <path d='M504 256C504 119 393 8 256 8S8 119 8 256c0 123.78 90.69 226.38 209.25 245V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.28c-30.8 0-40.41 19.12-40.41 38.73V256h68.78l-11 71.69h-57.78V501C413.31 482.38 504 379.78 504 256z' />\n            </svg>\n        ),\n    },\n    {\n        name: 'Instagram',\n        href: 'https://carleton.ca',\n        icon: (props: any) => (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                viewBox='0 0 448 512'\n                fill='currentColor'\n                {...props}\n            >\n                <path d='M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z' />\n            </svg>\n        ),\n    },\n    {\n        name: 'Twitter',\n        href: 'https://carleton.ca',\n        icon: (props: any) => (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                viewBox='0 0 512 512'\n                fill='currentColor'\n                {...props}\n            >\n                <path d='M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z' />\n            </svg>\n        ),\n    },\n    {\n        name: 'YouTube',\n        href: 'https://carleton.ca',\n        icon: (props: any) => (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                viewBox='0 0 576 512'\n                fill='currentColor'\n                {...props}\n            >\n                <path d='M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z' />\n            </svg>\n        ),\n    },\n    {\n        name: 'LinkedIn',\n        href: 'https://carleton.ca',\n        icon: (props: any) => (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                viewBox='0 0 448 512'\n                fill='currentColor'\n                {...props}\n            >\n                <path d='M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z' />\n            </svg>\n        ),\n    },\n]\n\nexport const FooterStandard = () => {\n    return (\n        <footer className='not-prose bg-cu-black-900' aria-labelledby='footer-heading'>\n            <h2 id='footer-heading' className='sr-only'>\n                Footer\n            </h2>\n\n            <div className='hidden gap-4 px-4 py-12 mx-auto text-white border-b max-w-7xl border-cu-black-700 sm:px-6 lg:grid lg:grid-cols-5 lg:px-8'>\n                <div className='uppercase'>\n                    <h3 className='text-sm font-bold'>Admissions</h3>\n                    <ul>\n                        {linkData.Admissions.map((item, index) => (\n                            <li key={index} className='mt-3 text-xs'>\n                                <Link\n                                    href={item.href}\n                                    className='text-cu-black-300 hover:text-white'\n                                >\n                                    {item.name}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className='uppercase'>\n                    <h3 className='text-sm font-bold'>Academics</h3>\n                    <ul>\n                        {linkData.Academics.map((item, index) => (\n                            <li key={index} className='mt-3 text-xs'>\n                                <Link href={item.href} className='text-gray-400 hover:text-white'>\n                                    {item.name}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className='uppercase'>\n                    <h3 className='text-sm font-bold'>Campus</h3>\n                    <ul>\n                        {linkData.Campus.map((item, index) => (\n                            <li key={index} className='mt-3 text-xs'>\n                                <Link href={item.href} className='text-gray-400 hover:text-white'>\n                                    {item.name}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className='uppercase'>\n                    <h3 className='text-sm font-bold'>Advancement</h3>\n                    <ul>\n                        {linkData.Advancement.map((item, index) => (\n                            <li key={index} className='mt-3 text-xs'>\n                                <Link href={item.href} className='text-gray-400 hover:text-white'>\n                                    {item.name}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className='uppercase'>\n                    <h3 className='text-sm font-bold'>Ravens</h3>\n                    <ul>\n                        {linkData.Ravens.map((item, index) => (\n                            <li key={index} className='mt-3 text-xs'>\n                                <Link href={item.href} className='text-gray-400 hover:text-white'>\n                                    {item.name}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                    {/* <Link href='https://goravens.carleton.ca' className='w-12 h-auto'>\n                        <img className='w-12 h-auto mt-8' src={RavensLogo} alt='Carleton' />\n                    </Link> */}\n                </div>\n            </div>\n\n            <div className='flex flex-col-reverse gap-1 p-8 mx-auto text-sm max-w-7xl text-cu-black-300 sm:gap-4 sm:pb-8 sm:text-lg lg:grid-cols-3 lg:flex-row lg:justify-between lg:text-left lg:text-sm'>\n                <p className='text-center'>\n                    Contact us by{' '}\n                    <Link href='tel:+1-613-520-2600' className='text-white hover:text-cu-red'>\n                        phone\n                    </Link>{' '}\n                    or{' '}\n                    <Link\n                        href='https://carleton.ca/about/contact/'\n                        className='text-white hover:text-cu-red'\n                    >\n                        email\n                    </Link>{' '}\n                    now!\n                </p>\n                <p className='text-center'>1125 Colonel By Drive, Ottawa, ON, K1S 5B6, Canada</p>\n                <ul className='flex justify-center mb-4 space-x-6 lg:mb-0 lg:justify-end'>\n                    {Social.map((item, index) => (\n                        <li key={index}>\n                            <Link href={item.href} className='text-gray-200 hover:text-cu-red'>\n                                <span className='sr-only'>{item.name}</span>\n                                <item.icon className='w-8 h-8 sm:h-6 sm:w-6' aria-hidden='true' />\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            <FooterWave />\n        </footer>\n    )\n}\n", "export const FooterStandardLinks = {\n    Admissions: [\n        { name: 'Programs', href: 'https://carleton.ca' },\n        { name: 'Undergraduate', href: 'https://carleton.ca' },\n        { name: 'Graduate', href: 'https://carleton.ca' },\n        { name: 'International', href: 'https://carleton.ca' },\n        { name: 'Financial Aid', href: 'https://carleton.ca' },\n        { name: 'Virtual Tours', href: 'https://carleton.ca' },\n        { name: 'Initiatives', href: 'https://carleton.ca' },\n    ],\n    Academics: [\n        { name: 'Support Services', href: 'https://carleton.ca' },\n        { name: 'Schedules & Dates', href: 'https://carleton.ca' },\n        { name: 'Bightspace', href: 'https://carleton.ca' },\n        { name: 'Library', href: 'https://carleton.ca' },\n        { name: 'Support Services', href: 'https://carleton.ca' },\n        { name: 'Schedules & Dates', href: 'https://carleton.ca' },\n        { name: 'Bightspace', href: 'https://carleton.ca' },\n    ],\n    Campus: [\n        { name: 'Campus Map', href: 'https://carleton.ca' },\n        { name: 'Directions', href: 'https://carleton.ca' },\n        { name: 'Events', href: 'https://carleton.ca' },\n        { name: 'Parking', href: 'https://carleton.ca' },\n        { name: 'Campus Map', href: 'https://carleton.ca' },\n        { name: 'Directions', href: 'https://carleton.ca' },\n        { name: 'Events', href: 'https://carleton.ca' },\n    ],\n    Advancement: [\n        { name: 'Giving to Carleton', href: 'https://carleton.ca' },\n        { name: 'Athletics & Recreation', href: 'https://carleton.ca' },\n        { name: 'Go Ravens', href: 'https://carleton.ca' },\n        { name: 'Career Assistance', href: 'https://carleton.ca' },\n        { name: 'Giving to Carleton', href: 'https://carleton.ca' },\n        { name: 'Athletics & Recreation', href: 'https://carleton.ca' },\n        { name: 'Go Ravens', href: 'https://carleton.ca' },\n    ],\n    Ravens: [\n        { name: 'Athletics & Recreation', href: 'https://carleton.ca' },\n        { name: 'GoRavens Varsity', href: 'https://carleton.ca' },\n        { name: 'Athletics & Recreation', href: 'https://carleton.ca' },\n    ],\n}\n", "import React from 'react'\nimport { ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { Badge } from '../../Badge'\nimport { Link } from '../../Link/Link'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface FeedItemProps {\n    children?: React.ReactNode\n    fontSize?: 'base' | 'lg' | 'xl'\n    title?: string\n    link?: string\n    date?: string\n    excerpt?: string\n    category?: string\n}\n\nexport interface ItemBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n    as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n    as?: TitleTypeProps\n}\n\nconst FeedItemBase = ({ as: Component = 'div', children, link }: ItemBaseProps & FeedItemProps) => {\n    return (\n        <Component>\n            <Link\n                href={link}\n                className='relative flex items-center gap-2 p-6 cursor-pointer not-prose group hover:bg-gray-50 focus:outline-none'\n            >\n                <div className='flex items-start gap-4'>{children}</div>\n                <ChevronRightIcon\n                    className='flex-none w-5 h-5 ml-auto text-cu-black-300'\n                    aria-hidden='true'\n                />\n            </Link>\n        </Component>\n    )\n}\n\nconst Content = ({ children }: FeedItemProps) => {\n    return <div className='flex flex-col flex-auto gap-2'>{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & FeedItemProps) => {\n    return React.createElement(\n        as,\n        {\n            className: `text-sm font-semibold text-cu-black group-hover:text-cu-red ${rdsFontSizes[fontSize]}`,\n        },\n        title\n    )\n}\n\nconst Date = ({ date }: FeedItemProps) => {\n    return <p className='mr-4 text-sm italic text-cu-black-700'>{date}</p>\n}\n\nconst Excerpt = ({ excerpt }: FeedItemProps) => {\n    return <p className='text-sm text-cu-black-900'>{excerpt}</p>\n}\n\nconst Category = ({ category }: FeedItemProps) => {\n    return (\n        <div>\n            <Badge>{category}</Badge>\n        </div>\n    )\n}\n\n// Set default for base component as props\nFeedItemBase.defaultProps = {\n    as: 'li',\n}\n\nFeedItemBase.displayName = 'FeedItem'\nContent.displayName = 'FeedItem.Content'\nTitle.displayName = 'FeedItem.Title'\nDate.displayName = 'FeedItem.Date'\nExcerpt.displayName = 'FeedItem.Excerpt'\nCategory.displayName = 'FeedItem.Category'\n\nexport const FeedItem = Object.assign(FeedItemBase, {\n    Content,\n    Title,\n    Date,\n    Excerpt,\n    Category,\n})\n", "import React from 'react'\nimport { ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { Link } from '../../Link/Link'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface FileItemProps {\n    children?: React.ReactNode\n    fontSize?: 'base' | 'lg' | 'xl'\n    title?: string\n    link?: string\n    filesize?: string\n    date?: string\n}\n\nexport interface ItemBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n    as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n    as?: TitleTypeProps\n}\n\nconst FileItemBase = ({ as: Component = 'div', children, link }: ItemBaseProps & FileItemProps) => {\n    return (\n        <Component>\n            <Link\n                href={link}\n                className='relative flex items-center gap-2 p-6 cursor-pointer not-prose group hover:bg-gray-50 focus:outline-none'\n            >\n                <div className='flex items-center gap-4'>\n                    <div className='flex-none w-auto'>\n                        <svg\n                            className='flex items-start flex-none w-12 h-12'\n                            viewBox='0 0 24 24'\n                            xmlns='http://www.w3.org/2000/svg'\n                            aria-hidden='true'\n                        >\n                            <g>\n                                <g>\n                                    <g fill='none' fillRule='evenodd'>\n                                        <g fillRule='nonzero'>\n                                            <path d='M4 23V1h10.84L20 6.473V23z' fill='#fff'></path>\n                                            <g fill='#E91C24'>\n                                                <path d='M14.62 1.611l4.809 5.142v15.636H4.57V1.61zM14.858 1H4v22h16V6.5z'></path>\n                                                <path\n                                                    d='M14 7V1h.195L20 6.805V7z'\n                                                    fillOpacity='.215'\n                                                ></path>\n                                                <path d='M14.6 1.848L19.152 6.4H14.6zm0-.848H14v6h6v-.6z'></path>\n                                            </g>\n                                        </g>\n                                        <path\n                                            d='M16 15.34c0-1.98-8-.117-8 2.263 0 .192.135.397.353.397 1.675 0 4.779-11 3.26-11s.859 9.023 3.66 9.023c.408 0 .727-.167.727-.683z'\n                                            stroke='#E91C24'\n                                            strokeWidth='.5'\n                                        ></path>\n                                    </g>\n                                </g>\n                            </g>\n                        </svg>\n                    </div>\n                    {children}\n                </div>\n                <ChevronRightIcon\n                    className='flex-none w-5 h-5 ml-auto text-cu-black-300'\n                    aria-hidden='true'\n                />\n            </Link>\n        </Component>\n    )\n}\n\nconst Content = ({ children }: FileItemProps) => {\n    return <div className='flex flex-col flex-auto gap-1'>{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & FileItemProps) => {\n    return React.createElement(\n        as,\n        {\n            className: `text-sm font-semibold text-cu-black group-hover:text-cu-red ${rdsFontSizes[fontSize]}`,\n        },\n        title\n    )\n}\n\nconst Details = ({ filesize, date }: FileItemProps) => {\n    return (\n        <p className='mr-4 text-sm italic text-cu-black-700'>\n            {filesize} - {date}\n        </p>\n    )\n}\n\n// Set default for base component as props\nFileItemBase.defaultProps = {\n    as: 'li',\n}\n\nFileItemBase.displayName = 'FileItem'\nContent.displayName = 'FileItem.Content'\nTitle.displayName = 'FileItem.Title'\nDetails.displayName = 'FileItem.Details'\n\nexport const FileItem = Object.assign(FileItemBase, {\n    Content,\n    Title,\n    Details,\n})\n", "import React from 'react'\nimport { CalendarIcon, ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { Link } from '../../Link/Link'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface JobItemProps {\n    children?: React.ReactNode\n    fontSize?: 'base' | 'lg' | 'xl'\n    title?: string\n    link?: string\n    department?: string\n    dateData?: string\n    date?: string\n}\n\nexport interface ItemBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n    as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n    as?: TitleTypeProps\n}\n\nconst JobItemBase = ({ as: Component = 'div', children, link }: ItemBaseProps & JobItemProps) => {\n    return (\n        <Component>\n            <Link\n                href={link}\n                className='relative flex items-center gap-2 p-6 cursor-pointer not-prose group hover:bg-gray-50 focus:outline-none'\n            >\n                <div className='flex items-center gap-4'>{children}</div>\n                <ChevronRightIcon\n                    className='flex-none w-5 h-5 ml-auto text-cu-black-300'\n                    aria-hidden='true'\n                />\n            </Link>\n        </Component>\n    )\n}\n\nconst Content = ({ children }: JobItemProps) => {\n    return <div className='flex flex-col flex-auto gap-2'>{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & JobItemProps) => {\n    return React.createElement(\n        as,\n        {\n            className: `text-sm font-semibold text-cu-black group-hover:text-cu-red ${rdsFontSizes[fontSize]}`,\n        },\n        title\n    )\n}\n\nconst Details = ({ dateData, date }: JobItemProps) => {\n    return (\n        <p className='flex text-xs text-cu-black-900'>\n            <CalendarIcon className='w-4 h-4 mr-1 text-cu-red' aria-hidden='true' />\n            <time dateTime={dateData}>Closes {date}</time>\n        </p>\n    )\n}\n\n// Set default for base component as props\nJobItemBase.defaultProps = {\n    as: 'li',\n}\n\nJobItemBase.displayName = 'JobItem'\nContent.displayName = 'JobItem.Content'\nTitle.displayName = 'JobItem.Title'\nDetails.displayName = 'JobItem.Details'\n\nexport const JobItem = Object.assign(JobItemBase, {\n    Content,\n    Title,\n    Details,\n})\n", "import React from 'react'\nimport { LinkIcon, ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { Link } from '../../Link/Link'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface LinkItemProps {\n    children?: React.ReactNode\n    fontSize?: 'base' | 'lg' | 'xl'\n    title?: string\n    link?: string\n}\n\nexport interface ItemBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n    as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n    as?: TitleTypeProps\n}\n\nconst LinkItemBase = ({ as: Component = 'div', children, link }: BaseItemProps & LinkItemProps) => {\n    return (\n        <Component>\n            <Link\n                href={link}\n                className='relative flex items-center gap-2 p-6 cursor-pointer not-prose group hover:bg-gray-50 focus:outline-none'\n            >\n                <div className='flex items-center gap-1'>\n                    <div className='flex-none w-auto'>\n                        <LinkIcon className='flex-none w-4 h-4 mr-2 text-cu-red' />\n                    </div>\n                    {children}\n                </div>\n                <ChevronRightIcon\n                    className='flex-none w-5 h-5 ml-auto text-cu-black-300'\n                    aria-hidden='true'\n                />\n            </Link>\n        </Component>\n    )\n}\n\nconst Content = ({ children }: LinkItemProps) => {\n    return <div className='flex flex-col flex-auto gap-2'>{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & LinkItemProps) => {\n    return React.createElement(\n        as,\n        {\n            className: `text-sm font-semibold text-cu-black group-hover:text-cu-red ${rdsFontSizes[fontSize]}`,\n        },\n        title\n    )\n}\n\n// Set default for base component as props\nLinkItemBase.defaultProps = {\n    as: 'li',\n}\n\nLinkItemBase.displayName = 'LinkItem'\nContent.displayName = 'LinkItem.Content'\nTitle.displayName = 'LinkItem.Title'\n\nexport const LinkItem = Object.assign(LinkItemBase, {\n    Content,\n    Title,\n})\n", "import { Combobox } from '@headlessui/react'\nimport { MagnifyingGlassIcon, XMarkIcon } from '@heroicons/react/24/outline'\nimport React, { useState } from 'react'\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete'\nimport { EventLocation } from '../EventLocation/EventLocation'\n\nfunction classNames(...classes: any) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport const LocationPicker = () => {\n    const [address, setAddress] = useState('')\n    const [coordinates, setCoordinates] = useState({\n        lat: 0,\n        lng: 0,\n    })\n\n    const handleSelect = async (value: any) => {\n        const results = await geocodeByAddress(value)\n        const latLng = await getLatLng(results[0])\n        setAddress(value)\n        setCoordinates(latLng)\n    }\n\n    return (\n        <div className='not-prose'>\n            <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect}>\n                {({ getInputProps, suggestions, getSuggestionItemProps }) => (\n                    <div>\n                        <Combobox value={address} onChange={handleSelect}>\n                            <div className='relative'>\n                                <MagnifyingGlassIcon\n                                    className='pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-400'\n                                    aria-hidden='true'\n                                />\n                                <Combobox.Input\n                                    className='w-full h-12 pr-4 text-gray-800 placeholder-gray-400 bg-transparent border-2 rounded-lg pl-11 focus:ring-0 sm:text-sm'\n                                    {...getInputProps({ placeholder: 'Type address' })}\n                                />\n                                {address && (\n                                    <XMarkIcon\n                                        className='absolute top-3.5 right-4 h-4 w-4 text-gray-400'\n                                        aria-hidden='true'\n                                        onClick={() => {\n                                            setAddress('')\n                                            setCoordinates({ lat: 0, lng: 0 })\n                                        }}\n                                    />\n                                )}\n                            </div>\n\n                            <Combobox.Options\n                                static\n                                className='overflow-y-auto text-sm text-gray-800 max-h-72 scroll-py-2 bg-slate-200'\n                            >\n                                {suggestions.map((suggestion) => {\n                                    return (\n                                        <Combobox.Option\n                                            key={suggestion.index}\n                                            value={suggestion}\n                                            className={({ active }) =>\n                                                classNames(\n                                                    'cursor-default select-none px-4 py-2',\n                                                    active && 'bg-cu-red text-white'\n                                                )\n                                            }\n                                        >\n                                            <div {...getSuggestionItemProps(suggestion)}>\n                                                {suggestion.description}\n                                            </div>\n                                        </Combobox.Option>\n                                    )\n                                })}\n                            </Combobox.Options>\n                        </Combobox>\n                    </div>\n                )}\n            </PlacesAutocomplete>\n            <div className='py-12'>\n                <EventLocation\n                    lat={coordinates?.lat.toString()}\n                    lng={coordinates?.lng.toString()}\n                    location={address}\n                />\n            </div>\n        </div>\n    )\n}\n", "import { Fragment, useRef } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport React from 'react'\nimport { Button } from '../Button'\nimport { rdsOverlay } from '../../utils/tailwindClasses'\n\nexport interface ModalProps {\n    children?: React.ReactNode\n    title?: String\n    description?: String\n    noButton?: boolean\n    isOpen: any\n    setIsOpen: any\n    hasOverlay?: boolean\n}\n\nexport const Modal = ({\n    children,\n    title,\n    description,\n    noButton,\n    isOpen,\n    setIsOpen,\n    hasOverlay = false,\n}: ModalProps) => {\n    const cancelButtonRef = useRef(null)\n\n    return (\n        <Transition.Root show={isOpen} as={Fragment}>\n            <Dialog\n                as='div'\n                className='relative z-10 not-prose'\n                initialFocus={cancelButtonRef}\n                onClose={() => setIsOpen(false)}\n            >\n                <Transition.Child\n                    as={Fragment}\n                    enter='ease-out duration-300'\n                    enterFrom='opacity-0'\n                    enterTo='opacity-100'\n                    leave='ease-in duration-200'\n                    leaveFrom='opacity-100'\n                    leaveTo='opacity-0'\n                >\n                    <div\n                        className={`fixed inset-0 ${\n                            hasOverlay ? rdsOverlay : ''\n                        }  transition-opacity bg-opacity-60`}\n                    />\n                </Transition.Child>\n\n                <div className='fixed inset-0 z-10 overflow-y-auto'>\n                    <div className='flex items-end justify-center min-h-full p-4 text-center sm:items-center sm:p-0'>\n                        <Transition.Child\n                            as={Fragment}\n                            enter='ease-out duration-300'\n                            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n                            enterTo='opacity-100 translate-y-0 sm:scale-100'\n                            leave='ease-in duration-200'\n                            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n                            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n                        >\n                            <Dialog.Panel className='relative overflow-hidden text-left transition-all transform bg-white rounded-lg shadow-xl sm:my-8 sm:w-full sm:max-w-lg'>\n                                <div className='px-4 pt-5 pb-4 bg-white sm:p-6 sm:pb-4'>\n                                    <div className='sm:flex sm:items-start'>\n                                        <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n                                            <Dialog.Title\n                                                as='h3'\n                                                className='text-lg font-medium leading-6 text-gray-900'\n                                            >\n                                                {title}\n                                            </Dialog.Title>\n                                            <div className='mt-2'>\n                                                <p className='text-sm text-gray-500'>\n                                                    {description}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {!noButton && (\n                                    <div className='grid gap-4 px-4 py-3  sm:flex sm:flex-row-reverse sm:px-6 sm:w-auto sm:text-sm'>\n                                        {children}\n                                        <Button\n                                            onClick={() => {\n                                                setIsOpen(false)\n                                            }}\n                                            title='Cancel'\n                                            size='sm'\n                                            isType='white'\n                                            hasShadow\n                                        />\n                                    </div>\n                                )}\n                            </Dialog.Panel>\n                        </Transition.Child>\n                    </div>\n                </div>\n            </Dialog>\n        </Transition.Root>\n    )\n}\n", "import React from 'react'\n\n// Meta Wrapper\nexport interface MetaProps {\n    description?: string\n    children?: React.ReactNode\n}\n\nconst MetaBase = ({ description = 'Carleton University', children }: MetaProps) => {\n    return (\n        <>\n            <meta http-equiv='X-UA-Compatible' content='IE=edge' />\n            <meta name='HandheldFriendly' content='True' />\n            <meta name='MobileOptimized' content='640' />\n            <meta name='viewport' content='width=device-width, initial-scale=1' />\n            <meta name='description' content={description} />\n            <meta\n                name='robots'\n                content='max-snippet:-1,max-image-preview:standard,max-video-preview:-1'\n            />\n            {children}\n        </>\n    )\n}\n\n// Meta Title\nexport interface TitleProps {\n    title?: string\n}\n\nconst Title = ({ title = 'Carleton University' }: TitleProps) => {\n    return <>{title}</>\n}\n\n// Meta Icons\nexport interface IconsProps {\n    path?: string\n}\n\nconst Icons = ({ path = 'https://cdn.carleton.ca/cutheme/favicons' }: IconsProps) => {\n    return (\n        <>\n            <link rel='apple-touch-icon' sizes='180x180' href={path + '/apple-touch-icon.png'} />\n            <link rel='icon' type='image/png' sizes='32x32' href={path + '/favicon-32x32.png'} />\n            <link rel='icon' type='image/png' sizes='16x16' href={path + '/favicon-16x16.png'} />\n        </>\n    )\n}\n\n// Meta Social\nexport interface SocialProps {\n    type: string\n    card?: string\n    title?: string\n    image?: string\n    description?: string\n}\n\nconst Social = ({ type, card, title, image, description }: SocialProps) => {\n    return (\n        <>\n            <meta name={type + ':card'} content={card} />\n            <meta name={type + ':title'} content={title} />\n            <meta name={type + ':description'} content={description} />\n            <meta name={type + ':image'} content={image} />\n        </>\n    )\n}\n\n// Meta Dot Notation\nMetaBase.displayName = 'Meta'\nTitle.displayName = 'Meta.Title'\nIcons.displayName = 'Meta.Icons'\nSocial.displayName = 'Meta.Social'\n\nexport const Meta = Object.assign(MetaBase, { Title, Icons, Social })\n", "import React from 'react'\nimport { ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { Badge } from '../../Badge'\nimport { Link } from '../../Link/Link'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface MarketplaceItemProps {\n    children?: React.ReactNode\n    fontSize?: 'base' | 'lg' | 'xl'\n    title?: string\n    link?: string\n    image?: string\n    alt?: string\n    cost?: string\n    condition?: string\n    category?: string\n}\n\nexport interface ItemBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n    as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n    as?: TitleTypeProps\n}\n\nconst MarketplaceItemBase = ({\n    as: Component = 'div',\n    children,\n    link,\n}: ItemBaseProps & MarketplaceItemProps) => {\n    return (\n        <Component>\n            <Link\n                href={link}\n                className='relative flex items-center gap-2 p-6 cursor-pointer not-prose group hover:bg-gray-50 focus:outline-none'\n            >\n                <div className='flex items-center gap-4'>{children}</div>\n                <ChevronRightIcon\n                    className='flex-none w-5 h-5 ml-auto text-cu-black-300'\n                    aria-hidden='true'\n                />\n            </Link>\n        </Component>\n    )\n}\n\nconst Content = ({ children }: MarketplaceItemProps) => {\n    return <div className='flex flex-col flex-auto gap-1'>{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & MarketplaceItemProps) => {\n    return React.createElement(\n        as,\n        {\n            className: `text-sm font-semibold text-cu-black group-hover:text-cu-red ${rdsFontSizes[fontSize]}`,\n        },\n        title\n    )\n}\n\nconst Image = ({ image, alt }: MarketplaceItemProps) => {\n    return (\n        <div className='flex-none w-16 md:w-24'>\n            <img className='w-auto h-auto rounded lg:w-24' src={image} alt={alt} />\n        </div>\n    )\n}\n\nconst Details = ({ cost, condition }: MarketplaceItemProps) => {\n    return (\n        <ul className='flex flex-wrap sm:gap-2'>\n            <li className='flex items-center mr-2 text-sm text-cu-black-700'>\n                {condition} condition for {cost}\n            </li>\n        </ul>\n    )\n}\n\nconst Category = ({ category }: MarketplaceItemProps) => {\n    return (\n        <div>\n            <Badge>{category}</Badge>\n        </div>\n    )\n}\n\n// Set default for base component as props\nMarketplaceItemBase.defaultProps = {\n    as: 'li',\n}\n\nMarketplaceItemBase.displayName = 'MarketplaceItem'\nContent.displayName = 'MarketplaceItem.Content'\nTitle.displayName = 'MarketplaceItem.Title'\nImage.displayName = 'MarketplaceItem.Image'\nDetails.displayName = 'MarketplaceItem.Details'\nCategory.displayName = 'MarketplaceItem.Category'\n\nexport const MarketplaceItem = Object.assign(MarketplaceItemBase, {\n    Content,\n    Title,\n    Image,\n    Details,\n    Category,\n})\n", "import React from 'react'\nimport { Badge } from '../../Badge'\nimport { Link } from '../../Link/Link'\n\nexport interface NewsCardProps {\n    children?: React.ReactNode\n    title: string\n    heading?: 'h2' | 'h3'\n    link: string\n    date?: string | any\n    image?: string\n    alt?: string\n    excerpt?: string\n    tags?: Tags\n}\n\ninterface Tags {\n    category: { id: number; name: string; slug: string }[]\n}\n\nexport const NewsCard = ({\n    title,\n    heading: HeadLevel = 'h3',\n    link,\n    date,\n    image,\n    alt,\n    excerpt,\n    tags,\n}: NewsCardProps) => {\n    const formatedDate = new Date(date).toLocaleString('en-US', {\n        month: 'long',\n        day: '2-digit',\n        year: 'numeric',\n    })\n\n    return (\n        <div className='not-prose group relative flex flex-col overflow-hidden rounded-lg bg-white shadow-lg duration-300 ease-in @container hover:scale-105 md:max-w-lg'>\n            <Link href={link} className='relative flex flex-col h-full cursor-pointer'>\n                {image && (\n                    <img\n                        className='object-cover w-full'\n                        src={image ? image : 'https://source.unsplash.com/random/400x266'}\n                        alt={alt}\n                    />\n                )}\n\n                <div className='flex flex-col space-y-2 py-6 px-7 @sm:md:space-y-3'>\n                    {date && (\n                        <p className='flex items-start text-sm italic text-cu-black-600'>\n                            {formatedDate}\n                        </p>\n                    )}\n\n                    <HeadLevel className='text-lg font-semibold text-cu-black group-hover:text-cu-red @sm:md:text-xl'>\n                        {title}\n                    </HeadLevel>\n\n                    {excerpt && (\n                        <p className='flex items-start text-base text-cu-black-600'>\n                            {excerpt.length > 170 ? `${excerpt.substring(0, 170)}...` : excerpt}\n                        </p>\n                    )}\n                </div>\n\n                <div className='pb-5 mt-auto px-7'>\n                    {tags?.category?.map((tag) => (\n                        <Badge key={tag.id}>{tag.name}</Badge>\n                    ))}\n                </div>\n            </Link>\n        </div>\n    )\n}\n", "import React from 'react'\n\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface NumberCardProps {\n    children?: React.ReactNode\n    title: string\n    content: string\n    isCenter?: boolean\n}\n\nexport interface TitleProps {\n    as?: TitleTypeProps\n}\n\nexport const NumberCard = ({ title, content, isCenter }: NumberCardProps) => {\n    const textAlign = isCenter ? 'text-center' : ''\n\n    return (\n        <div\n            className={`relative flex flex-col gap-2 px-6 py-5 bg-white border border-l-8 rounded-lg shadow-lg not-prose border-cu-black-100 border-l-cyan-300 md:max-w-lg ${textAlign}`}\n        >\n            <p className='text-sm font-light text-cu-black-600 md:text-base'>{title}</p>\n            <p className='text-3xl font-semibold text-cu-black-800 md:text-4xl'>{content}</p>\n        </div>\n    )\n}\n", "import React from 'react'\nimport { ChevronRightIcon } from '@heroicons/react/24/outline'\nimport { rdsFontSizes } from '../../../utils/tailwindClasses'\nimport { Link } from '../../Link/Link'\n\n// Set types for as props\ntype BaseItemTypeProps = 'li' | 'div'\ntype TitleTypeProps = 'h2' | 'h3'\n\nexport interface NewsItemProps {\n    children?: React.ReactNode\n    fontSize?: 'base' | 'lg' | 'xl'\n    title?: string\n    link?: string\n    cost?: string\n    image?: string\n    alt?: string\n    date?: string\n    excerpt?: string\n}\n\nexport interface ItemBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface BaseItemProps {\n    as?: BaseItemTypeProps\n}\n\nexport interface TitleProps {\n    as?: TitleTypeProps\n}\n\nconst NewsItemBase = ({ as: Component = 'div', children, link }: BaseItemProps & NewsItemProps) => {\n    return (\n        <Component>\n            <Link\n                href={link}\n                className='relative flex items-center gap-2 p-6 cursor-pointer not-prose group hover:bg-gray-50 focus:outline-none'\n            >\n                <div className='flex items-start gap-4'>{children}</div>\n                <ChevronRightIcon\n                    className='flex-none w-5 h-5 ml-auto text-cu-black-300'\n                    aria-hidden='true'\n                />\n            </Link>\n        </Component>\n    )\n}\n\nconst Content = ({ children }: NewsItemProps) => {\n    return <div className='flex flex-col flex-auto gap-2'>{children}</div>\n}\n\nconst Title = ({ as = 'h3', fontSize = 'base', title }: TitleProps & NewsItemProps) => {\n    return React.createElement(\n        as,\n        {\n            className: `text-base font-semibold text-cu-black group-hover:text-cu-red ${rdsFontSizes[fontSize]}`,\n        },\n        title\n    )\n}\n\nconst Image = ({ image, alt }: NewsItemProps) => {\n    return (\n        <div className='flex-none hidden w-20 md:w-32 lg:block'>\n            <img className='w-auto h-auto rounded' src={image} alt={alt} />\n        </div>\n    )\n}\n\nconst Date = ({ date }: NewsItemProps) => {\n    return <p className='mr-4 text-sm italic text-cu-black-700'>{date}</p>\n}\n\nconst Excerpt = ({ excerpt }: NewsItemProps) => {\n    return <p className='text-base text-cu-black-900'>{excerpt}</p>\n}\n\n// Set default for base component as props\nNewsItemBase.defaultProps = {\n    as: 'li',\n}\n\nNewsItemBase.displayName = 'NewsItem'\nContent.displayName = 'NewsItem.Content'\nTitle.displayName = 'NewsItem.Title'\nImage.displayName = 'NewsItem.Image'\nDate.displayName = 'NewsItem.Date'\nExcerpt.displayName = 'NewsItem.Excerpt'\n\nexport const NewsItem = Object.assign(NewsItemBase, {\n    Content,\n    Title,\n    Image,\n    Date,\n    Excerpt,\n})\n", "import React, { useEffect, useState } from 'react'\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/20/solid'\nimport usePagination, { DOTS } from '../../hooks/usePagination'\n\nexport interface PaginationProps {\n    hasBorder?: boolean\n    hasSpacing?: boolean\n    totalCount: number\n    siblingCount: number\n    pageSize: number\n    callback: any\n}\n\nexport const Pagination = ({\n    hasBorder,\n    hasSpacing,\n    totalCount,\n    siblingCount,\n    pageSize,\n    callback,\n}: PaginationProps) => {\n    const [currentPage, setCurrentPage] = useState(1)\n\n    const paginationRange = usePagination(totalCount, pageSize, siblingCount, currentPage)\n\n    const onNext = () => {\n        if (currentPage < lastPage) {\n            setCurrentPage(currentPage + 1)\n        }\n    }\n\n    const onPrevious = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    const onCurrent = (pageNumber: any) => {\n        setCurrentPage(Number(pageNumber))\n    }\n\n    const styles = {\n        border: `py-5 border-t border-cu-black-100`,\n        spacing: `pl-6 pr-5`,\n        mobileButtons: `relative inline-flex items-center px-4 py-2 text-sm font-medium text-cu-black-600 bg-white border border-cu-black-200 rounded-md hover:bg-cu-black-50`,\n        pageListNumbers: `flex items-center bg-white py-2 px-4 text-sm text-cu-black-600 border-r border-cu-black-100 last:border-0 cursor-pointer hover:bg-cu-black-50`,\n        pageListArrows: `text-cu-black-400 px-2.5`,\n    }\n\n    const borderStyles = hasBorder ? styles.border : ''\n    const spacingStyles = hasSpacing ? styles.spacing : ''\n    const startResult = (currentPage - 1) * pageSize + 1\n\n    let endResult = totalCount\n    let lastPage = 0\n\n    useEffect(() => {\n        callback([startResult, endResult])\n    }, [startResult, endResult, callback])\n\n    if (totalCount > currentPage * pageSize) {\n        endResult = currentPage * pageSize\n    }\n\n    if (paginationRange !== undefined) {\n        lastPage = Number(paginationRange[paginationRange.length - 1])\n    }\n\n    if (currentPage === 0 || (paginationRange !== undefined && paginationRange.length < 2)) {\n        return null\n    }\n\n    return (\n        <div\n            className={`not-prose mt-8 first:mt-0 flex items-center justify-between ${borderStyles} ${spacingStyles}`}\n        >\n            <div className='flex justify-between flex-1 sm:hidden'>\n                <button onClick={onPrevious} className={`${styles.mobileButtons}`}>\n                    Previous\n                </button>\n                <button onClick={onNext} className={`${styles.mobileButtons}`}>\n                    Next\n                </button>\n            </div>\n\n            <div className='hidden sm:flex sm:flex-1 sm:items-center sm:justify-between'>\n                <p className='text-sm text-cu-black-800'>\n                    Showing <span className='font-semibold'>{startResult}</span> to{' '}\n                    <span className='font-semibold'>{endResult}</span> of{' '}\n                    <span className='font-semibold'>{totalCount}</span> results\n                </p>\n\n                <nav aria-label='Pagination'>\n                    <ul className='inline-flex overflow-hidden border rounded-md border-cu-black-100'>\n                        <li\n                            className={`${styles.pageListNumbers} ${styles.pageListArrows}`}\n                            onClick={onPrevious}\n                        >\n                            <span className='sr-only'>Previous</span>\n                            <ChevronLeftIcon className='w-5 h-5' aria-hidden='true' />\n                        </li>\n\n                        {paginationRange !== undefined &&\n                            paginationRange.map((pageNumber, index) => {\n                                if (pageNumber === DOTS) {\n                                    return (\n                                        <li key={index} className={`${styles.pageListNumbers}`}>\n                                            &#8230;\n                                        </li>\n                                    )\n                                }\n                                return (\n                                    <li\n                                        key={index}\n                                        className={`${styles.pageListNumbers} ${\n                                            Number(pageNumber) === currentPage\n                                                ? 'bg-cu-black-50 font-semibold'\n                                                : ''\n                                        }`}\n                                        onClick={() => onCurrent(Number(pageNumber))}\n                                    >\n                                        {pageNumber}\n                                    </li>\n                                )\n                            })}\n                        <li\n                            className={`${styles.pageListNumbers} ${styles.pageListArrows}`}\n                            onClick={onNext}\n                        >\n                            <span className='sr-only'>Next</span>\n                            <ChevronRightIcon className='w-5 h-5' aria-hidden='true' />\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    )\n}\n", "import { useMemo } from 'react'\n\nexport const DOTS = '...'\n\nconst range = (start: number, end: number) => {\n    const length = end - start + 1\n    return Array.from({ length }, (_, idx) => idx + start)\n}\n\nconst usePagination = (\n    totalCount: number,\n    pageSize: number,\n    siblingCount = 1,\n    currentPage: number\n) => {\n    const paginationRange = useMemo(() => {\n        const totalPageCount = Math.ceil(totalCount / pageSize)\n        const totalPageNumbers = siblingCount + 5\n\n        if (totalPageNumbers >= totalPageCount) {\n            return range(1, totalPageCount)\n        }\n\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1)\n        const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPageCount)\n\n        const shouldShowLeftDots = leftSiblingIndex > 2\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2\n\n        const firstPageIndex = 1\n        const lastPageIndex = totalPageCount\n\n        if (!shouldShowLeftDots && shouldShowRightDots) {\n            const leftItemCount = 3 + 2 * siblingCount\n            const leftRange = range(1, leftItemCount)\n\n            return [...leftRange, DOTS, totalPageCount]\n        }\n\n        if (shouldShowLeftDots && !shouldShowRightDots) {\n            const rightItemCount = 3 + 2 * siblingCount\n            const rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount)\n            return [firstPageIndex, DOTS, ...rightRange]\n        }\n\n        if (shouldShowLeftDots && shouldShowRightDots) {\n            const middleRange = range(leftSiblingIndex, rightSiblingIndex)\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]\n        }\n    }, [totalCount, pageSize, siblingCount, currentPage])\n\n    return paginationRange\n}\n\nexport default usePagination\n", "import React from 'react'\nimport { Button } from '../Button'\nimport { DropDown, DropDownItemProps } from '../DropDown'\n\nexport interface SocialShareProps {\n    title: string\n    link: string\n}\n\nexport const SocialShare = ({ title, link }: SocialShareProps) => {\n    const ShareItem: DropDownItemProps[] = [\n        {\n            href: `https://twitter.com/intent/tweet?text=${title}&url=${link}`,\n            title: (\n                <div className='flex items-center text-sm'>\n                    <svg\n                        className='w-4 h-4 mr-2 fill-cu-black-400'\n                        xmlns='http://www.w3.org/2000/svg'\n                        viewBox='0 0 512 512'\n                    >\n                        <path d='M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z' />\n                    </svg>\n                    Twitter\n                </div>\n            ),\n        },\n        {\n            href: `https://www.linkedin.com/sharing/share-offsite/?url=${link}`,\n            title: (\n                <div className='flex items-center text-sm'>\n                    <svg\n                        className='w-4 h-4 mr-2 fill-cu-black-400'\n                        xmlns='http://www.w3.org/2000/svg'\n                        viewBox='0 0 448 512'\n                    >\n                        <path d='M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z' />\n                    </svg>\n                    LinkedIn\n                </div>\n            ),\n        },\n        {\n            href: `http://www.facebook.com/sharer.php?u=${link}&t=${title}`,\n            title: (\n                <div className='flex items-center text-sm'>\n                    <svg\n                        className='w-4 h-4 mr-2 fill-cu-black-400'\n                        xmlns='http://www.w3.org/2000/svg'\n                        viewBox='0 0 320 512'\n                    >\n                        <path d='M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z' />\n                    </svg>\n                    Facebook\n                </div>\n            ),\n        },\n        {\n            href: `mailto:?subject=${title}&body=${link}`,\n            title: (\n                <div className='flex items-center text-sm'>\n                    <svg\n                        className='w-4 h-4 mr-2 fill-cu-black-400'\n                        xmlns='http://www.w3.org/2000/svg'\n                        viewBox='0 0 512 512'\n                    >\n                        <path d='M48 64C21.5 64 0 85.5 0 112c0 15.1 7.1 29.3 19.2 38.4L236.8 313.6c11.4 8.5 27 8.5 38.4 0L492.8 150.4c12.1-9.1 19.2-23.3 19.2-38.4c0-26.5-21.5-48-48-48H48zM0 176V384c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V176L294.4 339.2c-22.8 17.1-54 17.1-76.8 0L0 176z' />\n                    </svg>\n                    Email\n                </div>\n            ),\n        },\n    ]\n    return (\n        <DropDown listItems={ShareItem}>\n            <Button title='Share Event' hasDropDown isType='grey' size='sm' icon='ShareIcon' />\n        </DropDown>\n    )\n}\n", "import React, { useEffect, useState } from 'react'\nimport { MagnifyingGlassIcon } from '@heroicons/react/24/outline'\nexport interface SearchFormProps {\n    callback: any\n}\n\nexport const SearchForm = ({ callback }: SearchFormProps) => {\n    const [message, setMessage] = useState('')\n    const handleChange = (event: { target: { value: React.SetStateAction<string> } }) => {\n        setMessage(event.target.value)\n    }\n\n    useEffect(() => {\n        callback(message)\n    }, [message, callback])\n    return (\n        <div className='relative flex items-center not-prose'>\n            <MagnifyingGlassIcon\n                className='absolute w-5 h-5 text-gray-400 left-4'\n                aria-hidden='true'\n            />\n            <input\n                className='w-full h-12 pr-4 text-sm bg-transparent border rounded-lg text-cu-black-800 placeholder-cu-black-300 border-cu-black-100 pl-11 focus:border-cu-black-300 focus:ring-0'\n                id='searchform__input'\n                name='search'\n                type='search'\n                autoComplete='off'\n                placeholder='Search'\n                onChange={handleChange}\n                value={message}\n            />\n        </div>\n    )\n}\n", "import React, { Fragment, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    InformationCircleIcon,\n    ShieldExclamationIcon,\n} from '@heroicons/react/24/outline'\nimport { XMarkIcon } from '@heroicons/react/20/solid'\n\nexport interface ToasterProps {\n    children?: any\n}\n\nexport interface ToastBaseProps {\n    children?: any\n    type: 'success' | 'error' | 'warning' | 'info'\n}\n\nexport interface ToastTitleProps {\n    children?: any\n}\n\nexport interface ToastContentProps {\n    children?: any\n}\n\nconst Toaster = ({ children }: ToasterProps) => {\n    return (\n        <div\n            aria-live='assertive'\n            className='fixed inset-0 z-40 flex items-end px-4 py-6 pointer-events-none not-prose top-20 sm:items-start sm:p-6'\n        >\n            <div className='flex flex-col items-center w-full space-y-4 sm:items-end'>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nconst Title = ({ children }: ToastTitleProps) => {\n    return <p className='text-sm font-medium text-gray-900'>{children}</p>\n}\n\nconst Content = ({ children }: ToastContentProps) => {\n    return <p className='mt-1 text-sm text-gray-500'>{children}</p>\n}\n\nconst ToastBase = ({ children, type }: ToastBaseProps) => {\n    const [showToast, setShowToast] = useState(true)\n\n    const toastTypes = {\n        success: {\n            icon: CheckCircleIcon,\n            color: 'text-green-400',\n        },\n        warning: {\n            icon: ShieldExclamationIcon,\n            color: 'text-yellow-400',\n        },\n        error: {\n            icon: ExclamationCircleIcon,\n            color: 'text-cu-red',\n        },\n        info: {\n            icon: InformationCircleIcon,\n            color: 'text-gray-600',\n        },\n    }\n\n    return (\n        <Transition\n            show={showToast}\n            as={Fragment}\n            enter='transform ease-out duration-300 transition'\n            enterFrom='translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2'\n            enterTo='translate-y-0 opacity-100 sm:translate-x-0'\n            leave='transition ease-in duration-100'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n        >\n            <div className='w-full max-w-sm overflow-hidden bg-white rounded-lg shadow-lg pointer-events-auto ring-1 ring-black ring-opacity-5'>\n                <div className='p-4'>\n                    <div className='flex items-start'>\n                        <div className='flex-shrink-0'>\n                            {React.createElement(toastTypes[type].icon, {\n                                className: `w-6 h-6 ${toastTypes[type].color}`,\n                                'aria-hidden': 'true',\n                            })}\n                        </div>\n                        <div className='ml-3 w-0 flex-1 pt-0.5'>{children}</div>\n                        <div className='flex flex-shrink-0 ml-4'>\n                            <button\n                                type='button'\n                                className='inline-flex text-gray-400 bg-white rounded-md hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2'\n                                onClick={() => {\n                                    setShowToast(false)\n                                }}\n                            >\n                                <span className='sr-only'>Close</span>\n                                <XMarkIcon className='w-5 h-5' aria-hidden='true' />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Transition>\n    )\n}\n\nToastBase.displayName = 'Toast'\nTitle.displayName = 'Toast.Title'\nContent.displayName = 'Toast.Content'\n\nexport const Toast = Object.assign(ToastBase, {\n    Toaster,\n    Title,\n    Content,\n})\n", "import { Disclosure } from '@headlessui/react'\nimport { Bars3Icon, XMarkIcon } from '@heroicons/react/24/solid'\nimport React from 'react'\n// import shield from '../../assets/cu-shield.svg'\nimport { UserInfoType } from '../../types/UserInfo'\nimport { Avatar } from '../Avatar'\nimport { DropDown, DropDownItemProps } from '../DropDown'\nimport { Link } from '../Link/Link'\nimport { Search } from '../Search'\n\nexport interface LinkProps {\n    title: string\n    link: string\n    active: boolean\n}\n\nexport interface mobileLoginProps {\n    title: string\n    link?: string\n    onClick?: (event: React.MouseEvent<MouseEvent | HTMLAnchorElement>) => void\n}\n\nexport interface TopNavProps {\n    title: string\n    logoUrl?: string\n    brand?: string\n    login?: React.ReactNode\n    hasSearch?: boolean\n    sourceData?: any\n    children?: React.ReactNode\n    sticky?: boolean\n    navLinks?: LinkProps[]\n    mobileLinks?: LinkProps[]\n    userMenuItems?: any\n    userInfo?: UserInfoType\n    searchOn?: string\n    mobileLogin?: mobileLoginProps\n}\n\nexport const TopNav = ({\n    children,\n    logoUrl,\n    title,\n    brand,\n    hasSearch,\n    sourceData,\n    searchOn,\n    navLinks,\n    mobileLinks,\n    userMenuItems,\n    userInfo,\n    sticky,\n    login,\n    mobileLogin,\n}: TopNavProps) => {\n    const brandLogo = brand ? (\n        <div className='flex items-center flex-shrink-0'>\n            <h1 className='sr-only'> {title} </h1>\n            <img className='w-auto h-16' src={brand} alt={title} />\n        </div>\n    ) : (\n        <div className='flex items-center flex-shrink-0'>\n            {/* <img className='w-auto h-10' src={shield} alt='Carleton Shield' /> */}\n            <h1 className='flex items-center flex-shrink-0 pl-3 pr-2 text-2xl font-semibold'>\n                {title}\n            </h1>\n        </div>\n    )\n\n    return (\n        <Disclosure\n            as='nav'\n            className={` ${\n                sticky ? 'sticky' : ''\n            } top-0  relative z-50 border-t-2 border-cu-red bg-white shadow-md not-prose px-6 lg:px-8`}\n            id='topNav'\n        >\n            {({ open }) => (\n                <>\n                    <div className='flex h-20 gap-6 mx-auto max-w-7xl'>\n                        {/* Logo  */}\n                        <div className='flex items-center flex-shrink-0 hover:text-cu-red'>\n                            <Link href={logoUrl ? logoUrl : '/'}>{brandLogo}</Link>\n                        </div>\n\n                        {/* mobile Menu open Button  */}\n                        <div className='flex items-center lg:hidden'>\n                            <div className='absolute ml-4 right-4'>\n                                {hasSearch && sourceData && (\n                                    <div className='inline-flex items-center p-2 '>\n                                        <Search sourceData={sourceData} searchOn={searchOn} />\n                                    </div>\n                                )}\n\n                                <Disclosure.Button className='inline-flex items-center justify-center p-2 text-gray-400 rounded-md hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-cu-red-500'>\n                                    <span className='sr-only'>main menu</span>\n                                    {open ? (\n                                        <XMarkIcon className='block w-6 h-6' aria-hidden='true' />\n                                    ) : (\n                                        <Bars3Icon className='block w-6 h-6' aria-hidden='true' />\n                                    )}\n                                </Disclosure.Button>\n                            </div>\n                        </div>\n\n                        {/* navigation Links  */}\n                        <ul className='hidden lg:flex lg:flex-1 lg:gap-6'>\n                            {navLinks &&\n                                navLinks.map((item, index) => (\n                                    <li\n                                        key={index}\n                                        className={`inline-flex items-center border-b-2  px-1 pt-1 text-sm font-medium text-cu-black-800 hover:border-cu-red hover:text-cu-red ${\n                                            item.active\n                                                ? 'border-cu-red text-cu-red'\n                                                : 'border-transparent'\n                                        }`}\n                                    >\n                                        <Link href={item.link}>{item.title}</Link>\n                                    </li>\n                                ))}\n                        </ul>\n\n                        {/* Login , search and Other Childrens  */}\n\n                        <div className='hidden lg:flex lg:items-center lg:gap-6'>\n                            {/* search */}\n                            {/* this will just search on title in database , we need to extend it to add other props search on to top nav  */}\n                            {hasSearch && sourceData && (\n                                <div className='inline-flex items-center '>\n                                    <Search sourceData={sourceData} searchOn={searchOn} />\n                                </div>\n                            )}\n                            {children}\n\n                            {/* Login */}\n                            {!userInfo && login}\n                            {userInfo && !userMenuItems && (\n                                <Avatar user={userInfo} size='xs' rounded='full' />\n                            )}\n                            {userInfo && userMenuItems && (\n                                <DropDown listItems={userMenuItems} menuAlign='right'>\n                                    <Avatar user={userInfo} size='xs' rounded='full' />\n                                </DropDown>\n                            )}\n                        </div>\n                    </div>\n                    {/* Mobile Menu  */}\n                    {/* active state on mobile */}\n\n                    <Disclosure.Panel className='-mx-2 lg:hidden sm:-mx-4 lg:-mx-8'>\n                        {({ close }) => (\n                            <>\n                                <div className='pt-2 pb-3 space-y-1'>\n                                    {mobileLinks &&\n                                        mobileLinks.map((item, index) => (\n                                            <Disclosure.Button\n                                                as='div'\n                                                key={index}\n                                                className={`block border-l-4  py-2 pl-3 pr-4 text-base font-medium text-cu-black-800 hover:border-cu-black-200 hover:bg-gray-50 hover:text-cu-red ${\n                                                    item.active\n                                                        ? 'border-l-4 border-cu-red bg-gradient-to-r from-cu-red-50 to-white'\n                                                        : 'border-transparent'\n                                                }`}\n                                            >\n                                                <Link href={item.link}>\n                                                    <span onClick={() => close()}>\n                                                        {item.title}\n                                                    </span>\n                                                </Link>\n                                            </Disclosure.Button>\n                                        ))}\n\n                                    {/* login button */}\n                                    {!userInfo && mobileLogin && (\n                                        <>\n                                            {/* mobileLogin */}\n                                            <Disclosure.Button\n                                                as='div'\n                                                className={`block border-l-4 border-transparent py-2 pl-3 pr-4 text-base font-medium text-cu-black-800 hover:border-cu-black-200 hover:bg-gray-50 hover:text-cu-red `}\n                                            >\n                                                <Link\n                                                    href={mobileLogin.link ? mobileLogin.link : ''}\n                                                    onClick={(e: any) => {\n                                                        mobileLogin.onClick && e.preventDefault()\n                                                        mobileLogin.onClick &&\n                                                            mobileLogin.onClick(e)\n                                                        close()\n                                                    }}\n                                                >\n                                                    {mobileLogin.title}\n                                                </Link>\n                                            </Disclosure.Button>\n                                        </>\n                                    )}\n                                </div>\n\n                                {/* userInfo */}\n                                {userInfo && (\n                                    <div className='pt-4 pb-3 border-t border-gray-200'>\n                                        <div className='flex items-center px-4'>\n                                            <div className='flex-shrink-0'>\n                                                <Avatar user={userInfo} size='xs' rounded='full' />\n                                            </div>\n                                            <div className='ml-3'>\n                                                <div className='text-base font-medium text-gray-800'>\n                                                    {userInfo.firstName + ' ' + userInfo.lastName}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className='mt-3 space-y-1'>\n                                            {userMenuItems &&\n                                                userMenuItems.map(\n                                                    (item: DropDownItemProps, index: any) => (\n                                                        <Disclosure.Button\n                                                            key={index}\n                                                            as='div'\n                                                            className={`block border-l-4 border-transparent py-2 pl-3 pr-4 text-base font-medium text-cu-black-800 hover:border-cu-black-200 hover:bg-gray-50 hover:text-cu-red `}\n                                                        >\n                                                            <Link\n                                                                href={item.href ? item.href : ''}\n                                                                onClick={(e) => {\n                                                                    item.onClick &&\n                                                                        e.preventDefault()\n                                                                    item.onClick && item.onClick(e)\n                                                                    close()\n                                                                }}\n                                                            >\n                                                                {item.title}\n                                                            </Link>\n                                                        </Disclosure.Button>\n                                                    )\n                                                )}\n                                        </div>\n                                    </div>\n                                )}\n                            </>\n                        )}\n                    </Disclosure.Panel>\n                </>\n            )}\n        </Disclosure>\n    )\n}\n", "import { Combobox, Dialog, Transition } from '@headlessui/react'\nimport MagnifyingGlassIcon from '@heroicons/react/24/solid/MagnifyingGlassIcon'\nimport XMarkIcon from '@heroicons/react/24/solid/XMarkIcon'\nimport React, { ReactNode, useState, useEffect, Fragment } from 'react'\nimport { rdsOverlay } from '../../utils/tailwindClasses'\n\nexport interface SearchProps {\n    sourceData: any\n    searchOn?: string\n    children?: ReactNode\n}\n\nfunction classNames(...classes: (string | boolean)[]) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport const Search = ({ searchOn = 'title', sourceData, children }: SearchProps) => {\n    const [query, setQuery] = useState('')\n    const [open, setOpen] = useState(false)\n\n    const filteredDatabase =\n        query === ''\n            ? []\n            : sourceData.filter((sourceData: { [x: string]: string }) => {\n                  return sourceData[searchOn].toLowerCase().includes(query.toLowerCase())\n              })\n\n    const searchAvatar = children ? (\n        children\n    ) : (\n        <MagnifyingGlassIcon\n            className='w-5 h-5 text-gray-400 cursor-pointer left-4'\n            aria-hidden='true'\n        />\n    )\n\n    useEffect(() => {\n        function onKeydown(event: any) {\n            if (event.key === 'k' && (event.metaKey || event.ctrlKey)) {\n                setOpen(!open)\n            } else {\n            }\n        }\n\n        window.addEventListener('keydown', onKeydown)\n        return () => {\n            window.removeEventListener('keydown', onKeydown)\n        }\n    }, [open])\n\n    // Validations just checking on first , not in all\n\n    if (sourceData[0] && !sourceData[0].hasOwnProperty('url')) {\n        return (\n            <p className='text-cu-red'>\n                Url Does not exisit on Passed Database Please pass appropriate data\n            </p>\n        )\n    }\n\n    if (sourceData[0] && !sourceData[0].hasOwnProperty(searchOn)) {\n        return <p className='text-cu-red'>Passed search key does not exisit on passed Database</p>\n    }\n\n    return (\n        <>\n            <button onClick={() => setOpen(true)} aria-label='search' className='not-prose'>\n                {searchAvatar}\n            </button>\n\n            <Transition.Root show={open} as={Fragment} afterLeave={() => setQuery('')} appear>\n                <Dialog as='div' className='relative z-50 not-prose' onClose={setOpen}>\n                    <Transition.Child\n                        as={Fragment}\n                        enter='ease-out duration-300'\n                        enterFrom='opacity-0'\n                        enterTo='opacity-100'\n                        leave='ease-in duration-200'\n                        leaveFrom='opacity-100'\n                        leaveTo='opacity-0'\n                    >\n                        <div className={`fixed inset-0 transition-opacity ${rdsOverlay} `} />\n                    </Transition.Child>\n\n                    <div className='fixed inset-0 p-4 overflow-y-auto z-100 sm:p-6 md:p-20'>\n                        <Transition.Child\n                            as={Fragment}\n                            enter='ease-out duration-300'\n                            enterFrom='opacity-0 scale-95'\n                            enterTo='opacity-100 scale-100'\n                            leave='ease-in duration-200'\n                            leaveFrom='opacity-100 scale-100'\n                            leaveTo='opacity-0 scale-95'\n                        >\n                            <Dialog.Panel className='mx-auto mt-[20vh] max-w-xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all'>\n                                <Combobox\n                                    onChange={(sourceData) => (window.location = sourceData?.url)}\n                                    value={sourceData.searchOn}\n                                >\n                                    <div className='relative'>\n                                        <MagnifyingGlassIcon\n                                            className='pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-400'\n                                            aria-hidden='true'\n                                        />\n                                        <Combobox.Input\n                                            className='w-full h-12 pr-4 text-sm bg-transparent border rounded-lg text-cu-black-800 placeholder-cu-black-300 border-cu-black-100 pl-11 focus:border-cu-black-300 focus:ring-0'\n                                            placeholder='Search...'\n                                            onChange={(event) => setQuery(event.target.value)}\n                                        />\n                                        {query && (\n                                            <XMarkIcon\n                                                className='absolute top-3.5 right-4 h-4 w-4 text-gray-400'\n                                                aria-hidden='true'\n                                                onClick={() => {\n                                                    setQuery('')\n                                                }}\n                                            />\n                                        )}\n                                    </div>\n\n                                    {filteredDatabase.length > 0 && (\n                                        <Combobox.Options\n                                            static\n                                            className='py-2 overflow-y-auto text-sm text-gray-800 max-h-72 scroll-py-2'\n                                        >\n                                            {filteredDatabase.map((sourceData: any) => (\n                                                <Combobox.Option\n                                                    key={sourceData.id}\n                                                    value={sourceData}\n                                                    className={({ active }) =>\n                                                        classNames(\n                                                            'cursor-default select-none px-4 py-2',\n                                                            active && 'bg-cu-red text-white'\n                                                        )\n                                                    }\n                                                >\n                                                    {sourceData[searchOn]}\n                                                </Combobox.Option>\n                                            ))}\n                                        </Combobox.Options>\n                                    )}\n\n                                    {query !== '' && filteredDatabase.length === 0 && (\n                                        <p className='p-4 text-sm text-gray-500'>\n                                            Search not found\n                                        </p>\n                                    )}\n                                </Combobox>\n                            </Dialog.Panel>\n                        </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition.Root>\n        </>\n    )\n}\n", "import React from 'react'\nimport TableHeader from './TableHeader'\nimport TableRows from './TableRows'\nimport { useSortableTable } from '../../hooks/useSortableTable'\n\nexport interface ColumnDefinitionType<T, K extends keyof T> {\n    key: K\n    header: string\n    sort?: { sortable: boolean }\n}\n\nexport interface TableProps<T, K extends keyof T> {\n    data: Array<T>\n    columns: Array<ColumnDefinitionType<T, K>>\n    hasStripes?: boolean\n    hasShadow?: boolean\n    hasBorder?: boolean\n    range?: number[]\n}\n\nconst styles = {\n    core: `min-w-full overflow-hidden border-collapse border-separate rounded-lg not-prose border-spacing-0`,\n    shadow: `shadow-lg`,\n    border: `border border-cu-black-100`,\n}\n\nexport const Table = <T, K extends keyof T>({\n    data,\n    columns,\n    hasStripes = false,\n    hasShadow,\n    hasBorder,\n    range = [1, -1],\n}: TableProps<T, K>) => {\n    const [tableData, setTableData] = useSortableTable(data)\n    const borderStyle = hasBorder ? styles.border : ''\n    const shadowStyle = hasShadow ? styles.shadow : ''\n\n    return (\n        <table className={`${styles.core} ${borderStyle} ${shadowStyle}`}>\n            <TableHeader columns={columns} sortData={setTableData} />\n            <TableRows data={tableData} columns={columns} striped={hasStripes} range={range} />\n        </table>\n    )\n}\n", "import React from 'react'\nimport { useState } from 'react'\nimport { ColumnDefinitionType } from './Table'\nimport { ChevronUpDownIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/20/solid'\n\ntype TableHeaderProps<T, K extends keyof T> = {\n    columns: Array<ColumnDefinitionType<T, K>>\n    sortData: any\n}\n\nconst styles = {\n    core: `py-3.5 pl-3 pr-3 text-left text-sm font-semibold text-cu-black-900 `,\n    thead: `bg-gray-100 `,\n    sortable: `hover:cursor `,\n}\n\nconst TableHeader = <T, K extends keyof T>({ columns, sortData }: TableHeaderProps<T, K>) => {\n    const [ascending, setAscending] = useState(true)\n    const [active, setActive] = useState('')\n\n    const handleSortChange = (key: string) => {\n        const activeColumn = key\n        let asc = true\n\n        if (key === active) {\n            asc = !ascending\n        }\n\n        setActive(activeColumn)\n        setAscending(asc)\n        sortData(activeColumn, asc)\n    }\n\n    const headers = columns.map((column: any, index) => {\n        const sortableStyles = column.sort.sortable ? 'hover:cursor-pointer' : 'hover:cursor-auto'\n\n        return (\n            <th\n                scope='col'\n                key={`headerCell-${index}`}\n                className={`${styles.core} ${sortableStyles}`}\n                onClick={() => (column.sort.sortable ? handleSortChange(column.key) : undefined)}\n                aria-sort={\n                    column.key === active && ascending\n                        ? 'descending'\n                        : column.key === active && !ascending\n                        ? 'ascending'\n                        : undefined\n                }\n                aria-label={column.sort?.sortable ? 'Sort by ' + column.key : undefined}\n            >\n                {column.sort?.sortable ? (\n                    <div className='flex items-center'>\n                        <div>{column.header}</div>\n                        {column.key === active && ascending ? (\n                            <ChevronDownIcon className='inline-block ml-2 w-4 h-4' />\n                        ) : column.key === active && !ascending ? (\n                            <ChevronUpIcon className='inline-block ml-2 w-4 h-4' />\n                        ) : (\n                            <ChevronUpDownIcon className='inline-block ml-2 w-4 h-4' />\n                        )}\n                    </div>\n                ) : (\n                    column.header\n                )}\n            </th>\n        )\n    })\n\n    return (\n        <thead className={styles.thead}>\n            <tr>{headers}</tr>\n        </thead>\n    )\n}\n\nexport default TableHeader\n", "import React from 'react'\nimport { ColumnDefinitionType } from './Table'\n\ntype TableRowsProps<T, K extends keyof T> = {\n    data: Array<T>\n    columns: Array<ColumnDefinitionType<T, K>>\n    striped: boolean\n    range: number[]\n}\n\nconst styles = {\n    core: `whitespace-nowrap px-3 py-4 text-sm text-cu-black-600`,\n    tbody: `divide-y divide-gray-200 bg-white`,\n}\n\nconst TableRows = <T, K extends keyof T>({\n    data,\n    columns,\n    striped,\n    range,\n}: TableRowsProps<T, K>) => {\n    const stripedStyles = striped ? 'odd:bg-white even:bg-gray-50' : 'hover:bg-blue-50'\n    const rows = data.slice(range[0] - 1, range[1]).map((row, index) => {\n        return (\n            <tr\n                className={`${stripedStyles} [&>td]:border-b [&>td]:border-cu-gray-100 [&>td]:last:border-0`}\n                key={`row-${index}`}\n            >\n                {columns.map((column, index2) => {\n                    return (\n                        <td key={`cell-${index2}`} className={`${styles.core}`}>\n                            <>{row[column.key]}</>\n                        </td>\n                    )\n                })}\n            </tr>\n        )\n    })\n\n    return <tbody className={styles.tbody}>{rows}</tbody>\n}\n\nexport default TableRows\n", "import { useState, useEffect } from 'react'\n\nexport const useSortableTable = (data: any) => {\n    const [tableData, setTableData] = useState(data)\n    useEffect(() => {\n        setTableData(data)\n    }, [data])\n    const sortTableData = (orderBy: string | number, asc: boolean) => {\n        if (orderBy) {\n            const sortedData = [...tableData].sort((a, b) => {\n                if (a[orderBy] === null) return 1\n                if (b[orderBy] === null) return -1\n                if (a[orderBy] === null && b[orderBy] === null) return 0\n                return (\n                    a[orderBy].toString().localeCompare(b[orderBy].toString(), 'en', {\n                        numeric: true,\n                    }) * (asc ? 1 : -1)\n                )\n            })\n            setTableData(sortedData)\n        }\n    }\n\n    return [tableData, sortTableData]\n}\n", "import React, { useEffect, useState } from 'react'\nimport ReactPlayer from 'react-player'\nimport { Badge } from '../../Badge'\nimport { intervalToDuration } from 'date-fns'\n\nexport interface VideoCardProps {\n    source: any\n    tags?: Tags\n}\n\ninterface Tags {\n    category: { id: number; name: string; slug: string }[]\n}\n\nexport function VideoCard({ source, tags }: VideoCardProps) {\n    const [videoDuration, setVideoDuration] = useState(0)\n    const [videoTitle, setVideoTitle] = useState('')\n\n    const handleDuration = (duration: any) => {\n        setVideoDuration(duration)\n    }\n\n    useEffect(() => {\n        let link = source.toString()\n        if (link.includes('vimeo')) {\n            fetch(`https://vimeo.com/api/oembed.json?url=${source}`)\n                .then((res) => res.json())\n                .then((data) => setVideoTitle(data.title))\n        } else {\n            fetch(`https://noembed.com/embed?url=${source}`)\n                .then((res) => res.json())\n                .then((data) => setVideoTitle(data.title))\n        }\n    }, [source])\n\n    const duration = intervalToDuration({ start: 0, end: videoDuration * 1000 })\n\n    return (\n        <div className='not-prose group relative flex flex-col overflow-hidden rounded-lg bg-white shadow-lg duration-300 ease-in @container hover:scale-105 md:max-w-lg'>\n            <a className='relative flex flex-col h-full cursor-pointer'>\n                <div className='relative pt-[56.25%]'>\n                    <ReactPlayer\n                        url={source}\n                        className='absolute top-0 left-0'\n                        width='100%'\n                        height='100%'\n                        controls\n                        onDuration={handleDuration}\n                    />\n                </div>\n                <div className='flex flex-col space-y-2 py-6 px-7 @sm:md:space-y-3'>\n                    {videoDuration && (\n                        <p className='text-sm italic text-cu-black-600 @sm:md:text-base'>\n                            Duration: {`${duration.minutes}m : ${duration.seconds}s`}\n                        </p>\n                    )}\n                    <h3 className='text-lg font-semibold text-cu-black group-hover:text-cu-red @sm:md:text-xl'>\n                        {videoTitle}\n                    </h3>\n                </div>\n                {tags && (\n                    <div className='pb-5 mt-auto px-7'>\n                        {tags?.category?.map((tag) => (\n                            <Badge key={tag.id}>{tag.name}</Badge>\n                        ))}\n                    </div>\n                )}\n            </a>\n        </div>\n    )\n}\n", "import React from 'react'\n\ntype BaseArticleTypeProps = 'article' | 'section' | 'div'\n\nexport interface ArticleBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface ArticleProps {\n    children?: React.ReactNode\n    as?: BaseArticleTypeProps\n    hasProse?: boolean\n    content?: string\n    bgColor?: 'white' | 'grey'\n    maxWidth?: 'none' | 'full' | '5xl' | '7xl'\n}\n\nconst styles = {\n    prose: `prose prose-rds prose-lg md:prose-xl max-w-none prose-img:w-full prose-img:rounded-lg`,\n}\n\nexport const Article = ({ children, content }: ArticleProps) => {\n    return (\n        <>\n            {content && (\n                <article\n                    className={`${styles.prose}`}\n                    dangerouslySetInnerHTML={{ __html: content }}\n                />\n            )}\n\n            {!content && <article className={`${styles.prose}`}>{children}</article>}\n        </>\n    )\n}\n", "import React from 'react'\nimport { rdsTopSpacing } from '../../utils/tailwindClasses'\n\nexport interface AsideProps {\n    children: React.ReactNode\n    isSticky?: boolean\n    topSpace?: '8' | '12' | '16' | '20' | '24'\n}\n\nexport const Aside = ({ children, isSticky, topSpace }: AsideProps) => {\n    const stickyClass = isSticky ? 'sticky' : ''\n    const topClass = topSpace ? rdsTopSpacing[topSpace] : ''\n\n    return (\n        <aside className='relative'>\n            <div className={`${stickyClass} ${topClass}`}>{children}</div>\n        </aside>\n    )\n}\n", "import React from 'react'\nimport { rdsGridColumns, rdsGridSpacing, rdsMaxWidth } from '../../utils/tailwindClasses'\n\nconst styles = {\n    column: `cu-column mx-auto grid`,\n}\n\nexport interface ColumnProps {\n    children: React.ReactNode\n    maxWidth?: 'none' | 'full' | '5xl' | '7xl'\n    gridGap?: '0' | '5' | '10'\n    cols?: '1' | '2' | '3' | '4' | '1/3' | '2/3'\n    isNested?: boolean\n}\n\nexport const Column = ({ children, maxWidth = '5xl', gridGap = '10', cols = '1' }: ColumnProps) => {\n    return (\n        <div\n            className={`\n        ${styles.column}\n        ${rdsGridColumns[cols]}\n        ${rdsMaxWidth[maxWidth]} ${rdsGridSpacing[gridGap]}\n      `}\n        >\n            {children}\n        </div>\n    )\n}\n", "import React from 'react'\n\ntype BaseContainerTypeProps = 'section' | 'div'\n\nexport interface ContainerBaseProps {\n    as?: keyof JSX.IntrinsicElements\n}\n\nexport interface ContainerProps {\n    children?: React.ReactNode\n    as?: BaseContainerTypeProps\n    hasProse?: boolean\n    bgColor?: 'white' | 'grey'\n    maxWidth?: 'none' | 'full' | '5xl' | '7xl'\n}\n\nconst prose = {\n    prose: `prose prose-rds prose-lg md:prose-xl max-w-none prose-img:w-full prose-img:rounded-lg`,\n}\n\nconst styles = {\n    base: `cu-container py-10 px-8 -mx-8 md:py-14`,\n    white: `cu-container-white [&+.cu-container-white]:pt-0`,\n    grey: `cu-container-grey bg-cu-black-50 [&+.cu-container-grey]:pt-0`,\n    width5xl: `[&>:not(.cu-container):not(.cu-column)]:max-w-5xl [&>:not(.cu-container):not(.cu-column)]:mx-auto`,\n    width7xl: `[&>:not(.cu-container):not(.cu-column)]:max-w-7xl [&>:not(.cu-container):not(.cu-column)]:mx-auto`,\n    widthFull: `[&>:not(.cu-container):not(.cu-column)]:max-w-7xl [&>:not(.cu-container):not(.cu-column)]:mx-auto`,\n    autoMargin: `[&>:not(.cu-container):not(.cu-column)]:mx-auto`,\n}\n\nexport const Container = ({\n    as: Component = 'section',\n    children,\n    hasProse = false,\n    bgColor = 'white',\n    maxWidth = '5xl',\n}: ContainerProps) => {\n    const addProse = hasProse ? prose.prose : '[&>*:first-child]:-mt-0'\n    const bgStyles = bgColor === 'grey' ? `${styles.grey}` : `${styles.white}`\n\n    const childWidth = maxWidth\n        ? `${styles.autoMargin} [&>:not(.cu-container):not(.cu-column)]:max-w-${maxWidth}`\n        : ''\n\n    return (\n        <>\n            <Component className={`${styles.base} ${bgStyles} ${childWidth} ${addProse}`}>\n                {children}\n            </Component>\n        </>\n    )\n}\n", "import React from 'react'\n\nexport interface MainProps {\n    children: React.ReactNode\n    hasOverlap?: boolean\n}\n\nconst styles = {\n    core: `relative mx-8`,\n    overlap: `z-20 md:-mt-16 md:[&>.cu-container-white:first-child]:pt-0`,\n}\n\nexport const Main = ({ children, hasOverlap }: MainProps) => {\n    const overlapStyles = hasOverlap ? styles.overlap : ''\n\n    return <main className={`${styles.core} ${overlapStyles}`}>{children}</main>\n}\n", "import React from 'react'\n\nconst styles = {\n    panel: `cu-panel not-prose rounded-lg bg-white [&+.cu-panel]:mt-8 overflow-hidden`,\n    border: `border border-cu-black-100`,\n    shadow: `shadow-lg`,\n    title: `px-6 py-4 text-base font-bold border-b rounded-t-lg bg-gray-50 text-cu-black-900`,\n}\n\nexport interface PanelProps {\n    children: React.ReactNode\n    hasBorder?: boolean\n    hasShadow?: boolean\n    hasGap?: boolean\n}\n\nconst PanelBase = ({ children, hasBorder, hasShadow }: PanelProps) => {\n    const borderStyle = hasBorder ? styles.border : ''\n    const shadowStyle = hasShadow ? styles.shadow : ''\n\n    return <div className={`${styles.panel} ${borderStyle} ${shadowStyle}`}>{children}</div>\n}\n\nconst Title = ({ children }: any) => {\n    return <h2 className={`${styles.title}`}>{children}</h2>\n}\n\nPanelBase.displayName = 'Panel'\nTitle.displayName = 'Panel.Title'\n\nexport const Panel = Object.assign(PanelBase, {\n    Title,\n})\n", "import React from 'react'\n\nconst styles = {\n    stackedlist: `overflow-hidden`,\n    hasDividers: `[&>li]:border-cu-cu-black-50 [&>li]:border-b last:[&>li]:border-b-0`,\n}\n\nexport interface StackedListProps {\n    children: React.ReactNode\n    hasDividers?: boolean\n}\n\nexport const StackedList = ({ children, hasDividers }: StackedListProps) => {\n    return (\n        <ul className={`${styles.stackedlist} ${hasDividers ? styles.hasDividers : ''}`}>\n            {children}\n        </ul>\n    )\n}\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "Alert", "Article", "Aside", "Avatar", "Badge", "Banner", "Button", "Calendar", "CardLoader", "Column", "Container", "DetailsItem", "DropDown", "EventCard", "EventItem", "EventLoader", "EventLocation", "FeedItem", "FileItem", "Filter", "FooterBasic", "FooterStandard", "FooterWave", "HeroIcon", "JobItem", "Link", "LinkItem", "LocationPicker", "Main", "MarketplaceItem", "Meta", "Modal", "NewsCard", "NewsItem", "NumberCard", "Pagination", "Panel", "SearchForm", "SocialShare", "StackedList", "Table", "Toast", "TopNav", "VideoCard", "__toCommonJS", "import_react", "import_outline", "import_solid", "Alerter", "children", "React", "Title", "Content", "AlertBase", "type", "showAlert", "setShowAlert", "AlertTypes", "Alert", "import_react", "rdsMaxWidth", "rdsOverlay", "rdsGridColumns", "rdsGridSpacing", "rdsTextColor", "rdsFontSizes", "rdsWidth", "rdsHeight", "rdsRounded", "rdsBorderWidth", "rdsBorderColor", "rdsTopSpacing", "styles", "avatarSizes", "Avatar", "size", "rounded", "borderWidth", "borderColor", "hasShadow", "user", "onClick", "firstName", "lastName", "image", "initials", "shadowStyle", "roundedStyle", "rdsRounded", "borderWidthStyle", "rdsBorderWidth", "borderColorStyle", "rdsBorderColor", "hasOnClick", "React", "import_react", "styles", "BadgeBase", "children", "React", "Badge", "import_react", "import_react", "normalizeColor", "hexCode", "n", "MiniGl", "canvas", "width", "height", "debug", "_miniGl", "debug_output", "context", "e", "t", "vertexShaders", "fragments", "uniforms", "material", "getShaderByType", "type", "source", "shader", "getUniformVariableDeclarations", "uniform", "value", "prefix", "name", "i", "length", "name_no_prefix", "orientation", "s", "geometry", "o", "r", "segment_width", "segment_height", "yIndex", "xIndex", "l", "mesh", "attribute", "a", "object", "propertyName", "val", "Animation", "current", "selector", "index", "cssPropertyName", "hex", "hexTemp", "BannerAnimated", "gradient", "Animation", "canvasRef", "divStyle", "React", "styles", "typeStyles", "contentStyles", "BannerBase", "children", "title", "paragraph", "maxWidth", "isType", "fontSize", "align", "hasOverlap", "image", "imageAlt", "bannerSpacing", "flexAlign", "contentAlign", "overlapStyles", "React", "rdsMaxWidth", "rdsFontSizes", "BannerImg", "BannerWave", "BannerAnimated", "ButtonGroup", "Banner", "import_react", "import_react", "SolidIcons", "OutlineIcons", "HeroIcon", "icon", "isOutline", "color", "size", "Icon", "OutlineIcons", "SolidIcons", "hasColor", "rdsTextColor", "React", "rdsWidth", "rdsHeight", "import_ChevronDownIcon", "import_react", "Link", "ref", "href", "as", "children", "prefetch", "passHref", "replace", "shallow", "scroll", "locale", "className", "onClick", "onMouseEnter", "onTouchStart", "LinkParams", "React", "buttonSizes", "styles", "Button", "isType", "size", "title", "icon", "hasShadow", "isFull", "isCenter", "url", "isDisabled", "hasDropDown", "rest", "shadowStyles", "fullStyles", "centerStyles", "iconSize", "React", "HeroIcon", "ChevronDownIcon", "Link", "import_react", "import_solid", "import_date_fns", "classNames", "classes", "Calendar", "events", "callback", "today", "selectedDay", "setSelectedDay", "currentMonth", "setCurrentMonth", "showClear", "setShowClear", "firstDayCurrentMonth", "colStartClasses", "days", "previousMonth", "firstDayNextMonth", "nextMonth", "styles", "React", "day", "dayIdx", "event", "Button", "import_react", "CardLoader", "React", "import_react", "import_ChevronDownIcon", "styles", "DropDown", "children", "buttonText", "renderAs", "listItems", "menuAlign", "React", "ChevronDownIcon", "close", "item", "index", "Link", "e", "HeroIcon", "import_react", "DetailsItemBase", "Component", "children", "React", "Content", "Title", "as", "fontSize", "title", "rdsFontSizes", "Icon", "icon", "HeroIcon", "Description", "description", "DetailsItem", "import_react", "EventLoader", "React", "import_react", "import_outline", "import_date_fns", "EventItem", "Component", "link", "title", "startDateTime", "endDateTime", "featuredImage", "on_campus", "on_campus_building", "on_campus_room_number", "event_address", "tags", "defaultImage", "getMonthName", "month", "short", "d", "startDate", "endDate", "isEventSameDay", "eventStartMonth", "eventStartDate", "eventEndDate", "formatTime", "date", "hours", "minutes", "ampm", "strTime", "multiDayDisplay", "React", "Link", "tag", "Badge", "import_outline", "import_date_fns", "import_react", "EventCard", "title", "HeadLevel", "link", "startDateTime", "endDateTime", "featuredImage", "onCampus", "onCampusBuilding", "onCampusRoomNumber", "eventAddress", "tags", "defaultImage", "getMonthName", "month", "short", "d", "formatTime", "date", "hours", "minutes", "ampm", "strTime", "startDate", "endDate", "eventStartDate", "eventStartMonth", "eventEndDate", "isEventSameDay", "multiDayDisplay", "React", "Link", "tag", "Badge", "import_react", "import_api", "EventLocation", "lat", "lng", "location", "zoom", "showInfo", "setShowInfo", "React", "mapRef", "onMapLoad", "map", "options", "import_react", "import_outline", "import_solid", "styles", "classNames", "classes", "Filter", "sortOptions", "filters", "callback", "open", "setOpen", "sortItem", "setSortItem", "selectedItems", "setSelectedItems", "isSelected", "name", "activeFilters", "setActiveFilters", "handleSelect", "selected", "item", "handleRemove", "React", "section", "option", "optionIdx", "active", "Link", "sectionIdx", "activeFilter", "index", "import_react", "import_react", "FooterWave", "React", "Link", "FooterBasic", "React", "FooterWave", "import_react", "FooterStandardLinks", "Social", "props", "React", "FooterStandard", "FooterStandardLinks", "item", "index", "Link", "FooterWave", "import_react", "import_outline", "FeedItemBase", "Component", "children", "link", "React", "Link", "Content", "Title", "as", "fontSize", "title", "rdsFontSizes", "Date", "date", "Excerpt", "excerpt", "Category", "category", "Badge", "FeedItem", "import_react", "import_outline", "FileItemBase", "Component", "children", "link", "React", "Link", "Content", "Title", "as", "fontSize", "title", "rdsFontSizes", "Details", "filesize", "date", "FileItem", "import_react", "import_outline", "JobItemBase", "Component", "children", "link", "React", "Link", "Content", "Title", "as", "fontSize", "title", "rdsFontSizes", "Details", "dateData", "date", "JobItem", "import_react", "import_outline", "LinkItemBase", "Component", "children", "link", "React", "Link", "Content", "Title", "as", "fontSize", "title", "rdsFontSizes", "LinkItem", "import_react", "import_outline", "import_react_places_autocomplete", "classNames", "classes", "LocationPicker", "address", "setAddress", "coordinates", "setCoordinates", "handleSelect", "value", "results", "latLng", "React", "PlacesAutocomplete", "getInputProps", "suggestions", "getSuggestionItemProps", "suggestion", "active", "EventLocation", "import_react", "Modal", "children", "title", "description", "noButton", "isOpen", "setIsOpen", "hasOverlay", "cancelButtonRef", "React", "rdsOverlay", "Button", "import_react", "MetaBase", "description", "children", "React", "Title", "title", "Icons", "path", "Social", "type", "card", "image", "Meta", "import_react", "import_outline", "MarketplaceItemBase", "Component", "children", "link", "React", "Link", "Content", "Title", "as", "fontSize", "title", "rdsFontSizes", "Image", "image", "alt", "Details", "cost", "condition", "Category", "category", "Badge", "MarketplaceItem", "import_react", "NewsCard", "title", "HeadLevel", "link", "date", "image", "alt", "excerpt", "tags", "formatedDate", "React", "Link", "tag", "Badge", "import_react", "NumberCard", "title", "content", "isCenter", "React", "import_react", "import_outline", "NewsItemBase", "Component", "children", "link", "React", "Link", "Content", "Title", "as", "fontSize", "title", "rdsFontSizes", "Image", "image", "alt", "Date", "date", "Excerpt", "excerpt", "NewsItem", "import_react", "import_solid", "import_react", "DOTS", "range", "start", "end", "length", "_", "idx", "usePagination", "totalCount", "pageSize", "siblingCount", "currentPage", "totalPageCount", "leftSiblingIndex", "rightSiblingIndex", "shouldShowLeftDots", "shouldShowRightDots", "firstPageIndex", "lastPageIndex", "leftItemCount", "rightItemCount", "rightRange", "middleRange", "usePagination_default", "Pagination", "hasBorder", "hasSpacing", "totalCount", "siblingCount", "pageSize", "callback", "currentPage", "setCurrentPage", "paginationRange", "usePagination_default", "onNext", "lastPage", "onPrevious", "onCurrent", "pageNumber", "styles", "borderStyles", "spacingStyles", "startResult", "endResult", "React", "index", "DOTS", "import_react", "SocialShare", "title", "link", "ShareItem", "React", "DropDown", "Button", "import_react", "import_outline", "SearchForm", "callback", "message", "setMessage", "handleChange", "event", "React", "import_react", "import_outline", "import_solid", "Toaster", "children", "React", "Title", "Content", "ToastBase", "type", "showToast", "setShowToast", "toastTypes", "Toast", "import_react", "import_solid", "import_react", "import_MagnifyingGlassIcon", "import_XMarkIcon", "classNames", "classes", "Search", "searchOn", "sourceData", "children", "query", "setQuery", "open", "setOpen", "filteredDatabase", "searchAvatar", "React", "MagnifyingGlassIcon", "onKeydown", "event", "rdsOverlay", "XMarkIcon", "active", "TopNav", "children", "logoUrl", "title", "brand", "hasSearch", "sourceData", "searchOn", "navLinks", "mobileLinks", "userMenuItems", "userInfo", "sticky", "login", "mobileLogin", "brandLogo", "React", "open", "Link", "Search", "item", "index", "Avatar", "DropDown", "close", "e", "import_react", "import_react", "import_solid", "styles", "TableHeader", "columns", "sortData", "ascending", "setAscending", "active", "setActive", "handleSortChange", "key", "activeColumn", "asc", "headers", "column", "index", "sortableStyles", "React", "TableHeader_default", "import_react", "styles", "TableRows", "data", "columns", "striped", "range", "stripedStyles", "rows", "row", "index", "React", "column", "index2", "TableRows_default", "import_react", "useSortableTable", "data", "tableData", "setTableData", "orderBy", "asc", "sortedData", "a", "b", "styles", "Table", "data", "columns", "hasStripes", "hasShadow", "hasBorder", "range", "tableData", "setTableData", "useSortableTable", "borderStyle", "shadowStyle", "React", "TableHeader_default", "TableRows_default", "import_react", "import_react_player", "import_date_fns", "VideoCard", "source", "tags", "videoDuration", "setVideoDuration", "videoTitle", "setVideoTitle", "handleDuration", "duration", "res", "data", "React", "ReactPlayer", "tag", "Badge", "import_react", "styles", "Article", "children", "content", "React", "import_react", "Aside", "children", "isSticky", "topSpace", "stickyClass", "topClass", "rdsTopSpacing", "React", "import_react", "styles", "Column", "children", "maxWidth", "gridGap", "cols", "React", "rdsGridColumns", "rdsMaxWidth", "rdsGridSpacing", "import_react", "prose", "styles", "Container", "Component", "children", "hasProse", "bgColor", "maxWidth", "addProse", "bgStyles", "childWidth", "React", "import_react", "styles", "Main", "children", "hasOverlap", "overlapStyles", "React", "import_react", "styles", "PanelBase", "children", "hasBorder", "hasShadow", "borderStyle", "shadowStyle", "React", "Title", "Panel", "import_react", "styles", "StackedList", "children", "hasDividers", "React"]
}
