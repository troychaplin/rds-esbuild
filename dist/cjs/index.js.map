{
  "version": 3,
  "sources": ["../../src/index.ts", "../../src/components/Button/Button.tsx", "../../src/components/Header/Header.tsx", "../../src/layouts/Aside/Aside.tsx", "../../src/utils/tailwindClasses.tsx", "../../src/layouts/Column/Column.tsx", "../../src/layouts/Container/Container.tsx", "../../src/layouts/Main/Main.tsx", "../../src/layouts/Panel/Panel.tsx", "../../src/layouts/StackedList/StackedList.tsx"],
  "sourcesContent": ["export * from './components'\nexport * from './layouts'\n", "import React from 'react'\nimport './button.css'\n\ninterface ButtonProps {\n    /**\n     * Is this the principal call to action on the page?\n     */\n    primary?: boolean\n    /**\n     * What background color to use\n     */\n    backgroundColor?: string\n    /**\n     * How large should the button be?\n     */\n    size?: 'small' | 'medium' | 'large'\n    /**\n     * Button contents\n     */\n    label: string\n    /**\n     * Optional click handler\n     */\n    onClick?: () => void\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n    primary = false,\n    size = 'medium',\n    backgroundColor,\n    label,\n    ...props\n}: ButtonProps) => {\n    const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary'\n    return (\n        <button\n            type='button'\n            className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n            style={{ backgroundColor }}\n            {...props}\n        >\n            {label}\n        </button>\n    )\n}\n", "import React from 'react'\nimport { Button } from '../Button/Button'\nimport './header.css'\n\ntype User = {\n    name: string\n}\n\ninterface HeaderProps {\n    user?: User\n    onLogin: () => void\n    onLogout: () => void\n    onCreateAccount: () => void\n}\n\nexport const Header = ({ user, onLogin, onLogout, onCreateAccount }: HeaderProps) => (\n    <header>\n        <div className='wrapper'>\n            <div>\n                <svg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'>\n                    <g fill='none' fillRule='evenodd'>\n                        <path\n                            d='M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z'\n                            fill='#FFF'\n                        />\n                        <path\n                            d='M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z'\n                            fill='#555AB9'\n                        />\n                        <path\n                            d='M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z'\n                            fill='#91BAF8'\n                        />\n                    </g>\n                </svg>\n                <h1>Acme</h1>\n            </div>\n            <div>\n                {user ? (\n                    <>\n                        <span className='welcome'>\n                            Welcome, <b>{user.name}</b>!\n                        </span>\n                        <Button size='small' onClick={onLogout} label='Log out' />\n                    </>\n                ) : (\n                    <>\n                        <Button size='small' onClick={onLogin} label='Log in' />\n                        <Button primary size='small' onClick={onCreateAccount} label='Sign up' />\n                    </>\n                )}\n            </div>\n        </div>\n    </header>\n)\n", "import React from 'react'\nimport { rdsTopSpacing } from '../../utils/tailwindClasses'\n\nexport interface AsideProps {\n    children: React.ReactNode\n    isSticky?: boolean\n    topSpace?: '8' | '12' | '16' | '20' | '24'\n}\n\nexport const Aside = ({ children, isSticky, topSpace }: AsideProps) => {\n    const stickyClass = isSticky ? 'sticky' : ''\n    const topClass = topSpace ? rdsTopSpacing[topSpace] : ''\n\n    return (\n        <aside>\n            <div className={`${stickyClass} ${topClass}`}>{children}</div>\n        </aside>\n    )\n}\n", "export const rdsMaxWidth = {\n    none: 'max-w-none',\n    full: 'max-w-full',\n    '3xl': 'max-w-3xl',\n    '4xl': 'max-w-4xl',\n    '5xl': 'max-w-5xl',\n    '6xl': 'max-w-6xl',\n    '7xl': 'max-w-7xl',\n}\n\nexport const rdsGridColumns = {\n    '1': '',\n    '2': 'md:grid-cols-2',\n    '3': 'md:grid-cols-3',\n    '4': 'md:grid-cols-2 lg:grid-cols-4',\n    '1/3': 'lg:grid-cols-3 lg:[&>*:last-child]:col-span-2',\n    '2/3': 'lg:grid-cols-3 lg:[&>*:first-child]:col-span-2',\n}\n\nexport const rdsGridSpacing = {\n    '0': 'gap-0 [&+.cu-column]:mt-0', // none\n    '0.5': 'gap-0.5 [&+.cu-column]:mt-0.5', // 2px\n    '1': 'gap-1 [&+.cu-column]:mt-1', // 4px\n    '2': 'gap-2 [&+.cu-column]:mt-2', // 8px\n    '4': 'gap-4 [&+.cu-column]:mt-4', // 16px\n    '8': 'gap-8 [&+.cu-column]:mt-8', // 32px\n    '10': 'gap-10 [&+.cu-column]:mt-10', // 40px\n}\n\nexport const rdsBgColor = {\n    none: 'bg-transparent',\n    black: 'bg-cu-black-800',\n    white: 'bg-white',\n    red: 'bg-cu-red',\n    grey: 'bg-cu-black-50',\n    'dark-grey': 'bg-cu-black-600',\n}\n\nexport const rdsTextColor = {\n    black: 'text-cu-black-800',\n    white: 'text-white',\n    red: 'text-cu-red',\n    grey: 'text-cu-black-50',\n    'dark-grey': 'text-cu-black-600',\n    green: 'text-green-400',\n    yellow: 'text-yellow-400',\n}\n\nexport const rdsFontSizes = {\n    base: 'md:text-base',\n    lg: 'md:text-lg',\n    xl: 'md:text-xl',\n    '4xl': 'md:text-4xl',\n    '5xl': 'md:text-5xl',\n    '6xl': 'md:text-6xl',\n}\n\nexport const rdsWidth = {\n    4: 'w-4',\n    5: 'w-5',\n    6: 'w-6',\n    7: 'w-7',\n    8: 'w-8',\n    12: 'w-12',\n    16: 'w-16',\n    20: 'w-20',\n    24: 'w-24',\n}\n\nexport const rdsHeight = {\n    4: 'h-4',\n    5: 'h-5',\n    6: 'h-6',\n    7: 'h-7',\n    8: 'h-8',\n    12: 'h-12',\n    16: 'h-16',\n    20: 'h-20',\n    24: 'h-24',\n}\n\nexport const rdsRounded = {\n    base: 'rounded',\n    md: 'rounded-md',\n    lg: 'rounded-lg',\n    xl: 'rounded-xl',\n    full: 'rounded-full',\n}\n\nexport const rdsBorderWidth = {\n    1: 'border',\n    2: 'border-2',\n    4: 'border-4',\n    8: 'border-8',\n}\n\nexport const rdsBorderColor = {\n    black: 'border-cu-black-800',\n    white: 'border-white',\n    red: 'border-cu-red',\n    grey: 'border-cu-black-50',\n    'dark-grey': 'border-cu-black-600',\n}\n\nexport const rdsTopSpacing = {\n    '8': 'top-8',\n    '12': 'top-12',\n    '16': 'top-16',\n    '20': 'top-20',\n    '24': 'top-24',\n}\n", "import React from 'react'\nimport { rdsGridColumns, rdsGridSpacing, rdsMaxWidth } from '../../utils/tailwindClasses'\n\nconst styles = {\n    column: `cu-column mx-auto grid grid-cols-1 [&:last-child]:mb-0`,\n}\n\nexport interface ColumnProps {\n    children: React.ReactNode\n    maxWidth?: 'none' | 'full' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl'\n    gridGap?: '0' | '0.5' | '1' | '2' | '4' | '8' | '10'\n    cols?: '1' | '2' | '3' | '4' | '1/3' | '2/3'\n    isNested?: boolean\n}\n\nexport const Column = ({ children, maxWidth = '5xl', gridGap = '8', cols = '1' }: ColumnProps) => {\n    return (\n        <div\n            className={`\n        ${styles.column}\n        ${rdsGridColumns[cols]}\n        ${rdsMaxWidth[maxWidth]} ${rdsGridSpacing[gridGap]}\n      `}\n        >\n            {children}\n        </div>\n    )\n}\n", "import React from 'react'\nimport { rdsBgColor } from '../../utils/tailwindClasses'\n\nconst styles = {\n    //   container: `cu-container py-8`,\n    container: `cu-container not-prose py-10 lg:py-12 px-6 lg:px-8 [&.bg-cu-black-50+.cu-container.bg-cu-black-50]:pt-0 [&.bg-transparent+.cu-container.bg-transparent]:pt-0`,\n}\n\nexport interface ContainerProps {\n    children: React.ReactNode\n    bgColor?: 'none' | 'grey'\n}\n\nexport const Container = ({ children, bgColor = 'none' }: ContainerProps) => {\n    const bgStyles = bgColor ? rdsBgColor[bgColor] : ''\n    return <div className={`${styles.container} ${bgStyles}`}>{children}</div>\n}\n", "import React from 'react'\n\nexport interface MainProps {\n    children: React.ReactNode\n    hasOverlap?: boolean\n    hasSpacing?: boolean\n}\n\nconst styles = {\n    core: `relative`,\n    spacing: `py-10 lg:py-12 px-6 lg:px-8`,\n    overlap: `z-20 -mt-20 md:-mt-32`,\n}\n\nexport const Main = ({ children, hasOverlap, hasSpacing }: MainProps) => {\n    const overlapStyles = hasOverlap ? styles.overlap : ''\n    const spacingStyles = hasSpacing ? styles.spacing : ''\n\n    return <main className={`${styles.core} ${spacingStyles} ${overlapStyles}`}>{children}</main>\n}\n", "import React from 'react'\n\nconst styles = {\n    panel: `cu-panel not-prose rounded-lg bg-white [&+.cu-panel]:mt-8`,\n    border: `border border-cu-black-100`,\n    shadow: `shadow-lg`,\n    title: `px-6 py-4 text-base font-bold border-b rounded-t-lg bg-gray-50 text-cu-black-900`,\n}\n\nexport interface PanelProps {\n    children: React.ReactNode\n    hasBorder?: boolean\n    hasShadow?: boolean\n    hasGap?: boolean\n}\n\nconst PanelBase = ({ children, hasBorder, hasShadow }: PanelProps) => {\n    const borderStyle = hasBorder ? styles.border : ''\n    const shadowStyle = hasShadow ? styles.shadow : ''\n\n    return <div className={`${styles.panel} ${borderStyle} ${shadowStyle}`}>{children}</div>\n}\n\nconst Title = ({ children }: any) => {\n    return <h2 className={`${styles.title}`}>{children}</h2>\n}\n\nPanelBase.displayName = 'Panel'\nTitle.displayName = 'Panel.Title'\n\nexport const Panel = Object.assign(PanelBase, {\n    Title,\n})\n", "import React from 'react'\n\nconst styles = {\n    stackedlist: `overflow-hidden`,\n    hasDividers: `[&>li]:border-cu-cu-black-50 [&>li]:border-b last:[&>li]:border-b-0`,\n}\n\nexport interface StackedListProps {\n    children: React.ReactNode\n    hasDividers?: boolean\n}\n\nexport const StackedList = ({ children, hasDividers }: StackedListProps) => {\n    return (\n        <ul className={`${styles.stackedlist} ${hasDividers ? styles.hasDividers : ''}`}>\n            {children}\n        </ul>\n    )\n}\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,WAAAE,EAAA,WAAAC,EAAA,WAAAC,EAAA,cAAAC,EAAA,WAAAC,EAAA,SAAAC,EAAA,UAAAC,EAAA,gBAAAC,IAAA,eAAAC,EAAAV,GCAA,IAAAW,EAAkB,oBA6BX,IAAMC,EAAS,CAAC,CACnB,QAAAC,EAAU,GACV,KAAAC,EAAO,SACP,gBAAAC,EACA,MAAAC,EACA,GAAGC,CACP,IAAmB,CACf,IAAMC,EAAOL,EAAU,4BAA8B,8BACrD,OACI,EAAAM,QAAA,cAAC,UACG,KAAK,SACL,UAAW,CAAC,mBAAoB,qBAAqBL,IAAQI,CAAI,EAAE,KAAK,GAAG,EAC3E,MAAO,CAAE,gBAAAH,CAAgB,EACxB,GAAGE,GAEHD,CACL,CAER,EC/CA,IAAAI,EAAkB,oBAeX,IAAMC,EAAS,CAAC,CAAE,KAAAC,EAAM,QAAAC,EAAS,SAAAC,EAAU,gBAAAC,CAAgB,IAC9D,EAAAC,QAAA,cAAC,cACG,EAAAA,QAAA,cAAC,OAAI,UAAU,WACX,EAAAA,QAAA,cAAC,WACG,EAAAA,QAAA,cAAC,OAAI,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,MAAM,8BAClD,EAAAA,QAAA,cAAC,KAAE,KAAK,OAAO,SAAS,WACpB,EAAAA,QAAA,cAAC,QACG,EAAE,oFACF,KAAK,OACT,EACA,EAAAA,QAAA,cAAC,QACG,EAAE,mEACF,KAAK,UACT,EACA,EAAAA,QAAA,cAAC,QACG,EAAE,iEACF,KAAK,UACT,CACJ,CACJ,EACA,EAAAA,QAAA,cAAC,UAAG,MAAI,CACZ,EACA,EAAAA,QAAA,cAAC,WACIJ,EACG,EAAAI,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAAC,QAAK,UAAU,WAAU,YACb,EAAAA,QAAA,cAAC,SAAGJ,EAAK,IAAK,EAAI,GAC/B,EACA,EAAAI,QAAA,cAACC,EAAA,CAAO,KAAK,QAAQ,QAASH,EAAU,MAAM,UAAU,CAC5D,EAEA,EAAAE,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAACC,EAAA,CAAO,KAAK,QAAQ,QAASJ,EAAS,MAAM,SAAS,EACtD,EAAAG,QAAA,cAACC,EAAA,CAAO,QAAO,GAAC,KAAK,QAAQ,QAASF,EAAiB,MAAM,UAAU,CAC3E,CAER,CACJ,CACJ,ECrDJ,IAAAG,EAAkB,oBCAX,IAAMC,EAAc,CACvB,KAAM,aACN,KAAM,aACN,MAAO,YACP,MAAO,YACP,MAAO,YACP,MAAO,YACP,MAAO,WACX,EAEaC,EAAiB,CAC1B,EAAK,GACL,EAAK,iBACL,EAAK,iBACL,EAAK,gCACL,MAAO,gDACP,MAAO,gDACX,EAEaC,EAAiB,CAC1B,EAAK,4BACL,MAAO,gCACP,EAAK,4BACL,EAAK,4BACL,EAAK,4BACL,EAAK,4BACL,GAAM,6BACV,EAEaC,EAAa,CACtB,KAAM,iBACN,MAAO,kBACP,MAAO,WACP,IAAK,YACL,KAAM,iBACN,YAAa,iBACjB,EAoEO,IAAMC,EAAgB,CACzB,EAAK,QACL,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,QACV,EDrGO,IAAMC,EAAQ,CAAC,CAAE,SAAAC,EAAU,SAAAC,EAAU,SAAAC,CAAS,IAAkB,CACnE,IAAMC,EAAcF,EAAW,SAAW,GACpCG,EAAWF,EAAWG,EAAcH,CAAQ,EAAI,GAEtD,OACI,EAAAI,QAAA,cAAC,aACG,EAAAA,QAAA,cAAC,OAAI,UAAW,GAAGH,KAAeC,KAAaJ,CAAS,CAC5D,CAER,EElBA,IAAAO,EAAkB,oBAGlB,IAAMC,EAAS,CACX,OAAQ,wDACZ,EAUaC,EAAS,CAAC,CAAE,SAAAC,EAAU,SAAAC,EAAW,MAAO,QAAAC,EAAU,IAAK,KAAAC,EAAO,GAAI,IAEvE,EAAAC,QAAA,cAAC,OACG,UAAW;AAAA,UACbN,EAAO;AAAA,UACPO,EAAeF,CAAI;AAAA,UACnBG,EAAYL,CAAQ,KAAKM,EAAeL,CAAO;AAAA,SAG5CF,CACL,ECzBR,IAAAQ,EAAkB,oBAGlB,IAAMC,EAAS,CAEX,UAAW,8JACf,EAOaC,EAAY,CAAC,CAAE,SAAAC,EAAU,QAAAC,EAAU,MAAO,IAAsB,CACzE,IAAMC,EAAWD,EAAUE,EAAWF,CAAO,EAAI,GACjD,OAAO,EAAAG,QAAA,cAAC,OAAI,UAAW,GAAGN,EAAO,aAAaI,KAAaF,CAAS,CACxE,EChBA,IAAAK,EAAkB,oBAQZC,EAAS,CACX,KAAM,WACN,QAAS,8BACT,QAAS,uBACb,EAEaC,EAAO,CAAC,CAAE,SAAAC,EAAU,WAAAC,EAAY,WAAAC,CAAW,IAAiB,CACrE,IAAMC,EAAgBF,EAAaH,EAAO,QAAU,GAC9CM,EAAgBF,EAAaJ,EAAO,QAAU,GAEpD,OAAO,EAAAO,QAAA,cAAC,QAAK,UAAW,GAAGP,EAAO,QAAQM,KAAiBD,KAAkBH,CAAS,CAC1F,ECnBA,IAAAM,EAAkB,oBAEZC,EAAS,CACX,MAAO,4DACP,OAAQ,6BACR,OAAQ,YACR,MAAO,kFACX,EASMC,EAAY,CAAC,CAAE,SAAAC,EAAU,UAAAC,EAAW,UAAAC,CAAU,IAAkB,CAClE,IAAMC,EAAcF,EAAYH,EAAO,OAAS,GAC1CM,EAAcF,EAAYJ,EAAO,OAAS,GAEhD,OAAO,EAAAO,QAAA,cAAC,OAAI,UAAW,GAAGP,EAAO,SAASK,KAAeC,KAAgBJ,CAAS,CACtF,EAEMM,EAAQ,CAAC,CAAE,SAAAN,CAAS,IACf,EAAAK,QAAA,cAAC,MAAG,UAAW,GAAGP,EAAO,SAAUE,CAAS,EAGvDD,EAAU,YAAc,QACxBO,EAAM,YAAc,cAEb,IAAMC,EAAQ,OAAO,OAAOR,EAAW,CAC1C,MAAAO,CACJ,CAAC,EChCD,IAAAE,EAAkB,oBAEZC,EAAS,CACX,YAAa,kBACb,YAAa,qEACjB,EAOaC,EAAc,CAAC,CAAE,SAAAC,EAAU,YAAAC,CAAY,IAE5C,EAAAC,QAAA,cAAC,MAAG,UAAW,GAAGJ,EAAO,eAAeG,EAAcH,EAAO,YAAc,MACtEE,CACL",
  "names": ["src_exports", "__export", "Aside", "Button", "Column", "Container", "Header", "Main", "Panel", "StackedList", "__toCommonJS", "import_react", "Button", "primary", "size", "backgroundColor", "label", "props", "mode", "React", "import_react", "Header", "user", "onLogin", "onLogout", "onCreateAccount", "React", "Button", "import_react", "rdsMaxWidth", "rdsGridColumns", "rdsGridSpacing", "rdsBgColor", "rdsTopSpacing", "Aside", "children", "isSticky", "topSpace", "stickyClass", "topClass", "rdsTopSpacing", "React", "import_react", "styles", "Column", "children", "maxWidth", "gridGap", "cols", "React", "rdsGridColumns", "rdsMaxWidth", "rdsGridSpacing", "import_react", "styles", "Container", "children", "bgColor", "bgStyles", "rdsBgColor", "React", "import_react", "styles", "Main", "children", "hasOverlap", "hasSpacing", "overlapStyles", "spacingStyles", "React", "import_react", "styles", "PanelBase", "children", "hasBorder", "hasShadow", "borderStyle", "shadowStyle", "React", "Title", "Panel", "import_react", "styles", "StackedList", "children", "hasDividers", "React"]
}
